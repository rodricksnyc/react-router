{"version":3,"file":"Filter.js","names":["Filter","expression","type","propsExpressionType","expressionType","loadUserAttributes","skipFilterConfigCheck","props","useMemo","getExpressionType","field","undefined","validationMessage","useValidationMessage","isRequired","getAST","updateASTFromProps","userAttributes","useState","ast","setAST","expressionRef","useRef","typeRef","internallyUpdating","current","updateExpression","newAST","typeToGrammar","toString","updateAST","requestAnimationFrame","isEmpty","hasUserAttributeNode","newExpression","parseFilterExpression","onChange","message","useFilterConfig","config","suggestions","enumerations","uiConfig","isControlFilter","isValidFilterType","changeFilter","id","newItem","item","updateNode"],"sources":["../../../src/Filter/Filter.tsx"],"sourcesContent":["/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\nimport type { FilterASTNode, FilterModel } from '@looker/filter-expressions'\nimport {\n  getExpressionType,\n  typeToGrammar,\n  hasUserAttributeNode,\n  parseFilterExpression,\n  updateNode,\n} from '@looker/filter-expressions'\nimport isEmpty from 'lodash/isEmpty'\nimport React, { useMemo, useRef, useState } from 'react'\nimport type { FilterProps } from './types/filter_props'\nimport { useFilterConfig, useValidationMessage } from './utils'\nimport { updateASTFromProps } from './utils/update_ast'\nimport { isValidFilterType } from './utils/filter_token_type_map'\nimport { ControlFilter } from './components/ControlFilter'\nimport { AdvancedFilter } from './components/AdvancedFilter'\n\n/**\n * The top-level filter component that generates an AST from the expression\n * and renders either an advanced filter or control filter depending on the config.\n * `Filter` renders only the filter input control(s) â€“ for label and validation display\n * and suggestion fetching, see `DashboardFilter`.\n */\nexport const Filter = ({\n  expression,\n  type,\n  expressionType: propsExpressionType,\n  loadUserAttributes,\n  skipFilterConfigCheck,\n  ...props\n}: FilterProps) => {\n  const expressionType = useMemo(() => {\n    return (\n      propsExpressionType ||\n      getExpressionType({ type, field: props.field || undefined })\n    )\n  }, [propsExpressionType, type, props.field])\n\n  const validationMessage = useValidationMessage(expression, props.isRequired)\n\n  const getAST = () =>\n    updateASTFromProps(expressionType, expression, props.userAttributes)\n\n  const [ast, setAST] = useState(getAST)\n\n  // Track changes in the expression & type props that will\n  // require updateASTFromProps to be re-run\n  const expressionRef = useRef(expression)\n  const typeRef = useRef(expressionType)\n\n  // This ref tracks whether the AST has been updated internally\n  // and avoids deriving it from props if so\n  // (The internally updated AST may better reflect user interactions)\n  const internallyUpdating = useRef(false)\n  if (\n    !internallyUpdating.current &&\n    (expressionRef.current !== expression || typeRef.current !== expressionType)\n  ) {\n    setAST(getAST)\n    expressionRef.current = expression\n    typeRef.current = expressionType\n  }\n\n  const updateExpression = (newAST: FilterASTNode) => {\n    const { toString } = typeToGrammar(expressionType)\n    if (newAST.type === 'matchesAdvanced') {\n      if (newAST.expression === undefined || newAST.expression === null) {\n        return expression\n      } else return newAST.expression\n    } else {\n      return toString(newAST, expressionType, props.field || undefined)\n    }\n  }\n\n  const updateAST = (newAST: FilterASTNode | undefined) => {\n    internallyUpdating.current = true\n    requestAnimationFrame(() => {\n      internallyUpdating.current = false\n    })\n    setAST(newAST)\n    if (newAST) {\n      // userAttributes is empty and ast has a node set to userAttribute type\n      if (\n        loadUserAttributes &&\n        isEmpty(props.userAttributes) &&\n        hasUserAttributeNode(newAST)\n      ) {\n        loadUserAttributes()\n      } else {\n        try {\n          const newExpression = updateExpression(newAST)\n          // verify newExpression is valid\n          parseFilterExpression(\n            expressionType,\n            newExpression,\n            props.userAttributes\n          )\n          expressionRef.current = newExpression\n          // call onChange with new expression\n          props.onChange?.({ expression: newExpression })\n        } catch ({ message }) {\n          // expression derived from UI change is invalid\n          // catch silently and let user continue editing filter\n        }\n      }\n    }\n  }\n\n  const { uiConfig: config } = useFilterConfig({\n    ast: ast || {},\n    config: props.config,\n    field: props.field,\n    suggestions: props.suggestions,\n    enumerations: props.enumerations,\n    skipFilterConfigCheck,\n  })\n\n  const isControlFilter = config && isValidFilterType(config.type)\n  /**\n   * Captures Filter UI changes, updates AST and generates a new expression\n   */\n  const changeFilter = (id: number, newItem: FilterModel) => {\n    // UI only exists with a valid AST\n    if (ast) {\n      if (isControlFilter) {\n        props.onChange?.({ expression: updateExpression(newItem) })\n      } else {\n        // generate new AST\n        const item =\n          newItem.type === 'matchesAdvanced'\n            ? {\n                ...newItem,\n                expression:\n                  newItem.expression === undefined ||\n                  newItem.expression === null\n                    ? expression\n                    : newItem.expression,\n              }\n            : { ...newItem, expression: null }\n        updateAST(updateNode(ast, id, item))\n      }\n    }\n  }\n\n  if (!ast) return null\n\n  return isControlFilter ? (\n    <ControlFilter\n      {...props}\n      config={config}\n      expressionType={expressionType}\n      ast={ast}\n      changeFilter={changeFilter}\n      validationMessage={validationMessage}\n    />\n  ) : (\n    <AdvancedFilter\n      {...props}\n      config={config}\n      expressionType={expressionType}\n      ast={ast}\n      updateAST={updateAST}\n      changeFilter={changeFilter}\n      validationMessage={validationMessage}\n    />\n  )\n}\n"],"mappings":"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"}