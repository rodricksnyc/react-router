{"version":3,"file":"OnDate.js","names":["OnDate","item","onChange","id","date","dateChange","newValue","newDateTimeModel","dateToFilterDateTimeModel","clearTimeFilterDateTimeModel","actualDate","filterDateTimeModelToDate","Date","now"],"sources":["../../../../../../../../../src/Filter/components/AdvancedFilter/components/DateFilter/components/OnDate/OnDate.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport type { FilterModel } from '@looker/filter-expressions'\nimport {\n  clearTimeFilterDateTimeModel,\n  dateToFilterDateTimeModel,\n  filterDateTimeModelToDate,\n} from '@looker/filter-expressions'\nimport React from 'react'\nimport { DateInput } from '../DateInput'\n\ninterface OnDateParamProps {\n  item: FilterModel\n  onChange: (id: string, item: Partial<FilterModel>) => void\n}\n\nexport const OnDate = ({ item, onChange }: OnDateParamProps) => {\n  const { id, date } = item\n  const dateChange = (newValue: Date) => {\n    const newDateTimeModel = dateToFilterDateTimeModel(newValue)\n    // Since filter is 'on date' skip the time part (DX-5280)\n    onChange(id, { date: clearTimeFilterDateTimeModel(newDateTimeModel) })\n  }\n  const actualDate = date\n    ? filterDateTimeModelToDate(date)\n    : new Date(Date.now())\n\n  return <DateInput date={actualDate} onChange={dateChange} placement=\"right\" />\n}\n"],"mappings":";;;;;;;AAKA;AAKA;AACA;;AAOO,IAAMA,MAAM,GAAG,SAATA,MAAM,OAA6C;EAAA,IAAvCC,IAAI,QAAJA,IAAI;IAAEC,QAAQ,QAARA,QAAQ;EACrC,IAAQC,EAAE,GAAWF,IAAI,CAAjBE,EAAE;IAAEC,IAAI,GAAKH,IAAI,CAAbG,IAAI;EAChB,IAAMC,UAAU,GAAG,SAAbA,UAAU,CAAIC,QAAc,EAAK;IACrC,IAAMC,gBAAgB,GAAG,IAAAC,4CAAyB,EAACF,QAAQ,CAAC;IAE5DJ,QAAQ,CAACC,EAAE,EAAE;MAAEC,IAAI,EAAE,IAAAK,+CAA4B,EAACF,gBAAgB;IAAE,CAAC,CAAC;EACxE,CAAC;EACD,IAAMG,UAAU,GAAGN,IAAI,GACnB,IAAAO,4CAAyB,EAACP,IAAI,CAAC,GAC/B,IAAIQ,IAAI,CAACA,IAAI,CAACC,GAAG,EAAE,CAAC;EAExB,OAAO,gCAAC,oBAAS;IAAC,IAAI,EAAEH,UAAW;IAAC,QAAQ,EAAEL,UAAW;IAAC,SAAS,EAAC;EAAO,EAAG;AAChF,CAAC;AAAA"}