{"version":3,"file":"YearMonth.spec.js","names":["describe","onChangeMock","jest","fn","mockProps","item","id","month","year","onChange","beforeEach","mockReset","it","renderWithTheme","expect","screen","getByText","toBeVisible","getByDisplayValue","input","fireEvent","change","target","value","toHaveBeenCalledWith","focus","mouseDown","march","click"],"sources":["../../../../../../../../../src/Filter/components/AdvancedFilter/components/DateFilter/components/YearMonth/YearMonth.spec.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport { renderWithTheme } from '@looker/components-test-utils'\nimport { fireEvent, screen } from '@testing-library/react'\nimport React from 'react'\nimport type { FilterParamProps } from '../../../../../../types/filter_param_props'\nimport { YearMonth } from './YearMonth'\n\ndescribe('YearMonth', () => {\n  const onChangeMock = jest.fn()\n  const mockProps = {\n    item: {\n      id: '1',\n      month: '1',\n      year: '2017',\n    },\n    onChange: onChangeMock,\n  } as unknown as FilterParamProps\n\n  beforeEach(() => {\n    onChangeMock.mockReset()\n  })\n\n  it('should render the given year and month', () => {\n    renderWithTheme(<YearMonth {...mockProps} />)\n    expect(screen.getByText('January')).toBeVisible()\n    expect(screen.getByDisplayValue('2017')).toBeVisible()\n  })\n\n  it('should invoke the onChange handler when the year changes', () => {\n    renderWithTheme(<YearMonth {...mockProps} />)\n    const input = screen.getByDisplayValue('2017')\n    fireEvent.change(input, { target: { value: '2018' } })\n    expect(onChangeMock).toHaveBeenCalledWith('1', { year: '2018' })\n  })\n\n  it('should invoke the onChange handler when the month changes', async () => {\n    renderWithTheme(<YearMonth {...mockProps} />)\n    const input = screen.getByDisplayValue('January')\n    fireEvent.focus(input)\n    fireEvent.mouseDown(input)\n    const march = screen.getByText('March')\n    fireEvent.click(march)\n    expect(onChangeMock).toHaveBeenCalledWith('1', { month: '03' })\n  })\n})\n"],"mappings":";;;;AAIA;AACA;AACA;AAEA;;AAEAA,QAAQ,CAAC,WAAW,EAAE,YAAM;EAC1B,IAAMC,YAAY,GAAGC,IAAI,CAACC,EAAE,EAAE;EAC9B,IAAMC,SAAS,GAAG;IAChBC,IAAI,EAAE;MACJC,EAAE,EAAE,GAAG;MACPC,KAAK,EAAE,GAAG;MACVC,IAAI,EAAE;IACR,CAAC;IACDC,QAAQ,EAAER;EACZ,CAAgC;EAEhCS,UAAU,CAAC,YAAM;IACfT,YAAY,CAACU,SAAS,EAAE;EAC1B,CAAC,CAAC;EAEFC,EAAE,CAAC,wCAAwC,EAAE,YAAM;IACjD,IAAAC,oCAAe,EAAC,iCAAC,oBAAS,EAAKT,SAAS,CAAI,CAAC;IAC7CU,MAAM,CAACC,aAAM,CAACC,SAAS,CAAC,SAAS,CAAC,CAAC,CAACC,WAAW,EAAE;IACjDH,MAAM,CAACC,aAAM,CAACG,iBAAiB,CAAC,MAAM,CAAC,CAAC,CAACD,WAAW,EAAE;EACxD,CAAC,CAAC;EAEFL,EAAE,CAAC,0DAA0D,EAAE,YAAM;IACnE,IAAAC,oCAAe,EAAC,iCAAC,oBAAS,EAAKT,SAAS,CAAI,CAAC;IAC7C,IAAMe,KAAK,GAAGJ,aAAM,CAACG,iBAAiB,CAAC,MAAM,CAAC;IAC9CE,gBAAS,CAACC,MAAM,CAACF,KAAK,EAAE;MAAEG,MAAM,EAAE;QAAEC,KAAK,EAAE;MAAO;IAAE,CAAC,CAAC;IACtDT,MAAM,CAACb,YAAY,CAAC,CAACuB,oBAAoB,CAAC,GAAG,EAAE;MAAEhB,IAAI,EAAE;IAAO,CAAC,CAAC;EAClE,CAAC,CAAC;EAEFI,EAAE,CAAC,2DAA2D,6DAAE;IAAA;IAAA;MAAA;QAAA;UAC9D,IAAAC,oCAAe,EAAC,iCAAC,oBAAS,EAAKT,SAAS,CAAI,CAAC;UACvCe,KAAK,GAAGJ,aAAM,CAACG,iBAAiB,CAAC,SAAS,CAAC;UACjDE,gBAAS,CAACK,KAAK,CAACN,KAAK,CAAC;UACtBC,gBAAS,CAACM,SAAS,CAACP,KAAK,CAAC;UACpBQ,KAAK,GAAGZ,aAAM,CAACC,SAAS,CAAC,OAAO,CAAC;UACvCI,gBAAS,CAACQ,KAAK,CAACD,KAAK,CAAC;UACtBb,MAAM,CAACb,YAAY,CAAC,CAACuB,oBAAoB,CAAC,GAAG,EAAE;YAAEjB,KAAK,EAAE;UAAK,CAAC,CAAC;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA,CAChE,GAAC;AACJ,CAAC,CAAC"}