{"version":3,"file":"LocationCircle.spec.js","names":["describe","item","id","type","is","lat","lon","distance","unit","it","renderWithTheme","jest","fn","expect","screen","getByRole","toHaveValue","getByDisplayValue","toBeVisible","onChange","fireEvent","change","target","value","toHaveBeenCalledWith","selectInput","click","kilometers","getByText"],"sources":["../../../../../../../../../src/Filter/components/AdvancedFilter/components/LocationFilter/components/LocationCircle/LocationCircle.spec.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport { renderWithTheme } from '@looker/components-test-utils'\nimport { screen, fireEvent } from '@testing-library/react'\nimport React from 'react'\nimport { LocationCircle } from './LocationCircle'\n\ndescribe('LocationCircle filter tests', () => {\n  const item = {\n    id: '1',\n    type: 'anywhere',\n    is: true,\n    lat: 1,\n    lon: 1,\n    distance: 5,\n    unit: 'feet',\n  }\n\n  it('should render a LocationCircle', () => {\n    renderWithTheme(<LocationCircle item={item} onChange={jest.fn()} />)\n    expect(screen.getByRole('textbox')).toHaveValue('feet')\n    expect(screen.getByDisplayValue('5')).toBeVisible()\n  })\n\n  it('should call onChange with the correct distance when distance is changed', () => {\n    const onChange = jest.fn()\n    renderWithTheme(<LocationCircle item={item} onChange={onChange} />)\n    fireEvent.change(screen.getByDisplayValue('5'), { target: { value: '6' } })\n    expect(onChange).toHaveBeenCalledWith('1', { distance: '6', unit: 'feet' })\n  })\n\n  it('should call onChange with the correct unit when unit is changed', () => {\n    const onChange = jest.fn()\n    renderWithTheme(<LocationCircle item={item} onChange={onChange} />)\n\n    const selectInput = screen.getByDisplayValue('feet')\n    fireEvent.click(selectInput)\n\n    const kilometers = screen.getByText('kilometers')\n    fireEvent.click(kilometers)\n    expect(onChange).toHaveBeenCalledWith('1', { unit: 'kilometers' })\n  })\n})\n"],"mappings":";;;AAIA;AACA;AACA;AACA;;AAEAA,QAAQ,CAAC,6BAA6B,EAAE,YAAM;EAC5C,IAAMC,IAAI,GAAG;IACXC,EAAE,EAAE,GAAG;IACPC,IAAI,EAAE,UAAU;IAChBC,EAAE,EAAE,IAAI;IACRC,GAAG,EAAE,CAAC;IACNC,GAAG,EAAE,CAAC;IACNC,QAAQ,EAAE,CAAC;IACXC,IAAI,EAAE;EACR,CAAC;EAEDC,EAAE,CAAC,gCAAgC,EAAE,YAAM;IACzC,IAAAC,oCAAe,EAAC,iCAAC,8BAAc;MAAC,IAAI,EAAET,IAAK;MAAC,QAAQ,EAAEU,IAAI,CAACC,EAAE;IAAG,EAAG,CAAC;IACpEC,MAAM,CAACC,aAAM,CAACC,SAAS,CAAC,SAAS,CAAC,CAAC,CAACC,WAAW,CAAC,MAAM,CAAC;IACvDH,MAAM,CAACC,aAAM,CAACG,iBAAiB,CAAC,GAAG,CAAC,CAAC,CAACC,WAAW,EAAE;EACrD,CAAC,CAAC;EAEFT,EAAE,CAAC,yEAAyE,EAAE,YAAM;IAClF,IAAMU,QAAQ,GAAGR,IAAI,CAACC,EAAE,EAAE;IAC1B,IAAAF,oCAAe,EAAC,iCAAC,8BAAc;MAAC,IAAI,EAAET,IAAK;MAAC,QAAQ,EAAEkB;IAAS,EAAG,CAAC;IACnEC,gBAAS,CAACC,MAAM,CAACP,aAAM,CAACG,iBAAiB,CAAC,GAAG,CAAC,EAAE;MAAEK,MAAM,EAAE;QAAEC,KAAK,EAAE;MAAI;IAAE,CAAC,CAAC;IAC3EV,MAAM,CAACM,QAAQ,CAAC,CAACK,oBAAoB,CAAC,GAAG,EAAE;MAAEjB,QAAQ,EAAE,GAAG;MAAEC,IAAI,EAAE;IAAO,CAAC,CAAC;EAC7E,CAAC,CAAC;EAEFC,EAAE,CAAC,iEAAiE,EAAE,YAAM;IAC1E,IAAMU,QAAQ,GAAGR,IAAI,CAACC,EAAE,EAAE;IAC1B,IAAAF,oCAAe,EAAC,iCAAC,8BAAc;MAAC,IAAI,EAAET,IAAK;MAAC,QAAQ,EAAEkB;IAAS,EAAG,CAAC;IAEnE,IAAMM,WAAW,GAAGX,aAAM,CAACG,iBAAiB,CAAC,MAAM,CAAC;IACpDG,gBAAS,CAACM,KAAK,CAACD,WAAW,CAAC;IAE5B,IAAME,UAAU,GAAGb,aAAM,CAACc,SAAS,CAAC,YAAY,CAAC;IACjDR,gBAAS,CAACM,KAAK,CAACC,UAAU,CAAC;IAC3Bd,MAAM,CAACM,QAAQ,CAAC,CAACK,oBAAoB,CAAC,GAAG,EAAE;MAAEhB,IAAI,EAAE;IAAa,CAAC,CAAC;EACpE,CAAC,CAAC;AACJ,CAAC,CAAC"}