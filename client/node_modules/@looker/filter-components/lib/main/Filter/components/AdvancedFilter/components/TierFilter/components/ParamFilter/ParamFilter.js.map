{"version":3,"file":"ParamFilter.js","names":["ParamFilter","item","onChange","enumerations","validationMessage","handleChange","value","id","type"],"sources":["../../../../../../../../../src/Filter/components/AdvancedFilter/components/TierFilter/components/ParamFilter/ParamFilter.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport type { ValidationMessageProps } from '@looker/components'\nimport type { FilterModel } from '@looker/filter-expressions'\nimport React from 'react'\nimport type { Option } from '../../../../../../types/option'\nimport { GroupSelect } from '../../../GroupSelect'\n\ninterface ParamFilterProps {\n  item: FilterModel\n  onChange?: (id?: string, props?: any) => void\n  enumerations?: Option[]\n  validationMessage?: ValidationMessageProps\n}\n\nexport const ParamFilter = ({\n  item,\n  onChange,\n  enumerations,\n  validationMessage,\n}: ParamFilterProps) => {\n  const handleChange = (value: string) => {\n    onChange?.(item.id, { value: [value] })\n  }\n\n  return (\n    <GroupSelect\n      placement=\"right\"\n      value={item.value && item.value[0]}\n      onChange={handleChange}\n      options={enumerations || []}\n      validationType={validationMessage?.type}\n    />\n  )\n}\n"],"mappings":";;;;;;;AAMA;AAEA;;AASO,IAAMA,WAAW,GAAG,SAAdA,WAAW,OAKA;EAAA,IAJtBC,IAAI,QAAJA,IAAI;IACJC,QAAQ,QAARA,QAAQ;IACRC,YAAY,QAAZA,YAAY;IACZC,iBAAiB,QAAjBA,iBAAiB;EAEjB,IAAMC,YAAY,GAAG,SAAfA,YAAY,CAAIC,KAAa,EAAK;IACtCJ,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAGD,IAAI,CAACM,EAAE,EAAE;MAAED,KAAK,EAAE,CAACA,KAAK;IAAE,CAAC,CAAC;EACzC,CAAC;EAED,OACE,gCAAC,wBAAW;IACV,SAAS,EAAC,OAAO;IACjB,KAAK,EAAEL,IAAI,CAACK,KAAK,IAAIL,IAAI,CAACK,KAAK,CAAC,CAAC,CAAE;IACnC,QAAQ,EAAED,YAAa;IACvB,OAAO,EAAEF,YAAY,IAAI,EAAG;IAC5B,cAAc,EAAEC,iBAAiB,aAAjBA,iBAAiB,uBAAjBA,iBAAiB,CAAEI;EAAK,EACxC;AAEN,CAAC;AAAA"}