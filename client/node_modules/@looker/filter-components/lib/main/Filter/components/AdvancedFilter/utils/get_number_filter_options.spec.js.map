{"version":3,"file":"get_number_filter_options.spec.js","names":["describe","it","renderHook","useNumberFilterOptions","wrapper","children","current","result","expect","toStrictEqual","value","label"],"sources":["../../../../../../src/Filter/components/AdvancedFilter/utils/get_number_filter_options.spec.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport React from 'react'\nimport { ComponentsProvider } from '@looker/components'\nimport { renderHook } from '@testing-library/react-hooks'\nimport { useNumberFilterOptions } from './get_number_filter_options'\n\ndescribe('number filter options', () => {\n  it('should only return direct number matches and user attribute match options for parameter filters', () => {\n    const {\n      result: { current },\n    } = renderHook(() => useNumberFilterOptions(true), {\n      wrapper: ({ children }) => (\n        <ComponentsProvider>{children}</ComponentsProvider>\n      ),\n    })\n    expect(current).toStrictEqual([\n      {\n        value: '=',\n        label: 'is',\n      },\n      {\n        label: 'matches a user attribute',\n        value: 'user_attribute',\n      },\n    ])\n  })\n})\n"],"mappings":";;;AAIA;AACA;AACA;AACA;;AAEAA,QAAQ,CAAC,uBAAuB,EAAE,YAAM;EACtCC,EAAE,CAAC,iGAAiG,EAAE,YAAM;IAC1G,kBAEI,IAAAC,sBAAU,EAAC;QAAA,OAAM,IAAAC,iDAAsB,EAAC,IAAI,CAAC;MAAA,GAAE;QACjDC,OAAO,EAAE;UAAA,IAAGC,QAAQ,QAARA,QAAQ;UAAA,OAClB,gCAAC,8BAAkB,QAAEA,QAAQ,CAAsB;QAAA;MAEvD,CAAC,CAAC;MALUC,OAAO,eAAjBC,MAAM,CAAID,OAAO;IAMnBE,MAAM,CAACF,OAAO,CAAC,CAACG,aAAa,CAAC,CAC5B;MACEC,KAAK,EAAE,GAAG;MACVC,KAAK,EAAE;IACT,CAAC,EACD;MACEA,KAAK,EAAE,0BAA0B;MACjCD,KAAK,EAAE;IACT,CAAC,CACF,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC"}