{"version":3,"file":"this_next_last_units.spec.js","names":["testSingular","option","expect","label","toBe","singular","describe","hooksToTest","useLastUnits","useThisNextUnits","useFiscalThisNextUnits","useFiscalLastUnits","wrapper","children","Object","keys","forEach","key","it","renderHook","current","result","toMatchSnapshot","notContains","thisNextUnits","fiscalThisNextUnits","not","toContain"],"sources":["../../../../../src/Filter/constants/date/this_next_last_units.spec.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport React from 'react'\nimport { renderHook } from '@testing-library/react-hooks'\nimport { ComponentsProvider } from '@looker/components'\nimport type { Option } from '../../types/option'\nimport {\n  useFiscalThisNextUnits,\n  useFiscalLastUnits,\n  useThisNextUnits,\n  useLastUnits,\n} from './this_next_last_units'\n\nconst testSingular = (option: Option) =>\n  expect(option.label).toBe(option.singular)\n\ndescribe('date unit options for ThisNextLast component', () => {\n  const hooksToTest: { [key: string]: () => Option[] } = {\n    useLastUnits,\n    useThisNextUnits,\n    useFiscalThisNextUnits,\n    useFiscalLastUnits,\n  }\n  const wrapper = ({ children }: { children: React.ReactElement }) => (\n    <ComponentsProvider>{children}</ComponentsProvider>\n  )\n\n  Object.keys(hooksToTest).forEach((key: string) => {\n    it(`${key} matches expected values`, () => {\n      const {\n        result: { current },\n      } = renderHook<undefined, Option[]>(hooksToTest[key], {\n        wrapper,\n      })\n      expect(current).toMatchSnapshot()\n      current.forEach(testSingular)\n    })\n  })\n\n  it('this and next component options should not contain day, hour, minute, second', () => {\n    const notContains = ['day', 'hour', 'minute', 'second']\n\n    const {\n      result: { current: thisNextUnits },\n    } = renderHook<undefined, Option[]>(useThisNextUnits, { wrapper })\n    const {\n      result: { current: fiscalThisNextUnits },\n    } = renderHook<undefined, Option[]>(useFiscalThisNextUnits, { wrapper })\n\n    expect(thisNextUnits).not.toContain(notContains)\n    expect(fiscalThisNextUnits).not.toContain(notContains)\n  })\n})\n"],"mappings":";;;AAKA;AACA;AACA;AAEA;;AAOA,IAAMA,YAAY,GAAG,SAAfA,YAAY,CAAIC,MAAc;EAAA,OAClCC,MAAM,CAACD,MAAM,CAACE,KAAK,CAAC,CAACC,IAAI,CAACH,MAAM,CAACI,QAAQ,CAAC;AAAA;AAE5CC,QAAQ,CAAC,8CAA8C,EAAE,YAAM;EAC7D,IAAMC,WAA8C,GAAG;IACrDC,YAAY,EAAZA,kCAAY;IACZC,gBAAgB,EAAhBA,sCAAgB;IAChBC,sBAAsB,EAAtBA,4CAAsB;IACtBC,kBAAkB,EAAlBA;EACF,CAAC;EACD,IAAMC,OAAO,GAAG,SAAVA,OAAO;IAAA,IAAMC,QAAQ,QAARA,QAAQ;IAAA,OACzB,gCAAC,8BAAkB,QAAEA,QAAQ,CAAsB;EAAA,CACpD;EAEDC,MAAM,CAACC,IAAI,CAACR,WAAW,CAAC,CAACS,OAAO,CAAC,UAACC,GAAW,EAAK;IAChDC,EAAE,WAAID,GAAG,+BAA4B,YAAM;MACzC,kBAEI,IAAAE,sBAAU,EAAsBZ,WAAW,CAACU,GAAG,CAAC,EAAE;UACpDL,OAAO,EAAPA;QACF,CAAC,CAAC;QAHUQ,OAAO,eAAjBC,MAAM,CAAID,OAAO;MAInBlB,MAAM,CAACkB,OAAO,CAAC,CAACE,eAAe,EAAE;MACjCF,OAAO,CAACJ,OAAO,CAAChB,YAAY,CAAC;IAC/B,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFkB,EAAE,CAAC,8EAA8E,EAAE,YAAM;IACvF,IAAMK,WAAW,GAAG,CAAC,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,CAAC;IAEvD,mBAEI,IAAAJ,sBAAU,EAAsBV,sCAAgB,EAAE;QAAEG,OAAO,EAAPA;MAAQ,CAAC,CAAC;MAD7CY,aAAa,gBAAhCH,MAAM,CAAID,OAAO;IAEnB,mBAEI,IAAAD,sBAAU,EAAsBT,4CAAsB,EAAE;QAAEE,OAAO,EAAPA;MAAQ,CAAC,CAAC;MADnDa,mBAAmB,gBAAtCJ,MAAM,CAAID,OAAO;IAGnBlB,MAAM,CAACsB,aAAa,CAAC,CAACE,GAAG,CAACC,SAAS,CAACJ,WAAW,CAAC;IAChDrB,MAAM,CAACuB,mBAAmB,CAAC,CAACC,GAAG,CAACC,SAAS,CAACJ,WAAW,CAAC;EACxD,CAAC,CAAC;AACJ,CAAC,CAAC"}