{"version":3,"file":"control_filter_utils.js","names":["filterMaxMap","button_group","button_toggles","checkboxes","radio_buttons","maxForFilterType","type","getStringOptions","field","suggestions","enumerations","config","options","escapeEnumerationVaues","has_allowed_values","parameter","stringOptions","noOptions","isArray","length","createOptions","map","createEnumeration","filter","value","includes","getPartitionedOptions","item","optionsMap","valueGroups","partition","String","getMultiStringSelectChange","changeFilter","Number","id","buttonGroupAdapter","isLoading","props","keyBy","included","excluded","onChange","max","checkboxGroupAdapter","adapterProps","getSingleValue","onlyValuesFromOptions","fieldCategory","singleValue","getSingleStringSelectChange","buttonTogglesAdapter","category","relativeTimeframesAdapter","start","end","undefined","relativeTimeframeValue","filterModelToRelativeTimeframeModel","relativeTimeframeOnChange","relativeTimeframe","newItem","relativeTimeframeModelToFilterModel","dateInputAdapter","date","dateValue","filterDateTimeModelToDate","dateChange","dateModel","dateToFilterDateTimeModel","dayRangeInputAdapter","dateRangeValue","from","to","addDays","dateRangeChange","startDateModel","translatedTo","endDateModel","dateRangeAdapter","dateTimeRangeValue","dateTimeRangeChange","showTime","sliderAdapter","sliderValue","sliderChange","rangeSliderAdapter","low","high","rangeSliderValue","min","rangeSliderChange","range","bounds","name","dropdownMenuAdapter","onInputChange","tokenStyle","display","tagListAdapter","values","radioGroupAdapter","getControlFilterInfo","filterTokenAdapterMap","Component","adapter","ButtonGroup","ButtonToggles","CheckboxGroup","date_time_range_input","DateRange","day_picker","DateInput","day_range_picker","DayRangeInput","dropdown_menu","DropdownMenu","RadioGroup","range_slider","RangeSlider","relative_timeframes","RelativeTimeframes","slider","Slider","tag_list","TagList","TEST_ONLY"],"sources":["../../../../src/Filter/utils/control_filter_utils.ts"],"sourcesContent":["/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\nimport type React from 'react'\nimport type { FilterModel } from '@looker/filter-expressions'\nimport {\n  addDays,\n  dateToFilterDateTimeModel,\n  filterDateTimeModelToDate,\n} from '@looker/filter-expressions'\nimport isArray from 'lodash/isArray'\nimport keyBy from 'lodash/keyBy'\nimport partition from 'lodash/partition'\n\nimport { ButtonToggles } from '../components/ControlFilter/components/ButtonToggles'\nimport { ButtonGroup } from '../components/ControlFilter/components/ButtonGroup'\nimport { CheckboxGroup } from '../components/ControlFilter/components/CheckboxGroup'\nimport { DateInput } from '../components/AdvancedFilter/components/DateFilter/components/DateInput'\nimport { DateRange } from '../components/AdvancedFilter/components/DateFilter/components/DateRange'\nimport { DayRangeInput } from '../components/AdvancedFilter/components/DateFilter/components/DayRangeInput'\nimport { RelativeTimeframes } from '../components/AdvancedFilter/components/DateFilter/components/RelativeTimeframes'\nimport type { RelativeTimeframeModel } from '../components/AdvancedFilter/components/DateFilter/types/relative_timeframe_types'\nimport {\n  filterModelToRelativeTimeframeModel,\n  relativeTimeframeModelToFilterModel,\n} from '../components/AdvancedFilter/components/DateFilter/utils/relative_timeframe_conversions'\nimport { DropdownMenu } from '../components/ControlFilter/components/DropdownMenu'\nimport { RadioGroup } from '../components/ControlFilter/components/RadioGroup'\nimport {\n  RangeSlider,\n  Slider,\n} from '../components/ControlFilter/components/Slider'\nimport type {\n  RangeSliderProps,\n  SliderProps,\n} from '../components/ControlFilter/components/Slider/types'\nimport { TagList } from '../components/ControlFilter/components/TagList'\nimport type { Option } from '../types/option'\nimport { createEnumeration, createOptions } from './option_utils'\nimport type { FilterProps, InternalFilterProps } from '../types/filter_props'\n\ninterface AdapterProps extends Omit<FilterProps, 'expression'> {\n  changeFilter: InternalFilterProps['changeFilter']\n}\n\ninterface FilterMaxes {\n  button_group: number\n  button_toggles: number\n  checkboxes: number\n  radio_buttons: number\n  [key: string]: number\n}\n\n/**\n * Defines the max number of options allowed for the defined options.\n * If a type is not defined, means it has no concept of max.\n */\nconst filterMaxMap: FilterMaxes = {\n  button_group: 30,\n  button_toggles: 30,\n  checkboxes: 50,\n  radio_buttons: 50,\n}\n\n/**\n * Returns the max number of options for a given filter type. Can be undefined\n */\nexport const maxForFilterType = (type: string) => filterMaxMap[type]\n\nconst getStringOptions = ({\n  field,\n  suggestions,\n  enumerations,\n  config,\n}: AdapterProps): Option[] => {\n  const options = config?.options\n  const escapeEnumerationVaues = field?.has_allowed_values && field?.parameter\n  let stringOptions: Option[] = []\n  const noOptions = !(isArray(options) && options.length > 0)\n\n  if (noOptions && suggestions && suggestions.length !== 0) {\n    stringOptions = createOptions(suggestions)\n  } else if (noOptions && enumerations) {\n    stringOptions = enumerations.map(createEnumeration(escapeEnumerationVaues))\n  } else if (isArray(options)) {\n    if (enumerations && enumerations.length > 0) {\n      stringOptions = enumerations\n        .map(createEnumeration(escapeEnumerationVaues))\n        .filter(({ value }) => options.includes(value))\n    } else {\n      stringOptions = createOptions(options)\n    }\n  }\n\n  return stringOptions\n}\n\nconst getPartitionedOptions = (\n  item: FilterModel,\n  optionsMap: { [key: string]: Option }\n) => {\n  // Partition out values that are included in the options array and those\n  // that are not.\n  const valueGroups: string[][] = isArray(item.value)\n    ? partition(item.value.map(String), (value) => optionsMap[value])\n    : [[], []]\n  return valueGroups\n}\n\n// Multi Selects\n\n// When suggestions/options are empty for checkboxes/button_groups (may not have fully loaded yet)\n// but filter values exists, return filter values.\nconst getMultiStringSelectChange =\n  (item: FilterModel, changeFilter: AdapterProps['changeFilter']) =>\n  (value: string[]) =>\n    changeFilter(Number(item.id), { ...item, value })\n\n/**\n * Adapter for Button Group props\n */\nconst buttonGroupAdapter: FilterTokenAdapter<typeof ButtonGroup> = (\n  item: FilterModel,\n  { isLoading, ...props }: AdapterProps\n): React.ComponentProps<typeof ButtonGroup> => {\n  const stringOptions = getStringOptions(props)\n  const optionsMap = keyBy(stringOptions, 'value')\n  const [included, excluded] = getPartitionedOptions(item, optionsMap)\n  // When suggestions/options are empty for checkboxes/button_groups (may not have fully loaded yet)\n  // but filter values exists, return filter values.\n  const value = included.length ? included : excluded\n  const changeFilter = props.changeFilter\n\n  return {\n    onChange: getMultiStringSelectChange(item, changeFilter),\n    value,\n    options: stringOptions,\n    max: maxForFilterType('button_group'),\n    isLoading,\n  }\n}\n\n/**\n * Returns the props needed to render a Checkbox Group control\n * @param item\n * @param props\n */\nconst checkboxGroupAdapter: FilterTokenAdapter<typeof CheckboxGroup> = (\n  item: FilterModel,\n  { isLoading, ...props }: AdapterProps\n): React.ComponentProps<typeof CheckboxGroup> => {\n  const adapterProps = buttonGroupAdapter(item, props)\n  const { onChange, value, options } = adapterProps\n  return {\n    onChange,\n    value,\n    options,\n    max: maxForFilterType('checkboxes'),\n    isLoading,\n  }\n}\n\nconst getSingleValue = (\n  item: FilterModel,\n  stringOptions: Option[],\n  onlyValuesFromOptions: boolean,\n  fieldCategory?: string | null\n) => {\n  const optionsMap = keyBy(stringOptions, 'value')\n\n  /**\n   * Many filter components use only values that are present in options,\n   * but at least one (DropdownMenu) can use values that are not present in options\n   * (typically because there are 1000+ suggestions)\n   */\n  let singleValue: string\n  if (onlyValuesFromOptions) {\n    // If the value does not appear in options, return an empty string\n    singleValue = String(\n      item.value?.length && optionsMap[item.value[0]] ? item.value[0] : ''\n    )\n  } else {\n    // If filter has a value, include it, regardless of whether it exists in options\n    singleValue = item.value?.length ? String(item.value[0]) : ''\n  }\n\n  if (\n    fieldCategory === 'parameter' &&\n    singleValue === '' &&\n    stringOptions &&\n    stringOptions.length\n  ) {\n    singleValue = stringOptions[0].value\n  }\n\n  return singleValue\n}\n\nconst getSingleStringSelectChange =\n  (item: FilterModel, changeFilter: AdapterProps['changeFilter']) =>\n  (value: string) => {\n    changeFilter(Number(item.id), { ...item, value: [value] })\n  }\n\n/**\n * Returns the props needed to render a Button Toggle control\n * @param item\n * @param props\n */\nconst buttonTogglesAdapter = (\n  item: FilterModel,\n  { isLoading, ...props }: AdapterProps\n): React.ComponentProps<typeof ButtonToggles> => {\n  const { changeFilter, field } = props\n  const stringOptions = getStringOptions(props)\n  const value = getSingleValue(item, stringOptions, true, field?.category)\n\n  return {\n    onChange: getSingleStringSelectChange(item, changeFilter),\n    value,\n    options: stringOptions,\n    isLoading,\n    // TODO: max: maxForFilterType('button_toggles'),\n  }\n}\n\nconst relativeTimeframesAdapter = (\n  item: FilterModel,\n  props: AdapterProps\n): React.ComponentProps<typeof RelativeTimeframes> | undefined => {\n  if (item.type === 'range' && (item.start == null || item.end == null)) {\n    return undefined\n  }\n  const { changeFilter } = props\n  // Relative Timeframes\n  const relativeTimeframeValue = filterModelToRelativeTimeframeModel(item)\n  if (relativeTimeframeValue === undefined) {\n    return undefined\n  }\n  const relativeTimeframeOnChange = (\n    relativeTimeframe: RelativeTimeframeModel\n  ) => {\n    const newItem = relativeTimeframeModelToFilterModel(relativeTimeframe)\n    changeFilter(Number(item.id), { ...item, ...newItem })\n  }\n  return {\n    onChange: relativeTimeframeOnChange,\n    value: relativeTimeframeValue,\n  }\n}\n\n/**\n * Builds the props for the DateInput control\n */\nconst dateInputAdapter = (\n  item: FilterModel,\n  props: AdapterProps\n): React.ComponentProps<typeof DateInput> | undefined => {\n  if (item.date == null) {\n    return undefined\n  }\n  const { changeFilter } = props\n\n  // Day Picker\n  const dateValue = filterDateTimeModelToDate(item.date)\n  const dateChange = (date: Date) => {\n    const dateModel = dateToFilterDateTimeModel(date)\n    changeFilter(Number(item.id), { ...item, type: 'on', date: dateModel })\n  }\n  return {\n    onChange: dateChange,\n    date: dateValue,\n  }\n}\n\n/**\n * Builds the props for the DayRangeInput control\n */\nconst dayRangeInputAdapter = (\n  item: FilterModel,\n  props: AdapterProps\n): React.ComponentProps<typeof DayRangeInput> | undefined => {\n  if (item.start == null || item.end == null) {\n    return undefined\n  }\n  const { changeFilter } = props\n\n  // Day Range Picker\n  const dateRangeValue = {\n    from: filterDateTimeModelToDate(item.start),\n    to: addDays(filterDateTimeModelToDate(item.end), -1), // DateRange is inclusive, grammar is exclusive\n  }\n  const dateRangeChange = ({ from, to }: { from: Date; to: Date }) => {\n    const startDateModel = dateToFilterDateTimeModel(from)\n    // DateRange is inclusive, grammar is exclusive\n    const translatedTo = addDays(to, 1)\n    const endDateModel = dateToFilterDateTimeModel(translatedTo)\n\n    changeFilter(Number(item.id), {\n      ...item,\n      start: startDateModel,\n      end: endDateModel,\n      type: 'range',\n    })\n  }\n\n  return {\n    onChange: dateRangeChange,\n    value: dateRangeValue,\n  }\n}\n\n/**\n * Builds the props for the DateRange control\n */\nconst dateRangeAdapter = (\n  item: FilterModel,\n  props: AdapterProps\n): React.ComponentProps<typeof DateRange> | undefined => {\n  if (item.start == null || item.end == null) {\n    return undefined\n  }\n  // Date/Time Range input\n  const dateTimeRangeValue = {\n    ...item,\n    id: item.id || '',\n    start: item.start,\n    end: item.end,\n  } as FilterModel\n\n  const { changeFilter } = props\n\n  const dateTimeRangeChange = (id: string, item: Partial<FilterModel>) => {\n    const { from, to } = item\n    const startDateModel = dateToFilterDateTimeModel(from)\n    // DateRange is inclusive, grammar is exclusive\n    const translatedTo = addDays(to, 1)\n    const endDateModel = dateToFilterDateTimeModel(translatedTo)\n\n    changeFilter(Number(id), {\n      ...(item as FilterModel),\n      start: startDateModel,\n      end: endDateModel,\n      type: 'range',\n    })\n  }\n\n  return {\n    onChange: dateTimeRangeChange,\n    item: dateTimeRangeValue,\n    showTime: true,\n  }\n}\n\nconst sliderAdapter = (\n  item: FilterModel,\n  props: AdapterProps\n): React.ComponentProps<typeof Slider> | undefined => {\n  if (item.value?.length !== 1) {\n    return undefined\n  }\n  const { changeFilter, config } = props\n  // Slider\n  const sliderValue: number = item.value[0]\n  const sliderChange = (value: SliderProps['value']) => {\n    changeFilter(Number(item.id), { ...item, type: '=', value: [value] })\n  }\n\n  return {\n    onChange: sliderChange,\n    value: sliderValue,\n    options: config?.options as SliderProps['options'],\n  }\n}\n\nconst rangeSliderAdapter = (\n  item: FilterModel,\n  props: AdapterProps\n): React.ComponentProps<typeof RangeSlider> | undefined => {\n  if (item.low == null || item.high == null) {\n    return undefined\n  }\n  const { changeFilter, config } = props\n  // Range Slider\n  const rangeSliderValue: RangeSliderProps['value'] = {\n    min: item.low,\n    max: item.high,\n  }\n  const rangeSliderChange = (range: RangeSliderProps['value']) => {\n    changeFilter(Number(item.id), {\n      ...item,\n      bounds: '[]',\n      low: range.min,\n      high: range.max,\n      type: 'between',\n    })\n  }\n\n  return {\n    value: rangeSliderValue,\n    options: config?.options as RangeSliderProps['options'],\n    onChange: rangeSliderChange,\n    name: props.name,\n  }\n}\n\n/**\n * Returns the props needed to render a Dropdown Menu control\n * @param item\n * @param props\n */\nconst dropdownMenuAdapter = (\n  item: FilterModel,\n  props: AdapterProps\n): React.ComponentProps<typeof DropdownMenu> => {\n  const { changeFilter, config, field, isLoading, onInputChange } = props\n  const stringOptions = getStringOptions(props)\n  const value = getSingleValue(item, stringOptions, false, field?.category)\n  const tokenStyle = config?.display !== 'popover'\n\n  return {\n    onChange: getSingleStringSelectChange(item, changeFilter),\n    isLoading,\n    onInputChange,\n    value,\n    options: stringOptions,\n    max: maxForFilterType('dropdown_menu'),\n    tokenStyle,\n  }\n}\n\n/**\n * Returns the props needed to render a TagList control\n * @param item\n * @param props\n */\nconst tagListAdapter = (\n  item: FilterModel,\n  props: AdapterProps\n): React.ComponentProps<typeof TagList> => {\n  const { changeFilter, config, isLoading, onInputChange } = props\n\n  const stringOptions = getStringOptions(props)\n  const optionsMap = keyBy(stringOptions, 'value')\n  const [included, excluded] = getPartitionedOptions(item, optionsMap)\n  const values = [...included, ...excluded]\n\n  const tokenStyle = config?.display !== 'popover'\n\n  return {\n    onChange: getMultiStringSelectChange(item, changeFilter),\n    onInputChange,\n    value: values,\n    options: stringOptions,\n    max: maxForFilterType('tag_list'),\n    isLoading,\n    tokenStyle,\n  }\n}\n\n/**\n * Returns the props needed to render a Radio Group control\n * @param item\n * @param props\n */\nconst radioGroupAdapter = (\n  item: FilterModel,\n  { isLoading, ...props }: AdapterProps\n): React.ComponentProps<typeof RadioGroup> => {\n  const { changeFilter, field } = props\n  const stringOptions = getStringOptions(props)\n  const value = getSingleValue(item, stringOptions, true, field?.category)\n\n  return {\n    onChange: getSingleStringSelectChange(item, changeFilter),\n    value,\n    options: stringOptions,\n    max: maxForFilterType('radio_buttons'),\n    isLoading,\n  }\n}\n\nexport const getControlFilterInfo = (\n  item: FilterModel,\n  adapterProps: AdapterProps\n): {\n  Component?: React.ElementType\n  props?: React.ComponentProps<React.ElementType>\n} => {\n  const { Component, adapter } = filterTokenAdapterMap[\n    adapterProps.config.type\n  ] || {\n    Component: undefined,\n    adapter: undefined,\n  }\n  const props = adapter?.(item, adapterProps)\n\n  return { Component, props }\n}\n\n/**\n * A map of valid filter UI types\n */\nconst filterTokenAdapterMap: Record<\n  string,\n  FilterTokenProps<React.ElementType>\n> = {\n  button_group: { Component: ButtonGroup, adapter: buttonGroupAdapter },\n  button_toggles: { Component: ButtonToggles, adapter: buttonTogglesAdapter },\n  checkboxes: { Component: CheckboxGroup, adapter: checkboxGroupAdapter },\n  date_time_range_input: { Component: DateRange, adapter: dateRangeAdapter },\n  day_picker: { Component: DateInput, adapter: dateInputAdapter },\n  day_range_picker: {\n    Component: DayRangeInput,\n    adapter: dayRangeInputAdapter,\n  },\n  dropdown_menu: { Component: DropdownMenu, adapter: dropdownMenuAdapter },\n  radio_buttons: { Component: RadioGroup, adapter: radioGroupAdapter },\n  range_slider: { Component: RangeSlider, adapter: rangeSliderAdapter },\n  relative_timeframes: {\n    Component: RelativeTimeframes,\n    adapter: relativeTimeframesAdapter,\n  },\n  slider: { Component: Slider, adapter: sliderAdapter },\n  tag_list: { Component: TagList, adapter: tagListAdapter },\n}\n\ntype FilterTokenAdapter<T extends React.ElementType> = (\n  item: FilterModel,\n  props: AdapterProps\n) => React.ComponentProps<T>\n\ntype FilterTokenProps<T extends React.ElementType> = {\n  Component: T\n  adapter: FilterTokenAdapter<T>\n}\n\nexport const TEST_ONLY = {\n  getSingleValue,\n}\n"],"mappings":"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"}