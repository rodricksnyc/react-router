{"version":3,"file":"Section.spec.js","names":["describe","it","renderWithTheme","noop","container","expect","toBeVisible","screen","findByText","onClick","jest","fn","section","getByText","fireEvent","click","toHaveBeenCalledWith","isOpen","id"],"sources":["../../../src/TreeSelect/Section.spec.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport { Text } from '@looker/components'\nimport { fireEvent, screen } from '@testing-library/react'\nimport noop from 'lodash/noop'\nimport React from 'react'\nimport { renderWithTheme } from '@looker/test-utils'\nimport { Section } from './Section'\n\ndescribe('Section tests', () => {\n  it('should render a Section', async () => {\n    const { container } = renderWithTheme(\n      <Section\n        id=\"1\"\n        title={<Text>Section Title</Text>}\n        isOpen={true}\n        detail=\"This is a detail\"\n        onClick={noop}\n      />\n    )\n\n    expect(container).toBeVisible()\n    expect(await screen.findByText('Section Title')).toBeVisible()\n    expect(await screen.findByText('This is a detail')).toBeVisible()\n  })\n\n  it('should open the section', () => {\n    const onClick = jest.fn()\n    renderWithTheme(\n      <Section\n        id=\"1\"\n        title={<Text>Section Title</Text>}\n        isOpen={false}\n        detail=\"This is a detail\"\n        onClick={onClick}\n      >\n        <Text>Inside of Section</Text>\n      </Section>\n    )\n    const section = screen.getByText('Section Title')\n    fireEvent.click(section)\n\n    expect(onClick).toHaveBeenCalledWith({\n      isOpen: true,\n      id: '1',\n    })\n  })\n\n  it('should show the sections children if open', async () => {\n    renderWithTheme(\n      <Section\n        id=\"1\"\n        title={<Text>Section Title</Text>}\n        isOpen={true}\n        detail=\"This is a detail\"\n        onClick={noop}\n      >\n        <Text>Inside of Section</Text>\n      </Section>\n    )\n\n    expect(await screen.findByText('Inside of Section')).toBeVisible()\n  })\n})\n"],"mappings":";;;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEAA,QAAQ,CAAC,eAAe,EAAE,YAAM;EAC9BC,EAAE,CAAC,yBAAyB,6DAAE;IAAA;IAAA;MAAA;QAAA;UAAA,mBACN,IAAAC,0BAAe,EACnC,iCAAC,gBAAO;YACN,EAAE,EAAC,GAAG;YACN,KAAK,EAAE,iCAAC,gBAAI,wBAAsB;YAClC,MAAM,EAAE,IAAK;YACb,MAAM,EAAC,kBAAkB;YACzB,OAAO,EAAEC;UAAK,EACd,CACH,EAROC,SAAS,oBAATA,SAAS;UAUjBC,MAAM,CAACD,SAAS,CAAC,CAACE,WAAW,EAAE;UAAA,cAC/BD,MAAM;UAAA;UAAA,OAAOE,aAAM,CAACC,UAAU,CAAC,eAAe,CAAC;QAAA;UAAA;UAAA,8BAAEF,WAAW;UAAA,cAC5DD,MAAM;UAAA;UAAA,OAAOE,aAAM,CAACC,UAAU,CAAC,kBAAkB,CAAC;QAAA;UAAA;UAAA,8BAAEF,WAAW;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA,CAChE,GAAC;EAEFL,EAAE,CAAC,yBAAyB,EAAE,YAAM;IAClC,IAAMQ,OAAO,GAAGC,IAAI,CAACC,EAAE,EAAE;IACzB,IAAAT,0BAAe,EACb,iCAAC,gBAAO;MACN,EAAE,EAAC,GAAG;MACN,KAAK,EAAE,iCAAC,gBAAI,wBAAsB;MAClC,MAAM,EAAE,KAAM;MACd,MAAM,EAAC,kBAAkB;MACzB,OAAO,EAAEO;IAAQ,GAEjB,iCAAC,gBAAI,4BAAyB,CACtB,CACX;IACD,IAAMG,OAAO,GAAGL,aAAM,CAACM,SAAS,CAAC,eAAe,CAAC;IACjDC,gBAAS,CAACC,KAAK,CAACH,OAAO,CAAC;IAExBP,MAAM,CAACI,OAAO,CAAC,CAACO,oBAAoB,CAAC;MACnCC,MAAM,EAAE,IAAI;MACZC,EAAE,EAAE;IACN,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFjB,EAAE,CAAC,2CAA2C,6DAAE;IAAA;MAAA;QAAA;UAC9C,IAAAC,0BAAe,EACb,iCAAC,gBAAO;YACN,EAAE,EAAC,GAAG;YACN,KAAK,EAAE,iCAAC,gBAAI,wBAAsB;YAClC,MAAM,EAAE,IAAK;YACb,MAAM,EAAC,kBAAkB;YACzB,OAAO,EAAEC;UAAK,GAEd,iCAAC,gBAAI,4BAAyB,CACtB,CACX;UAAA,eAEDE,MAAM;UAAA;UAAA,OAAOE,aAAM,CAACC,UAAU,CAAC,mBAAmB,CAAC;QAAA;UAAA;UAAA,gCAAEF,WAAW;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA,CACjE,GAAC;AACJ,CAAC,CAAC"}