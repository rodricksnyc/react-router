{"version":3,"file":"AdvancedFilter.spec.js","names":["AdvancedFilter","renderWithTheme","screen","React","renderAdvancedFilter","props","jest","fn","message","type","value","describe","it","addButtonIcon","queryByText","expect","toBeInTheDocument","allowMultipleValues","not","hideAdd","field","parameter"],"sources":["../../../../../src/Filter/components/AdvancedFilter/AdvancedFilter.spec.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport { AdvancedFilter } from './AdvancedFilter'\nimport type { AdvancedFilterProps } from './AdvancedFilter'\nimport { renderWithTheme } from '@looker/components-test-utils'\nimport { screen } from '@testing-library/react'\nimport React from 'react'\n\nconst renderAdvancedFilter = (props?: Partial<AdvancedFilterProps>) => {\n  return renderWithTheme(\n    <AdvancedFilter\n      updateAST={jest.fn()}\n      expressionType=\"string\"\n      validationMessage={{\n        message: 'test error',\n      }}\n      name=\"test filter\"\n      ast={{\n        type: 'string',\n        value: 'testexpression',\n      }}\n      changeFilter={jest.fn()}\n      allowMultipleValues={true}\n      {...props}\n    />\n  )\n}\n\ndescribe('Advanced filters', () => {\n  describe('add button', () => {\n    it('should render the add button', () => {\n      renderAdvancedFilter()\n      const addButtonIcon = screen.queryByText('Add')\n      expect(addButtonIcon).toBeInTheDocument()\n    })\n\n    it('should not render the add button when allowMultipleValues is false', () => {\n      renderAdvancedFilter({\n        allowMultipleValues: false,\n      })\n      const addButtonIcon = screen.queryByText('Add')\n      expect(addButtonIcon).not.toBeInTheDocument()\n    })\n\n    it('should not render the add button when allowMultipleValues and hideAdd are both true', () => {\n      renderAdvancedFilter({\n        allowMultipleValues: true,\n        hideAdd: true,\n      })\n      const addButtonIcon = screen.queryByText('Add')\n      expect(addButtonIcon).not.toBeInTheDocument()\n    })\n\n    it('should not render the add button when the field is a parameter', () => {\n      renderAdvancedFilter({\n        allowMultipleValues: true,\n        field: {\n          parameter: true,\n        },\n      })\n      const addButtonIcon = screen.queryByText('Add')\n      expect(addButtonIcon).not.toBeInTheDocument()\n    })\n  })\n})\n"],"mappings":";AAIA,SAASA,cAAc,QAAQ,kBAAkB;AAEjD,SAASC,eAAe,QAAQ,+BAA+B;AAC/D,SAASC,MAAM,QAAQ,wBAAwB;AAC/C,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,oBAAoB,GAAIC,KAAoC,IAAK;EACrE,OAAOJ,eAAe,CACpB,oBAAC,cAAc;IACb,SAAS,EAAEK,IAAI,CAACC,EAAE,EAAG;IACrB,cAAc,EAAC,QAAQ;IACvB,iBAAiB,EAAE;MACjBC,OAAO,EAAE;IACX,CAAE;IACF,IAAI,EAAC,aAAa;IAClB,GAAG,EAAE;MACHC,IAAI,EAAE,QAAQ;MACdC,KAAK,EAAE;IACT,CAAE;IACF,YAAY,EAAEJ,IAAI,CAACC,EAAE,EAAG;IACxB,mBAAmB,EAAE;EAAK,GACtBF,KAAK,EACT,CACH;AACH,CAAC;AAEDM,QAAQ,CAAC,kBAAkB,EAAE,MAAM;EACjCA,QAAQ,CAAC,YAAY,EAAE,MAAM;IAC3BC,EAAE,CAAC,8BAA8B,EAAE,MAAM;MACvCR,oBAAoB,EAAE;MACtB,MAAMS,aAAa,GAAGX,MAAM,CAACY,WAAW,CAAC,KAAK,CAAC;MAC/CC,MAAM,CAACF,aAAa,CAAC,CAACG,iBAAiB,EAAE;IAC3C,CAAC,CAAC;IAEFJ,EAAE,CAAC,oEAAoE,EAAE,MAAM;MAC7ER,oBAAoB,CAAC;QACnBa,mBAAmB,EAAE;MACvB,CAAC,CAAC;MACF,MAAMJ,aAAa,GAAGX,MAAM,CAACY,WAAW,CAAC,KAAK,CAAC;MAC/CC,MAAM,CAACF,aAAa,CAAC,CAACK,GAAG,CAACF,iBAAiB,EAAE;IAC/C,CAAC,CAAC;IAEFJ,EAAE,CAAC,qFAAqF,EAAE,MAAM;MAC9FR,oBAAoB,CAAC;QACnBa,mBAAmB,EAAE,IAAI;QACzBE,OAAO,EAAE;MACX,CAAC,CAAC;MACF,MAAMN,aAAa,GAAGX,MAAM,CAACY,WAAW,CAAC,KAAK,CAAC;MAC/CC,MAAM,CAACF,aAAa,CAAC,CAACK,GAAG,CAACF,iBAAiB,EAAE;IAC/C,CAAC,CAAC;IAEFJ,EAAE,CAAC,gEAAgE,EAAE,MAAM;MACzER,oBAAoB,CAAC;QACnBa,mBAAmB,EAAE,IAAI;QACzBG,KAAK,EAAE;UACLC,SAAS,EAAE;QACb;MACF,CAAC,CAAC;MACF,MAAMR,aAAa,GAAGX,MAAM,CAACY,WAAW,CAAC,KAAK,CAAC;MAC/CC,MAAM,CAACF,aAAa,CAAC,CAACK,GAAG,CAACF,iBAAiB,EAAE;IAC/C,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC"}