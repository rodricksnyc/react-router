{"version":3,"file":"DateInput.js","names":["Box","InputDate","Popover","React","styled","TokenBase","inputPlacementStyle","FILTERS_DATE_FORMAT","formatDate","DateInputInternal","className","date","onChange","handleDayChange","d","newDate","Date","now","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","DateInput"],"sources":["../../../../../../../../../src/Filter/components/AdvancedFilter/components/DateFilter/components/DateInput/DateInput.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport { Box, InputDate, Popover } from '@looker/components'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { TokenBase } from '../../../../../../../Token/Token'\nimport type { PlacementProps } from '../../../../../../utils/filter_styles'\nimport { inputPlacementStyle } from '../../../../../../utils/filter_styles'\nimport { FILTERS_DATE_FORMAT, formatDate } from '../../utils/format_date'\n\ninterface DateInputProps extends PlacementProps {\n  className?: string\n  date: Date\n  onChange: (date: Date) => void\n}\n\nexport const DateInputInternal = ({\n  className,\n  date,\n  onChange,\n}: DateInputProps) => {\n  const handleDayChange = (d?: Date) => {\n    const newDate = d || new Date(Date.now())\n    // Note: We can't just pass the date object through because that would change the time of the date value.\n    // https://github.com/gpbl/react-day-picker/issues/473\n    onChange(\n      new Date(\n        newDate.getFullYear(),\n        newDate.getMonth(),\n        newDate.getDate(),\n        date.getHours(),\n        date.getMinutes(),\n        date.getSeconds()\n      )\n    )\n  }\n\n  return (\n    <Popover\n      content={\n        <Box p=\"small\">\n          <InputDate\n            defaultValue={date}\n            onChange={handleDayChange}\n            // hardcoding 'yyyy/MM/dd' for legacy reasons\n            // eventually this should be replaced with the user's preferred locale\n            dateStringFormat={FILTERS_DATE_FORMAT}\n          />\n        </Box>\n      }\n      placement=\"bottom-start\"\n    >\n      <TokenBase className={className} aria-selected=\"true\">\n        {formatDate(date)}\n      </TokenBase>\n    </Popover>\n  )\n}\n\nexport const DateInput = styled(DateInputInternal)`\n  ${inputPlacementStyle}\n`\n"],"mappings":";;AAIA,SAASA,GAAG,EAAEC,SAAS,EAAEC,OAAO,QAAQ,oBAAoB;AAC5D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,SAAS,QAAQ,kCAAkC;AAE5D,SAASC,mBAAmB,QAAQ,uCAAuC;AAC3E,SAASC,mBAAmB,EAAEC,UAAU,QAAQ,yBAAyB;AAQzE,OAAO,MAAMC,iBAAiB,GAAG,CAAC;EAChCC,SAAS;EACTC,IAAI;EACJC;AACc,CAAC,KAAK;EACpB,MAAMC,eAAe,GAAIC,CAAQ,IAAK;IACpC,MAAMC,OAAO,GAAGD,CAAC,IAAI,IAAIE,IAAI,CAACA,IAAI,CAACC,GAAG,EAAE,CAAC;IAGzCL,QAAQ,CACN,IAAII,IAAI,CACND,OAAO,CAACG,WAAW,EAAE,EACrBH,OAAO,CAACI,QAAQ,EAAE,EAClBJ,OAAO,CAACK,OAAO,EAAE,EACjBT,IAAI,CAACU,QAAQ,EAAE,EACfV,IAAI,CAACW,UAAU,EAAE,EACjBX,IAAI,CAACY,UAAU,EAAE,CAClB,CACF;EACH,CAAC;EAED,OACE,oBAAC,OAAO;IACN,OAAO,EACL,oBAAC,GAAG;MAAC,CAAC,EAAC;IAAO,GACZ,oBAAC,SAAS;MACR,YAAY,EAAEZ,IAAK;MACnB,QAAQ,EAAEE;MAAgB;MAG1B,gBAAgB,EAAEN;IAAoB,EACtC,CAEL;IACD,SAAS,EAAC;EAAc,GAExB,oBAAC,SAAS;IAAC,SAAS,EAAEG,SAAU;IAAC,iBAAc;EAAM,GAClDF,UAAU,CAACG,IAAI,CAAC,CACP,CACJ;AAEd,CAAC;AAED,OAAO,MAAMa,SAAS,GAAGpB,MAAM,CAACK,iBAAiB,CAAC;EAAA;EAAA;AAAA,gBAAC;AACnD,IAAE,CAAsB;AACxB,IADIH,mBAAmB,CACtB"}