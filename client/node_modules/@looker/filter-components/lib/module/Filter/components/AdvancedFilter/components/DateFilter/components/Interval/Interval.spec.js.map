{"version":3,"file":"Interval.spec.js","names":["closeCombobox","getAllComboboxOptionText","renderWithTheme","fireEvent","screen","React","Filter","testField","testFilterUIConfig","describe","it","jest","fn","click","getAllByRole","expect","toMatchInlineSnapshot","fiscal_month_offset"],"sources":["../../../../../../../../../src/Filter/components/AdvancedFilter/components/DateFilter/components/Interval/Interval.spec.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport {\n  closeCombobox,\n  getAllComboboxOptionText,\n  renderWithTheme,\n} from '@looker/components-test-utils'\nimport { fireEvent, screen } from '@testing-library/react'\nimport React from 'react'\nimport { Filter } from '../../../../../../Filter'\nimport {\n  testField,\n  testFilterUIConfig,\n} from '../../../../../../utils/filter_test_utils'\n\ndescribe('Interval Date filter test', () => {\n  it('should render an Interval component', () => {\n    renderWithTheme(\n      <Filter\n        expression={'3 days ago for 6 hours'}\n        name=\"test\"\n        onChange={jest.fn()}\n        field={testField}\n        expressionType=\"date\"\n        config={testFilterUIConfig}\n        allowMultipleValues={true}\n      />\n    )\n\n    fireEvent.click(screen.getAllByRole('textbox')[1])\n    expect(getAllComboboxOptionText()).toMatchInlineSnapshot(`\n      Array [\n        \"seconds\",\n        \"minutes\",\n        \"hours\",\n        \"days\",\n        \"weeks\",\n        \"months\",\n        \"quarters\",\n        \"years\",\n      ]\n    `)\n    closeCombobox()\n  })\n\n  it('should render an Interval component with Fiscal unit options', () => {\n    renderWithTheme(\n      <Filter\n        expression={'3 days ago for 6 hours'}\n        name=\"test\"\n        onChange={jest.fn()}\n        field={{ ...testField, fiscal_month_offset: 1 }}\n        expressionType=\"date\"\n        config={testFilterUIConfig}\n        allowMultipleValues={true}\n      />\n    )\n\n    fireEvent.click(screen.getAllByRole('textbox')[1])\n    expect(getAllComboboxOptionText()).toMatchInlineSnapshot(`\n      Array [\n        \"seconds\",\n        \"minutes\",\n        \"hours\",\n        \"days\",\n        \"weeks\",\n        \"months\",\n        \"quarters\",\n        \"years\",\n        \"fiscal quarters\",\n        \"fiscal years\",\n      ]\n    `)\n    closeCombobox()\n  })\n})\n"],"mappings":";;;AAIA,SACEA,aAAa,EACbC,wBAAwB,EACxBC,eAAe,QACV,+BAA+B;AACtC,SAASC,SAAS,EAAEC,MAAM,QAAQ,wBAAwB;AAC1D,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,0BAA0B;AACjD,SACEC,SAAS,EACTC,kBAAkB,QACb,2CAA2C;AAElDC,QAAQ,CAAC,2BAA2B,EAAE,MAAM;EAC1CC,EAAE,CAAC,qCAAqC,EAAE,MAAM;IAC9CR,eAAe,CACb,oBAAC,MAAM;MACL,UAAU,EAAE,wBAAyB;MACrC,IAAI,EAAC,MAAM;MACX,QAAQ,EAAES,IAAI,CAACC,EAAE,EAAG;MACpB,KAAK,EAAEL,SAAU;MACjB,cAAc,EAAC,MAAM;MACrB,MAAM,EAAEC,kBAAmB;MAC3B,mBAAmB,EAAE;IAAK,EAC1B,CACH;IAEDL,SAAS,CAACU,KAAK,CAACT,MAAM,CAACU,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;IAClDC,MAAM,CAACd,wBAAwB,EAAE,CAAC,CAACe,qBAAqB,CAAE;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,CAAC;IACFhB,aAAa,EAAE;EACjB,CAAC,CAAC;EAEFU,EAAE,CAAC,8DAA8D,EAAE,MAAM;IACvER,eAAe,CACb,oBAAC,MAAM;MACL,UAAU,EAAE,wBAAyB;MACrC,IAAI,EAAC,MAAM;MACX,QAAQ,EAAES,IAAI,CAACC,EAAE,EAAG;MACpB,KAAK,kCAAOL,SAAS;QAAEU,mBAAmB,EAAE;MAAC,EAAG;MAChD,cAAc,EAAC,MAAM;MACrB,MAAM,EAAET,kBAAmB;MAC3B,mBAAmB,EAAE;IAAK,EAC1B,CACH;IAEDL,SAAS,CAACU,KAAK,CAACT,MAAM,CAACU,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;IAClDC,MAAM,CAACd,wBAAwB,EAAE,CAAC,CAACe,qBAAqB,CAAE;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,CAAC;IACFhB,aAAa,EAAE;EACjB,CAAC,CAAC;AACJ,CAAC,CAAC"}