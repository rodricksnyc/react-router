{"version":3,"file":"OnDate.js","names":["clearTimeFilterDateTimeModel","dateToFilterDateTimeModel","filterDateTimeModelToDate","React","DateInput","OnDate","item","onChange","id","date","dateChange","newValue","newDateTimeModel","actualDate","Date","now"],"sources":["../../../../../../../../../src/Filter/components/AdvancedFilter/components/DateFilter/components/OnDate/OnDate.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport type { FilterModel } from '@looker/filter-expressions'\nimport {\n  clearTimeFilterDateTimeModel,\n  dateToFilterDateTimeModel,\n  filterDateTimeModelToDate,\n} from '@looker/filter-expressions'\nimport React from 'react'\nimport { DateInput } from '../DateInput'\n\ninterface OnDateParamProps {\n  item: FilterModel\n  onChange: (id: string, item: Partial<FilterModel>) => void\n}\n\nexport const OnDate = ({ item, onChange }: OnDateParamProps) => {\n  const { id, date } = item\n  const dateChange = (newValue: Date) => {\n    const newDateTimeModel = dateToFilterDateTimeModel(newValue)\n    // Since filter is 'on date' skip the time part (DX-5280)\n    onChange(id, { date: clearTimeFilterDateTimeModel(newDateTimeModel) })\n  }\n  const actualDate = date\n    ? filterDateTimeModelToDate(date)\n    : new Date(Date.now())\n\n  return <DateInput date={actualDate} onChange={dateChange} placement=\"right\" />\n}\n"],"mappings":";;AAKA,SACEA,4BAA4B,EAC5BC,yBAAyB,EACzBC,yBAAyB,QACpB,4BAA4B;AACnC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,cAAc;AAOxC,OAAO,MAAMC,MAAM,GAAG,CAAC;EAAEC,IAAI;EAAEC;AAA2B,CAAC,KAAK;EAC9D,MAAM;IAAEC,EAAE;IAAEC;EAAK,CAAC,GAAGH,IAAI;EACzB,MAAMI,UAAU,GAAIC,QAAc,IAAK;IACrC,MAAMC,gBAAgB,GAAGX,yBAAyB,CAACU,QAAQ,CAAC;IAE5DJ,QAAQ,CAACC,EAAE,EAAE;MAAEC,IAAI,EAAET,4BAA4B,CAACY,gBAAgB;IAAE,CAAC,CAAC;EACxE,CAAC;EACD,MAAMC,UAAU,GAAGJ,IAAI,GACnBP,yBAAyB,CAACO,IAAI,CAAC,GAC/B,IAAIK,IAAI,CAACA,IAAI,CAACC,GAAG,EAAE,CAAC;EAExB,OAAO,oBAAC,SAAS;IAAC,IAAI,EAAEF,UAAW;IAAC,QAAQ,EAAEH,UAAW;IAAC,SAAS,EAAC;EAAO,EAAG;AAChF,CAAC"}