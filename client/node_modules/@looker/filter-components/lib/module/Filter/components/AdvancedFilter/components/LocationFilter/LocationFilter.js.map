{"version":3,"file":"LocationFilter.js","names":["Box","Flex","React","GroupSelect","locationFilterTypeToFilter","useLocationFilterOptions","useFilterOptions","LocationFilter","item","filterType","onChange","userAttributes","validationMessage","showMatchesAdvanced","locationFilterOptions","options","locationTypeChange","value","id","type","FilterComponent","includes","undefined"],"sources":["../../../../../../../src/Filter/components/AdvancedFilter/components/LocationFilter/LocationFilter.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport { Box, Flex } from '@looker/components'\nimport type { LocationFilterType } from '@looker/filter-expressions'\nimport React from 'react'\nimport type { FilterParamProps } from '../../../../types/filter_param_props'\nimport { GroupSelect } from '../GroupSelect'\nimport { locationFilterTypeToFilter } from './utils/location_filter_type_to_filter'\nimport { useLocationFilterOptions, useFilterOptions } from '../../utils'\n\nexport const LocationFilter = ({\n  item,\n  filterType,\n  onChange,\n  userAttributes,\n  validationMessage,\n  showMatchesAdvanced,\n}: FilterParamProps<LocationFilterType>) => {\n  const locationFilterOptions = useLocationFilterOptions()\n  const options = useFilterOptions(locationFilterOptions, showMatchesAdvanced)\n\n  const locationTypeChange = (value: string) =>\n    onChange(item.id, { type: value })\n\n  const FilterComponent: any = locationFilterTypeToFilter(item.type)\n\n  return (\n    <Flex flexDirection=\"row\" alignItems=\"center\">\n      <Box>\n        <GroupSelect\n          value={item.type}\n          options={options}\n          onChange={locationTypeChange}\n          validationType={validationMessage?.type}\n          placement={\n            ['null', 'notnull', 'anyvalue'].includes(item.type)\n              ? undefined\n              : 'left'\n          }\n        />\n      </Box>\n      <FilterComponent\n        item={item}\n        onChange={onChange}\n        validationMessage={validationMessage}\n        userAttributes={userAttributes}\n        filterType={filterType}\n      />\n    </Flex>\n  )\n}\n"],"mappings":";AAIA,SAASA,GAAG,EAAEC,IAAI,QAAQ,oBAAoB;AAE9C,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,0BAA0B,QAAQ,wCAAwC;AACnF,SAASC,wBAAwB,EAAEC,gBAAgB,QAAQ,aAAa;AAExE,OAAO,MAAMC,cAAc,GAAG,CAAC;EAC7BC,IAAI;EACJC,UAAU;EACVC,QAAQ;EACRC,cAAc;EACdC,iBAAiB;EACjBC;AACoC,CAAC,KAAK;EAC1C,MAAMC,qBAAqB,GAAGT,wBAAwB,EAAE;EACxD,MAAMU,OAAO,GAAGT,gBAAgB,CAACQ,qBAAqB,EAAED,mBAAmB,CAAC;EAE5E,MAAMG,kBAAkB,GAAIC,KAAa,IACvCP,QAAQ,CAACF,IAAI,CAACU,EAAE,EAAE;IAAEC,IAAI,EAAEF;EAAM,CAAC,CAAC;EAEpC,MAAMG,eAAoB,GAAGhB,0BAA0B,CAACI,IAAI,CAACW,IAAI,CAAC;EAElE,OACE,oBAAC,IAAI;IAAC,aAAa,EAAC,KAAK;IAAC,UAAU,EAAC;EAAQ,GAC3C,oBAAC,GAAG,QACF,oBAAC,WAAW;IACV,KAAK,EAAEX,IAAI,CAACW,IAAK;IACjB,OAAO,EAAEJ,OAAQ;IACjB,QAAQ,EAAEC,kBAAmB;IAC7B,cAAc,EAAEJ,iBAAiB,aAAjBA,iBAAiB,uBAAjBA,iBAAiB,CAAEO,IAAK;IACxC,SAAS,EACP,CAAC,MAAM,EAAE,SAAS,EAAE,UAAU,CAAC,CAACE,QAAQ,CAACb,IAAI,CAACW,IAAI,CAAC,GAC/CG,SAAS,GACT;EACL,EACD,CACE,EACN,oBAAC,eAAe;IACd,IAAI,EAAEd,IAAK;IACX,QAAQ,EAAEE,QAAS;IACnB,iBAAiB,EAAEE,iBAAkB;IACrC,cAAc,EAAED,cAAe;IAC/B,UAAU,EAAEF;EAAW,EACvB,CACG;AAEX,CAAC"}