{"version":3,"file":"LocationCircle.js","names":["Flex","pick","React","GroupInput","GroupSelect","LocationExact","useUnitOptions","LocationCircle","item","onChange","unitOptions","distanceChange","event","Number","currentTarget","value","id","distance","unit","unitChange","String"],"sources":["../../../../../../../../../src/Filter/components/AdvancedFilter/components/LocationFilter/components/LocationCircle/LocationCircle.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport { Flex } from '@looker/components'\nimport type {\n  CircleFilterItem,\n  ExactLocationFilterItem,\n} from '@looker/filter-expressions'\nimport pick from 'lodash/pick'\nimport type { ChangeEvent } from 'react'\nimport React from 'react'\nimport { GroupInput } from '../../../GroupInput'\nimport { GroupSelect } from '../../../GroupSelect'\nimport { LocationExact } from '../LocationExact'\nimport { useUnitOptions } from '../../../../utils'\n\ninterface LocationCircleProps {\n  onChange: (id: string, value: any) => void\n  item: CircleFilterItem\n}\n\nexport const LocationCircle = ({ item, onChange }: LocationCircleProps) => {\n  const unitOptions = useUnitOptions()\n\n  const distanceChange = (event: ChangeEvent<HTMLInputElement>) => {\n    if (Number(event.currentTarget.value) >= 0) {\n      onChange?.(item.id, {\n        distance: event.currentTarget.value,\n        unit: item.unit || 'miles',\n      })\n    }\n  }\n  const unitChange = (value: string) => {\n    onChange?.(item.id, { unit: value })\n  }\n\n  return (\n    <Flex flexDirection=\"row\">\n      <GroupInput\n        value={String(item.distance || '')}\n        type=\"number\"\n        onChange={distanceChange}\n        minWidth=\"4.5em\"\n      />\n      <GroupSelect\n        placement=\"middle\"\n        value={item.unit || 'miles'}\n        options={unitOptions}\n        onChange={unitChange}\n      />\n      <LocationExact\n        item={\n          pick(item, [\n            'id',\n            'is',\n            'lat',\n            'lon',\n            'type',\n          ]) as ExactLocationFilterItem\n        }\n        onChange={onChange}\n        latString=\"FROM LATITUDE\"\n      />\n    </Flex>\n  )\n}\n"],"mappings":";AAIA,SAASA,IAAI,QAAQ,oBAAoB;AAKzC,OAAOC,IAAI,MAAM,aAAa;AAE9B,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,qBAAqB;AAChD,SAASC,WAAW,QAAQ,sBAAsB;AAClD,SAASC,aAAa,QAAQ,kBAAkB;AAChD,SAASC,cAAc,QAAQ,mBAAmB;AAOlD,OAAO,MAAMC,cAAc,GAAG,CAAC;EAAEC,IAAI;EAAEC;AAA8B,CAAC,KAAK;EACzE,MAAMC,WAAW,GAAGJ,cAAc,EAAE;EAEpC,MAAMK,cAAc,GAAIC,KAAoC,IAAK;IAC/D,IAAIC,MAAM,CAACD,KAAK,CAACE,aAAa,CAACC,KAAK,CAAC,IAAI,CAAC,EAAE;MAC1CN,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAGD,IAAI,CAACQ,EAAE,EAAE;QAClBC,QAAQ,EAAEL,KAAK,CAACE,aAAa,CAACC,KAAK;QACnCG,IAAI,EAAEV,IAAI,CAACU,IAAI,IAAI;MACrB,CAAC,CAAC;IACJ;EACF,CAAC;EACD,MAAMC,UAAU,GAAIJ,KAAa,IAAK;IACpCN,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAGD,IAAI,CAACQ,EAAE,EAAE;MAAEE,IAAI,EAAEH;IAAM,CAAC,CAAC;EACtC,CAAC;EAED,OACE,oBAAC,IAAI;IAAC,aAAa,EAAC;EAAK,GACvB,oBAAC,UAAU;IACT,KAAK,EAAEK,MAAM,CAACZ,IAAI,CAACS,QAAQ,IAAI,EAAE,CAAE;IACnC,IAAI,EAAC,QAAQ;IACb,QAAQ,EAAEN,cAAe;IACzB,QAAQ,EAAC;EAAO,EAChB,EACF,oBAAC,WAAW;IACV,SAAS,EAAC,QAAQ;IAClB,KAAK,EAAEH,IAAI,CAACU,IAAI,IAAI,OAAQ;IAC5B,OAAO,EAAER,WAAY;IACrB,QAAQ,EAAES;EAAW,EACrB,EACF,oBAAC,aAAa;IACZ,IAAI,EACFlB,IAAI,CAACO,IAAI,EAAE,CACT,IAAI,EACJ,IAAI,EACJ,KAAK,EACL,KAAK,EACL,MAAM,CACP,CACF;IACD,QAAQ,EAAEC,QAAS;IACnB,SAAS,EAAC;EAAe,EACzB,CACG;AAEX,CAAC"}