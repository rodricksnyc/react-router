{"version":3,"file":"LocationCircle.spec.js","names":["renderWithTheme","screen","fireEvent","React","LocationCircle","describe","item","id","type","is","lat","lon","distance","unit","it","jest","fn","expect","getByRole","toHaveValue","getByDisplayValue","toBeVisible","onChange","change","target","value","toHaveBeenCalledWith","selectInput","click","kilometers","getByText"],"sources":["../../../../../../../../../src/Filter/components/AdvancedFilter/components/LocationFilter/components/LocationCircle/LocationCircle.spec.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport { renderWithTheme } from '@looker/components-test-utils'\nimport { screen, fireEvent } from '@testing-library/react'\nimport React from 'react'\nimport { LocationCircle } from './LocationCircle'\n\ndescribe('LocationCircle filter tests', () => {\n  const item = {\n    id: '1',\n    type: 'anywhere',\n    is: true,\n    lat: 1,\n    lon: 1,\n    distance: 5,\n    unit: 'feet',\n  }\n\n  it('should render a LocationCircle', () => {\n    renderWithTheme(<LocationCircle item={item} onChange={jest.fn()} />)\n    expect(screen.getByRole('textbox')).toHaveValue('feet')\n    expect(screen.getByDisplayValue('5')).toBeVisible()\n  })\n\n  it('should call onChange with the correct distance when distance is changed', () => {\n    const onChange = jest.fn()\n    renderWithTheme(<LocationCircle item={item} onChange={onChange} />)\n    fireEvent.change(screen.getByDisplayValue('5'), { target: { value: '6' } })\n    expect(onChange).toHaveBeenCalledWith('1', { distance: '6', unit: 'feet' })\n  })\n\n  it('should call onChange with the correct unit when unit is changed', () => {\n    const onChange = jest.fn()\n    renderWithTheme(<LocationCircle item={item} onChange={onChange} />)\n\n    const selectInput = screen.getByDisplayValue('feet')\n    fireEvent.click(selectInput)\n\n    const kilometers = screen.getByText('kilometers')\n    fireEvent.click(kilometers)\n    expect(onChange).toHaveBeenCalledWith('1', { unit: 'kilometers' })\n  })\n})\n"],"mappings":";AAIA,SAASA,eAAe,QAAQ,+BAA+B;AAC/D,SAASC,MAAM,EAAEC,SAAS,QAAQ,wBAAwB;AAC1D,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,kBAAkB;AAEjDC,QAAQ,CAAC,6BAA6B,EAAE,MAAM;EAC5C,MAAMC,IAAI,GAAG;IACXC,EAAE,EAAE,GAAG;IACPC,IAAI,EAAE,UAAU;IAChBC,EAAE,EAAE,IAAI;IACRC,GAAG,EAAE,CAAC;IACNC,GAAG,EAAE,CAAC;IACNC,QAAQ,EAAE,CAAC;IACXC,IAAI,EAAE;EACR,CAAC;EAEDC,EAAE,CAAC,gCAAgC,EAAE,MAAM;IACzCd,eAAe,CAAC,oBAAC,cAAc;MAAC,IAAI,EAAEM,IAAK;MAAC,QAAQ,EAAES,IAAI,CAACC,EAAE;IAAG,EAAG,CAAC;IACpEC,MAAM,CAAChB,MAAM,CAACiB,SAAS,CAAC,SAAS,CAAC,CAAC,CAACC,WAAW,CAAC,MAAM,CAAC;IACvDF,MAAM,CAAChB,MAAM,CAACmB,iBAAiB,CAAC,GAAG,CAAC,CAAC,CAACC,WAAW,EAAE;EACrD,CAAC,CAAC;EAEFP,EAAE,CAAC,yEAAyE,EAAE,MAAM;IAClF,MAAMQ,QAAQ,GAAGP,IAAI,CAACC,EAAE,EAAE;IAC1BhB,eAAe,CAAC,oBAAC,cAAc;MAAC,IAAI,EAAEM,IAAK;MAAC,QAAQ,EAAEgB;IAAS,EAAG,CAAC;IACnEpB,SAAS,CAACqB,MAAM,CAACtB,MAAM,CAACmB,iBAAiB,CAAC,GAAG,CAAC,EAAE;MAAEI,MAAM,EAAE;QAAEC,KAAK,EAAE;MAAI;IAAE,CAAC,CAAC;IAC3ER,MAAM,CAACK,QAAQ,CAAC,CAACI,oBAAoB,CAAC,GAAG,EAAE;MAAEd,QAAQ,EAAE,GAAG;MAAEC,IAAI,EAAE;IAAO,CAAC,CAAC;EAC7E,CAAC,CAAC;EAEFC,EAAE,CAAC,iEAAiE,EAAE,MAAM;IAC1E,MAAMQ,QAAQ,GAAGP,IAAI,CAACC,EAAE,EAAE;IAC1BhB,eAAe,CAAC,oBAAC,cAAc;MAAC,IAAI,EAAEM,IAAK;MAAC,QAAQ,EAAEgB;IAAS,EAAG,CAAC;IAEnE,MAAMK,WAAW,GAAG1B,MAAM,CAACmB,iBAAiB,CAAC,MAAM,CAAC;IACpDlB,SAAS,CAAC0B,KAAK,CAACD,WAAW,CAAC;IAE5B,MAAME,UAAU,GAAG5B,MAAM,CAAC6B,SAAS,CAAC,YAAY,CAAC;IACjD5B,SAAS,CAAC0B,KAAK,CAACC,UAAU,CAAC;IAC3BZ,MAAM,CAACK,QAAQ,CAAC,CAACI,oBAAoB,CAAC,GAAG,EAAE;MAAEb,IAAI,EAAE;IAAa,CAAC,CAAC;EACpE,CAAC,CAAC;AACJ,CAAC,CAAC"}