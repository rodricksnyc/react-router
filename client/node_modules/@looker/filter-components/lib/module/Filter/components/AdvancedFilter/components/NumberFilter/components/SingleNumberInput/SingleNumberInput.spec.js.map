{"version":3,"file":"SingleNumberInput.spec.js","names":["renderWithTheme","screen","fireEvent","React","SingleNumberInput","describe","props","item","id","type","value","onChange","jest","fn","beforeEach","mockClear","it","input","getByTestId","expect","toHaveAttribute","toHaveDisplayValue","change","target","toHaveBeenCalledWith","not","toHaveBeenCalled","mock","calls","toMatchInlineSnapshot"],"sources":["../../../../../../../../../src/Filter/components/AdvancedFilter/components/NumberFilter/components/SingleNumberInput/SingleNumberInput.spec.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport { renderWithTheme } from '@looker/components-test-utils'\nimport type { FilterModel } from '@looker/filter-expressions'\nimport { screen, fireEvent } from '@testing-library/react'\nimport React from 'react'\nimport { SingleNumberInput } from './SingleNumberInput'\n\ndescribe('SingleNumberInput component', () => {\n  const props = {\n    item: { id: 'test_id', type: '=', value: [] } as unknown as FilterModel,\n    onChange: jest.fn(),\n  }\n  beforeEach(() => {\n    props.onChange.mockClear()\n  })\n\n  it('defaults to empty string', () => {\n    renderWithTheme(<SingleNumberInput {...props} />)\n    // Can't use getByRole('textbox') for type=\"number\"\n    const input = screen.getByTestId('single-number')\n    // type=\"number\" is important, it prevents non-numeric input\n    expect(input).toHaveAttribute('type', 'number')\n    expect(input).toHaveDisplayValue('')\n  })\n\n  it('shows the current itemValue', () => {\n    renderWithTheme(\n      <SingleNumberInput\n        {...props}\n        item={{ id: 'test_id', type: '=', value: 1 } as unknown as FilterModel}\n      />\n    )\n    // Can't use getByRole('textbox') for type=\"number\"\n    const input = screen.getByTestId('single-number')\n    // type=\"number\" is important, it prevents non-numeric input\n    expect(input).toHaveAttribute('type', 'number')\n    expect(input).toHaveDisplayValue('1')\n  })\n\n  it('shows the current itemValue if it is zero (0)', () => {\n    // bug fix for b/265746708\n    renderWithTheme(\n      <SingleNumberInput\n        {...props}\n        item={{ id: 'test_id', type: '=', value: 0 } as unknown as FilterModel}\n      />\n    )\n    const input = screen.getByTestId('single-number')\n    expect(input).toHaveDisplayValue('0')\n  })\n\n  describe('calls onChange handler', () => {\n    it('calls onChange handler for number value', () => {\n      renderWithTheme(<SingleNumberInput {...props} />)\n      const input = screen.getByTestId('single-number')\n      fireEvent.change(input, { target: { value: '2' } })\n      expect(props.onChange).toHaveBeenCalledWith('test_id', { value: [2] })\n    })\n\n    it('Does not call onChange handler for not numeric value', () => {\n      renderWithTheme(<SingleNumberInput {...props} />)\n      fireEvent.change(screen.getByTestId('single-number'), {\n        target: { value: 'not numeric value' },\n      })\n      expect(props.onChange).not.toHaveBeenCalled()\n    })\n\n    it('calls onChange handler for big integer', () => {\n      renderWithTheme(<SingleNumberInput {...props} />)\n      const input = screen.getByTestId('single-number')\n      fireEvent.change(input, { target: { value: '12345678901234567890' } })\n      expect(props.onChange.mock.calls).toMatchInlineSnapshot(`\n        Array [\n          Array [\n            \"test_id\",\n            Object {\n              \"value\": Array [\n                12345678901234567890n,\n              ],\n            },\n          ],\n        ]\n      `)\n    })\n  })\n})\n"],"mappings":"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"}