{"version":3,"file":"StringInput.spec.js","names":["renderWithTheme","fireEvent","screen","React","StringInput","describe","jest","useFakeTimers","getMockedComponent","props","fn","id","it","suggestions","input","getByPlaceholderText","click","expect","getByRole","toBeInTheDocument","getByText","document","onChangeMock","onInputChange","change","target","value","keyDown","key","code","charCode","queryByText","not"],"sources":["../../../../../../../../../src/Filter/components/AdvancedFilter/components/StringFilter/components/StringInput/StringInput.spec.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport type { FilterModel } from '@looker/filter-expressions'\nimport { renderWithTheme } from '@looker/components-test-utils'\nimport { fireEvent, screen } from '@testing-library/react'\nimport React from 'react'\nimport { StringInput } from './StringInput'\n\ndescribe('StringInput tests', () => {\n  jest.useFakeTimers()\n  const getMockedComponent = ({ ...props }) => (\n    <StringInput\n      onChange={jest.fn()}\n      item={{ id: '1' } as FilterModel}\n      suggestions={['Foo']}\n      {...props}\n    />\n  )\n\n  describe('showDropDownMenu', () => {\n    it('should show options dropdown if there are suggestions available', () => {\n      renderWithTheme(getMockedComponent({ suggestions: ['Foo'] }))\n\n      const input = screen.getByPlaceholderText('any value')\n      fireEvent.click(input)\n\n      expect(screen.getByRole('listbox')).toBeInTheDocument()\n      expect(screen.getByText('Foo')).toBeInTheDocument()\n\n      // Close popover to silence act() warning\n      fireEvent.click(document)\n    })\n  })\n\n  describe('event hanlders', () => {\n    it('should hide the options popover on enter', () => {\n      const onChangeMock = jest.fn()\n      renderWithTheme(\n        getMockedComponent({\n          suggestions: ['Foo'],\n          onInputChange: onChangeMock,\n        })\n      )\n      const input = screen.getByPlaceholderText('any value')\n      fireEvent.click(input)\n      fireEvent.change(input, { target: { value: 'bar' } })\n      fireEvent.keyDown(input, { key: 'Enter', code: 'Enter', charCode: 13 })\n      expect(screen.queryByText('Foo')).not.toBeInTheDocument()\n    })\n  })\n})\n"],"mappings":";;;AAKA,SAASA,eAAe,QAAQ,+BAA+B;AAC/D,SAASC,SAAS,EAAEC,MAAM,QAAQ,wBAAwB;AAC1D,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,eAAe;AAE3CC,QAAQ,CAAC,mBAAmB,EAAE,MAAM;EAClCC,IAAI,CAACC,aAAa,EAAE;EACpB,MAAMC,kBAAkB,GAAG;IAAA,IAAMC,KAAK;IAAA,OACpC,oBAAC,WAAW;MACV,QAAQ,EAAEH,IAAI,CAACI,EAAE,EAAG;MACpB,IAAI,EAAE;QAAEC,EAAE,EAAE;MAAI,CAAiB;MACjC,WAAW,EAAE,CAAC,KAAK;IAAE,GACjBF,KAAK,EACT;EAAA,CACH;EAEDJ,QAAQ,CAAC,kBAAkB,EAAE,MAAM;IACjCO,EAAE,CAAC,iEAAiE,EAAE,MAAM;MAC1EZ,eAAe,CAACQ,kBAAkB,CAAC;QAAEK,WAAW,EAAE,CAAC,KAAK;MAAE,CAAC,CAAC,CAAC;MAE7D,MAAMC,KAAK,GAAGZ,MAAM,CAACa,oBAAoB,CAAC,WAAW,CAAC;MACtDd,SAAS,CAACe,KAAK,CAACF,KAAK,CAAC;MAEtBG,MAAM,CAACf,MAAM,CAACgB,SAAS,CAAC,SAAS,CAAC,CAAC,CAACC,iBAAiB,EAAE;MACvDF,MAAM,CAACf,MAAM,CAACkB,SAAS,CAAC,KAAK,CAAC,CAAC,CAACD,iBAAiB,EAAE;;MAGnDlB,SAAS,CAACe,KAAK,CAACK,QAAQ,CAAC;IAC3B,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFhB,QAAQ,CAAC,gBAAgB,EAAE,MAAM;IAC/BO,EAAE,CAAC,0CAA0C,EAAE,MAAM;MACnD,MAAMU,YAAY,GAAGhB,IAAI,CAACI,EAAE,EAAE;MAC9BV,eAAe,CACbQ,kBAAkB,CAAC;QACjBK,WAAW,EAAE,CAAC,KAAK,CAAC;QACpBU,aAAa,EAAED;MACjB,CAAC,CAAC,CACH;MACD,MAAMR,KAAK,GAAGZ,MAAM,CAACa,oBAAoB,CAAC,WAAW,CAAC;MACtDd,SAAS,CAACe,KAAK,CAACF,KAAK,CAAC;MACtBb,SAAS,CAACuB,MAAM,CAACV,KAAK,EAAE;QAAEW,MAAM,EAAE;UAAEC,KAAK,EAAE;QAAM;MAAE,CAAC,CAAC;MACrDzB,SAAS,CAAC0B,OAAO,CAACb,KAAK,EAAE;QAAEc,GAAG,EAAE,OAAO;QAAEC,IAAI,EAAE,OAAO;QAAEC,QAAQ,EAAE;MAAG,CAAC,CAAC;MACvEb,MAAM,CAACf,MAAM,CAAC6B,WAAW,CAAC,KAAK,CAAC,CAAC,CAACC,GAAG,CAACb,iBAAiB,EAAE;IAC3D,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC"}