{"version":3,"file":"ParamFilter.spec.js","names":["renderWithTheme","screen","React","ParamFilter","describe","enumerations","label","value","it","id","select","findByText","expect","toBeVisible"],"sources":["../../../../../../../../../src/Filter/components/AdvancedFilter/components/TierFilter/components/ParamFilter/ParamFilter.spec.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport { renderWithTheme } from '@looker/components-test-utils'\nimport { screen } from '@testing-library/react'\nimport type { FilterModel } from '@looker/filter-expressions'\nimport React from 'react'\nimport { ParamFilter } from './ParamFilter'\n\ndescribe('ParamFilter tests', () => {\n  const enumerations = [\n    {\n      label: 'First',\n      value: 'first',\n    },\n    {\n      label: 'Second',\n      value: 'second',\n    },\n    {\n      label: 'Third',\n      value: 'third',\n    },\n  ]\n\n  it('should select new option when clicked', async () => {\n    renderWithTheme(\n      <ParamFilter\n        item={\n          {\n            id: 1,\n            value: ['first'],\n          } as unknown as FilterModel\n        }\n        enumerations={enumerations}\n      />\n    )\n\n    const select = await screen.findByText('First')\n\n    expect(select).toBeVisible()\n  })\n})\n"],"mappings":";AAIA,SAASA,eAAe,QAAQ,+BAA+B;AAC/D,SAASC,MAAM,QAAQ,wBAAwB;AAE/C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,eAAe;AAE3CC,QAAQ,CAAC,mBAAmB,EAAE,MAAM;EAClC,MAAMC,YAAY,GAAG,CACnB;IACEC,KAAK,EAAE,OAAO;IACdC,KAAK,EAAE;EACT,CAAC,EACD;IACED,KAAK,EAAE,QAAQ;IACfC,KAAK,EAAE;EACT,CAAC,EACD;IACED,KAAK,EAAE,OAAO;IACdC,KAAK,EAAE;EACT,CAAC,CACF;EAEDC,EAAE,CAAC,uCAAuC,EAAE,YAAY;IACtDR,eAAe,CACb,oBAAC,WAAW;MACV,IAAI,EACF;QACES,EAAE,EAAE,CAAC;QACLF,KAAK,EAAE,CAAC,OAAO;MACjB,CACD;MACD,YAAY,EAAEF;IAAa,EAC3B,CACH;IAED,MAAMK,MAAM,GAAG,MAAMT,MAAM,CAACU,UAAU,CAAC,OAAO,CAAC;IAE/CC,MAAM,CAACF,MAAM,CAAC,CAACG,WAAW,EAAE;EAC9B,CAAC,CAAC;AACJ,CAAC,CAAC"}