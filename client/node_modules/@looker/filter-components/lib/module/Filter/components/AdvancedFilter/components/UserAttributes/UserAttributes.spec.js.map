{"version":3,"file":"UserAttributes.spec.js","names":["renderWithTheme","fireEvent","screen","React","UserAttributes","describe","testUserAttributes","name","label","rank","value","user_id","user_can_edit","value_is_hidden","user_attribute_id","source","hidden_value_domain_whitelist","can","edit","testItem","id","type","is","attributeName","filterParamProps","item","userAttributes","onChange","jest","fn","it","expect","getByRole","toHaveValue","props","selectInput","getByDisplayValue","click","attribute","getByText","toHaveBeenCalledWith","attributeValue"],"sources":["../../../../../../../src/Filter/components/AdvancedFilter/components/UserAttributes/UserAttributes.spec.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport { renderWithTheme } from '@looker/components-test-utils'\nimport type { UserAttributeWithValue } from '@looker/filter-expressions'\nimport { fireEvent, screen } from '@testing-library/react'\nimport React from 'react'\nimport { UserAttributes } from './UserAttributes'\n\ndescribe('User Attribute', () => {\n  const testUserAttributes = {\n    name: 'testAttributeName',\n    label: 'label',\n    rank: 1,\n    value: 'value',\n    user_id: '2',\n    user_can_edit: true,\n    value_is_hidden: false,\n    user_attribute_id: '3',\n    source: 'source',\n    hidden_value_domain_whitelist: 'hidden value domain whitelist',\n    can: { edit: true },\n  } as UserAttributeWithValue\n\n  const testItem = {\n    id: '4',\n    type: 'anywhere',\n    is: true,\n    attributeName: 'testAttributeName',\n  }\n  const filterParamProps = () =>\n    ({\n      item: testItem,\n      userAttributes: [\n        testUserAttributes,\n        { name: 'testAttributeName2', value: 'value2', label: 'label2' },\n      ],\n      onChange: jest.fn(),\n    } as any)\n\n  it('should render a User Attribute', () => {\n    renderWithTheme(<UserAttributes {...filterParamProps()} />)\n    expect(screen.getByRole('textbox')).toHaveValue('label (value)')\n  })\n\n  it('should call userAttributeChange on change', () => {\n    const props = filterParamProps()\n    renderWithTheme(<UserAttributes {...props} />)\n\n    const selectInput = screen.getByDisplayValue('label (value)')\n    fireEvent.click(selectInput)\n\n    const attribute = screen.getByText('label2 (value2)')\n    fireEvent.click(attribute)\n\n    expect(props.onChange).toHaveBeenCalledWith('4', {\n      attributeName: 'testAttributeName2',\n      attributeValue: 'value2',\n    })\n  })\n})\n"],"mappings":";AAIA,SAASA,eAAe,QAAQ,+BAA+B;AAE/D,SAASC,SAAS,EAAEC,MAAM,QAAQ,wBAAwB;AAC1D,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,kBAAkB;AAEjDC,QAAQ,CAAC,gBAAgB,EAAE,MAAM;EAC/B,MAAMC,kBAAkB,GAAG;IACzBC,IAAI,EAAE,mBAAmB;IACzBC,KAAK,EAAE,OAAO;IACdC,IAAI,EAAE,CAAC;IACPC,KAAK,EAAE,OAAO;IACdC,OAAO,EAAE,GAAG;IACZC,aAAa,EAAE,IAAI;IACnBC,eAAe,EAAE,KAAK;IACtBC,iBAAiB,EAAE,GAAG;IACtBC,MAAM,EAAE,QAAQ;IAChBC,6BAA6B,EAAE,+BAA+B;IAC9DC,GAAG,EAAE;MAAEC,IAAI,EAAE;IAAK;EACpB,CAA2B;EAE3B,MAAMC,QAAQ,GAAG;IACfC,EAAE,EAAE,GAAG;IACPC,IAAI,EAAE,UAAU;IAChBC,EAAE,EAAE,IAAI;IACRC,aAAa,EAAE;EACjB,CAAC;EACD,MAAMC,gBAAgB,GAAG,OACtB;IACCC,IAAI,EAAEN,QAAQ;IACdO,cAAc,EAAE,CACdpB,kBAAkB,EAClB;MAAEC,IAAI,EAAE,oBAAoB;MAAEG,KAAK,EAAE,QAAQ;MAAEF,KAAK,EAAE;IAAS,CAAC,CACjE;IACDmB,QAAQ,EAAEC,IAAI,CAACC,EAAE;EACnB,CAAC,CAAQ;EAEXC,EAAE,CAAC,gCAAgC,EAAE,MAAM;IACzC9B,eAAe,CAAC,oBAAC,cAAc,EAAKwB,gBAAgB,EAAE,CAAI,CAAC;IAC3DO,MAAM,CAAC7B,MAAM,CAAC8B,SAAS,CAAC,SAAS,CAAC,CAAC,CAACC,WAAW,CAAC,eAAe,CAAC;EAClE,CAAC,CAAC;EAEFH,EAAE,CAAC,2CAA2C,EAAE,MAAM;IACpD,MAAMI,KAAK,GAAGV,gBAAgB,EAAE;IAChCxB,eAAe,CAAC,oBAAC,cAAc,EAAKkC,KAAK,CAAI,CAAC;IAE9C,MAAMC,WAAW,GAAGjC,MAAM,CAACkC,iBAAiB,CAAC,eAAe,CAAC;IAC7DnC,SAAS,CAACoC,KAAK,CAACF,WAAW,CAAC;IAE5B,MAAMG,SAAS,GAAGpC,MAAM,CAACqC,SAAS,CAAC,iBAAiB,CAAC;IACrDtC,SAAS,CAACoC,KAAK,CAACC,SAAS,CAAC;IAE1BP,MAAM,CAACG,KAAK,CAACP,QAAQ,CAAC,CAACa,oBAAoB,CAAC,GAAG,EAAE;MAC/CjB,aAAa,EAAE,oBAAoB;MACnCkB,cAAc,EAAE;IAClB,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC"}