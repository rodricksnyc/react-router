{"version":3,"file":"ButtonToggles.spec.js","names":["renderWithTheme","fireEvent","screen","React","ButtonToggles","options","label","value","describe","it","jest","fn","expect","getByText","toHaveAttribute","mock","click","toHaveBeenCalledWith","getByRole","toBeInTheDocument"],"sources":["../../../../../../../src/Filter/components/ControlFilter/components/ButtonToggles/ButtonToggles.spec.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport { renderWithTheme } from '@looker/components-test-utils'\nimport { fireEvent, screen } from '@testing-library/react'\nimport React from 'react'\nimport { ButtonToggles } from './ButtonToggles'\n\nconst options = [\n  {\n    label: 'label1',\n    value: 'value1',\n  },\n  {\n    label: 'label2',\n    value: 'value2',\n  },\n  {\n    label: 'label3',\n    value: 'value3',\n  },\n]\n\ndescribe('ButtonToggles tests', () => {\n  it('ButtonToggles with values pre-selected are selected', () => {\n    renderWithTheme(\n      <ButtonToggles value={'value1'} options={options} onChange={jest.fn()} />\n    )\n\n    expect(screen.getByText('label1')).toHaveAttribute('aria-pressed', 'true')\n    expect(screen.getByText('label2')).toHaveAttribute('aria-pressed', 'false')\n    expect(screen.getByText('label3')).toHaveAttribute('aria-pressed', 'false')\n  })\n\n  it('passes onChange newly selected value', () => {\n    const mock = jest.fn()\n    renderWithTheme(\n      <ButtonToggles value={''} options={options} onChange={mock} />\n    )\n\n    fireEvent.click(screen.getByText('label1'))\n    expect(mock).toHaveBeenCalledWith('value1')\n  })\n\n  it('passes onChange new value when other value is clicked', () => {\n    const mock = jest.fn()\n    renderWithTheme(\n      <ButtonToggles value={'value1'} options={options} onChange={mock} />\n    )\n\n    fireEvent.click(screen.getByText('label2'))\n    expect(mock).toHaveBeenCalledWith('value2')\n  })\n\n  it('handles loading state', () => {\n    renderWithTheme(\n      <ButtonToggles\n        isLoading\n        value={'value1'}\n        options={options}\n        onChange={jest.fn()}\n      />\n    )\n    expect(screen.getByRole('progressbar')).toBeInTheDocument()\n  })\n})\n"],"mappings":";AAIA,SAASA,eAAe,QAAQ,+BAA+B;AAC/D,SAASC,SAAS,EAAEC,MAAM,QAAQ,wBAAwB;AAC1D,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,QAAQ,iBAAiB;AAE/C,MAAMC,OAAO,GAAG,CACd;EACEC,KAAK,EAAE,QAAQ;EACfC,KAAK,EAAE;AACT,CAAC,EACD;EACED,KAAK,EAAE,QAAQ;EACfC,KAAK,EAAE;AACT,CAAC,EACD;EACED,KAAK,EAAE,QAAQ;EACfC,KAAK,EAAE;AACT,CAAC,CACF;AAEDC,QAAQ,CAAC,qBAAqB,EAAE,MAAM;EACpCC,EAAE,CAAC,qDAAqD,EAAE,MAAM;IAC9DT,eAAe,CACb,oBAAC,aAAa;MAAC,KAAK,EAAE,QAAS;MAAC,OAAO,EAAEK,OAAQ;MAAC,QAAQ,EAAEK,IAAI,CAACC,EAAE;IAAG,EAAG,CAC1E;IAEDC,MAAM,CAACV,MAAM,CAACW,SAAS,CAAC,QAAQ,CAAC,CAAC,CAACC,eAAe,CAAC,cAAc,EAAE,MAAM,CAAC;IAC1EF,MAAM,CAACV,MAAM,CAACW,SAAS,CAAC,QAAQ,CAAC,CAAC,CAACC,eAAe,CAAC,cAAc,EAAE,OAAO,CAAC;IAC3EF,MAAM,CAACV,MAAM,CAACW,SAAS,CAAC,QAAQ,CAAC,CAAC,CAACC,eAAe,CAAC,cAAc,EAAE,OAAO,CAAC;EAC7E,CAAC,CAAC;EAEFL,EAAE,CAAC,sCAAsC,EAAE,MAAM;IAC/C,MAAMM,IAAI,GAAGL,IAAI,CAACC,EAAE,EAAE;IACtBX,eAAe,CACb,oBAAC,aAAa;MAAC,KAAK,EAAE,EAAG;MAAC,OAAO,EAAEK,OAAQ;MAAC,QAAQ,EAAEU;IAAK,EAAG,CAC/D;IAEDd,SAAS,CAACe,KAAK,CAACd,MAAM,CAACW,SAAS,CAAC,QAAQ,CAAC,CAAC;IAC3CD,MAAM,CAACG,IAAI,CAAC,CAACE,oBAAoB,CAAC,QAAQ,CAAC;EAC7C,CAAC,CAAC;EAEFR,EAAE,CAAC,uDAAuD,EAAE,MAAM;IAChE,MAAMM,IAAI,GAAGL,IAAI,CAACC,EAAE,EAAE;IACtBX,eAAe,CACb,oBAAC,aAAa;MAAC,KAAK,EAAE,QAAS;MAAC,OAAO,EAAEK,OAAQ;MAAC,QAAQ,EAAEU;IAAK,EAAG,CACrE;IAEDd,SAAS,CAACe,KAAK,CAACd,MAAM,CAACW,SAAS,CAAC,QAAQ,CAAC,CAAC;IAC3CD,MAAM,CAACG,IAAI,CAAC,CAACE,oBAAoB,CAAC,QAAQ,CAAC;EAC7C,CAAC,CAAC;EAEFR,EAAE,CAAC,uBAAuB,EAAE,MAAM;IAChCT,eAAe,CACb,oBAAC,aAAa;MACZ,SAAS;MACT,KAAK,EAAE,QAAS;MAChB,OAAO,EAAEK,OAAQ;MACjB,QAAQ,EAAEK,IAAI,CAACC,EAAE;IAAG,EACpB,CACH;IACDC,MAAM,CAACV,MAAM,CAACgB,SAAS,CAAC,aAAa,CAAC,CAAC,CAACC,iBAAiB,EAAE;EAC7D,CAAC,CAAC;AACJ,CAAC,CAAC"}