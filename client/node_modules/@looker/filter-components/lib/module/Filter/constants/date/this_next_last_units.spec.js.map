{"version":3,"file":"this_next_last_units.spec.js","names":["React","renderHook","ComponentsProvider","useFiscalThisNextUnits","useFiscalLastUnits","useThisNextUnits","useLastUnits","testSingular","option","expect","label","toBe","singular","describe","hooksToTest","wrapper","children","Object","keys","forEach","key","it","result","current","toMatchSnapshot","notContains","thisNextUnits","fiscalThisNextUnits","not","toContain"],"sources":["../../../../../src/Filter/constants/date/this_next_last_units.spec.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport React from 'react'\nimport { renderHook } from '@testing-library/react-hooks'\nimport { ComponentsProvider } from '@looker/components'\nimport type { Option } from '../../types/option'\nimport {\n  useFiscalThisNextUnits,\n  useFiscalLastUnits,\n  useThisNextUnits,\n  useLastUnits,\n} from './this_next_last_units'\n\nconst testSingular = (option: Option) =>\n  expect(option.label).toBe(option.singular)\n\ndescribe('date unit options for ThisNextLast component', () => {\n  const hooksToTest: { [key: string]: () => Option[] } = {\n    useLastUnits,\n    useThisNextUnits,\n    useFiscalThisNextUnits,\n    useFiscalLastUnits,\n  }\n  const wrapper = ({ children }: { children: React.ReactElement }) => (\n    <ComponentsProvider>{children}</ComponentsProvider>\n  )\n\n  Object.keys(hooksToTest).forEach((key: string) => {\n    it(`${key} matches expected values`, () => {\n      const {\n        result: { current },\n      } = renderHook<undefined, Option[]>(hooksToTest[key], {\n        wrapper,\n      })\n      expect(current).toMatchSnapshot()\n      current.forEach(testSingular)\n    })\n  })\n\n  it('this and next component options should not contain day, hour, minute, second', () => {\n    const notContains = ['day', 'hour', 'minute', 'second']\n\n    const {\n      result: { current: thisNextUnits },\n    } = renderHook<undefined, Option[]>(useThisNextUnits, { wrapper })\n    const {\n      result: { current: fiscalThisNextUnits },\n    } = renderHook<undefined, Option[]>(useFiscalThisNextUnits, { wrapper })\n\n    expect(thisNextUnits).not.toContain(notContains)\n    expect(fiscalThisNextUnits).not.toContain(notContains)\n  })\n})\n"],"mappings":";;AAKA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,8BAA8B;AACzD,SAASC,kBAAkB,QAAQ,oBAAoB;AAEvD,SACEC,sBAAsB,EACtBC,kBAAkB,EAClBC,gBAAgB,EAChBC,YAAY,QACP,wBAAwB;AAE/B,MAAMC,YAAY,GAAIC,MAAc,IAClCC,MAAM,CAACD,MAAM,CAACE,KAAK,CAAC,CAACC,IAAI,CAACH,MAAM,CAACI,QAAQ,CAAC;AAE5CC,QAAQ,CAAC,8CAA8C,EAAE,MAAM;EAC7D,MAAMC,WAA8C,GAAG;IACrDR,YAAY;IACZD,gBAAgB;IAChBF,sBAAsB;IACtBC;EACF,CAAC;EACD,MAAMW,OAAO,GAAG,CAAC;IAAEC;EAA2C,CAAC,KAC7D,oBAAC,kBAAkB,QAAEA,QAAQ,CAC9B;EAEDC,MAAM,CAACC,IAAI,CAACJ,WAAW,CAAC,CAACK,OAAO,CAAEC,GAAW,IAAK;IAChDC,EAAE,CAAE,GAAED,GAAI,0BAAyB,EAAE,MAAM;MACzC,MAAM;QACJE,MAAM,EAAE;UAAEC;QAAQ;MACpB,CAAC,GAAGtB,UAAU,CAAsBa,WAAW,CAACM,GAAG,CAAC,EAAE;QACpDL;MACF,CAAC,CAAC;MACFN,MAAM,CAACc,OAAO,CAAC,CAACC,eAAe,EAAE;MACjCD,OAAO,CAACJ,OAAO,CAACZ,YAAY,CAAC;IAC/B,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFc,EAAE,CAAC,8EAA8E,EAAE,MAAM;IACvF,MAAMI,WAAW,GAAG,CAAC,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,CAAC;IAEvD,MAAM;MACJH,MAAM,EAAE;QAAEC,OAAO,EAAEG;MAAc;IACnC,CAAC,GAAGzB,UAAU,CAAsBI,gBAAgB,EAAE;MAAEU;IAAQ,CAAC,CAAC;IAClE,MAAM;MACJO,MAAM,EAAE;QAAEC,OAAO,EAAEI;MAAoB;IACzC,CAAC,GAAG1B,UAAU,CAAsBE,sBAAsB,EAAE;MAAEY;IAAQ,CAAC,CAAC;IAExEN,MAAM,CAACiB,aAAa,CAAC,CAACE,GAAG,CAACC,SAAS,CAACJ,WAAW,CAAC;IAChDhB,MAAM,CAACkB,mBAAmB,CAAC,CAACC,GAAG,CAACC,SAAS,CAACJ,WAAW,CAAC;EACxD,CAAC,CAAC;AACJ,CAAC,CAAC"}