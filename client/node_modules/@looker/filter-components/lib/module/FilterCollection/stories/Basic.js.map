{"version":3,"file":"Basic.js","names":["React","FilterCollection","DashboardFilter","Suggestions","dashboardFilters","dimension","field","suggestable","suggest_dimension","suggest_explore","model","name","title","type","ui_config","listens_to_filters","states","citiesAlaska","citiesHawaii","sdkMock","ok","value","get","uri","params","suggestions","includes","filters","map","filter"],"sources":["../../../../src/FilterCollection/stories/Basic.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport React from 'react'\nimport type { IAPIMethods } from '@looker/sdk-rtl'\nimport { FilterCollection } from '../FilterCollection'\nimport { DashboardFilter } from '../../DashboardFilter'\n\nexport default function Suggestions() {\n  // From dashboard API\n  const dashboardFilters = [\n    {\n      dimension: 'users.state',\n      field: {\n        suggestable: true,\n        suggest_dimension: 'users.state',\n        suggest_explore: 'users',\n      },\n      model: 'testmodel',\n      name: 'State',\n      title: 'State',\n      type: 'field_filter',\n      ui_config: { type: 'radio_buttons' },\n    },\n    {\n      dimension: 'users.city',\n      field: {\n        suggestable: true,\n        suggest_dimension: 'users.city',\n        suggest_explore: 'users',\n      },\n      model: 'testmodel',\n      name: 'City',\n      title: 'City',\n      type: 'field_filter',\n      ui_config: { type: 'radio_buttons' },\n      listens_to_filters: ['State'],\n    },\n  ]\n\n  const states = ['Alaska', 'Hawaii']\n  const citiesAlaska = ['Anchorage', 'Juneau']\n  const citiesHawaii = ['Honolulu', 'Kona']\n  // Mock SDK instance for fetching suggested values\n  const sdkMock = {\n    ok: (value: any) => value,\n    get: (uri: string, params: { [key: string]: any }) => {\n      let suggestions: string[] = []\n      if (uri.includes('users.state')) {\n        suggestions = states\n      } else {\n        if (params.filters?.['users.state'] === 'Alaska') {\n          suggestions = citiesAlaska\n        } else if (params.filters?.['users.state'] === 'Hawaii') {\n          suggestions = citiesHawaii\n        } else {\n          suggestions = [...citiesAlaska, ...citiesHawaii]\n        }\n      }\n      return {\n        suggestions,\n      }\n    },\n  } as unknown as IAPIMethods\n\n  return (\n    <FilterCollection sdk={sdkMock}>\n      {dashboardFilters.map(filter => (\n        <DashboardFilter\n          filter={filter}\n          key={filter.name}\n          onChange={() => {\n            // update filter state for your application\n          }}\n        />\n      ))}\n    </FilterCollection>\n  )\n}\n"],"mappings":";;AAKA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,gBAAgB,QAAQ,qBAAqB;AACtD,SAASC,eAAe,QAAQ,uBAAuB;AAEvD,eAAe,SAASC,WAAW,GAAG;EAEpC,MAAMC,gBAAgB,GAAG,CACvB;IACEC,SAAS,EAAE,aAAa;IACxBC,KAAK,EAAE;MACLC,WAAW,EAAE,IAAI;MACjBC,iBAAiB,EAAE,aAAa;MAChCC,eAAe,EAAE;IACnB,CAAC;IACDC,KAAK,EAAE,WAAW;IAClBC,IAAI,EAAE,OAAO;IACbC,KAAK,EAAE,OAAO;IACdC,IAAI,EAAE,cAAc;IACpBC,SAAS,EAAE;MAAED,IAAI,EAAE;IAAgB;EACrC,CAAC,EACD;IACER,SAAS,EAAE,YAAY;IACvBC,KAAK,EAAE;MACLC,WAAW,EAAE,IAAI;MACjBC,iBAAiB,EAAE,YAAY;MAC/BC,eAAe,EAAE;IACnB,CAAC;IACDC,KAAK,EAAE,WAAW;IAClBC,IAAI,EAAE,MAAM;IACZC,KAAK,EAAE,MAAM;IACbC,IAAI,EAAE,cAAc;IACpBC,SAAS,EAAE;MAAED,IAAI,EAAE;IAAgB,CAAC;IACpCE,kBAAkB,EAAE,CAAC,OAAO;EAC9B,CAAC,CACF;EAED,MAAMC,MAAM,GAAG,CAAC,QAAQ,EAAE,QAAQ,CAAC;EACnC,MAAMC,YAAY,GAAG,CAAC,WAAW,EAAE,QAAQ,CAAC;EAC5C,MAAMC,YAAY,GAAG,CAAC,UAAU,EAAE,MAAM,CAAC;EAEzC,MAAMC,OAAO,GAAG;IACdC,EAAE,EAAGC,KAAU,IAAKA,KAAK;IACzBC,GAAG,EAAE,CAACC,GAAW,EAAEC,MAA8B,KAAK;MACpD,IAAIC,WAAqB,GAAG,EAAE;MAC9B,IAAIF,GAAG,CAACG,QAAQ,CAAC,aAAa,CAAC,EAAE;QAC/BD,WAAW,GAAGT,MAAM;MACtB,CAAC,MAAM;QAAA;QACL,IAAI,oBAAAQ,MAAM,CAACG,OAAO,oDAAd,gBAAiB,aAAa,CAAC,MAAK,QAAQ,EAAE;UAChDF,WAAW,GAAGR,YAAY;QAC5B,CAAC,MAAM,IAAI,qBAAAO,MAAM,CAACG,OAAO,qDAAd,iBAAiB,aAAa,CAAC,MAAK,QAAQ,EAAE;UACvDF,WAAW,GAAGP,YAAY;QAC5B,CAAC,MAAM;UACLO,WAAW,GAAG,CAAC,GAAGR,YAAY,EAAE,GAAGC,YAAY,CAAC;QAClD;MACF;MACA,OAAO;QACLO;MACF,CAAC;IACH;EACF,CAA2B;EAE3B,OACE,oBAAC,gBAAgB;IAAC,GAAG,EAAEN;EAAQ,GAC5Bf,gBAAgB,CAACwB,GAAG,CAACC,MAAM,IAC1B,oBAAC,eAAe;IACd,MAAM,EAAEA,MAAO;IACf,GAAG,EAAEA,MAAM,CAAClB,IAAK;IACjB,QAAQ,EAAE,MAAM;IAEhB;EAAE,EAEL,CAAC,CACe;AAEvB"}