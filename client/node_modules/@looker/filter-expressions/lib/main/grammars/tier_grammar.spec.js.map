{"version":3,"file":"tier_grammar.spec.js","names":["filterType","testStringItem","testItem","test","expression","type","describe","output","field","ast","parseFilterExpression","description","summary","expect","toMatchSnapshot","list","treeToList","item","itemType","convertTypeToOption","toEqual","toBe","stringOutput","tierFilterToString","beforeEach","i18nInit","tierGrammarTestItems","forEach"],"sources":["../../../src/grammars/tier_grammar.spec.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport type { GrammarTestItem } from '.'\nimport {\n  convertTypeToOption,\n  parseFilterExpression,\n  summary,\n  treeToList,\n} from '../utils'\nimport { i18nInit } from '../utils/i18n'\nimport { tierFilterToString } from '../utils/tier/tier_filter_to_string'\nimport { tierGrammarTestItems } from './tier_grammar_test_expressions'\n\nconst filterType = 'tier'\nconst testStringItem = (testItem: GrammarTestItem) => {\n  test(`${testItem.expression}`, () => {\n    const { expression, type, describe, output, field } = testItem\n    const ast = parseFilterExpression(filterType, expression)\n    const description = summary({ type: filterType, expression, field })\n    expect(ast).toMatchSnapshot()\n    const list = treeToList(ast)\n    const item = list[0]\n\n    const itemType =\n      type === 'matchesAdvanced' ? item.type : convertTypeToOption(item)\n    expect(itemType).toEqual(type)\n\n    // test descriptions\n    expect(description).toBe(describe)\n\n    // test output\n    const stringOutput =\n      type === 'matchesAdvanced'\n        ? expression\n        : tierFilterToString(ast, filterType, field)\n    expect(stringOutput).toBe(output)\n  })\n}\n\ndescribe('Tier grammar can parse', () => {\n  beforeEach(() => i18nInit())\n  tierGrammarTestItems.forEach(testStringItem)\n})\n"],"mappings":";;AAKA;AAMA;AACA;AACA;;AAEA,IAAMA,UAAU,GAAG,MAAM;AACzB,IAAMC,cAAc,GAAG,SAAjBA,cAAc,CAAIC,QAAyB,EAAK;EACpDC,IAAI,WAAID,QAAQ,CAACE,UAAU,GAAI,YAAM;IACnC,IAAQA,UAAU,GAAoCF,QAAQ,CAAtDE,UAAU;MAAEC,IAAI,GAA8BH,QAAQ,CAA1CG,IAAI;MAAEC,QAAQ,GAAoBJ,QAAQ,CAApCI,QAAQ;MAAEC,MAAM,GAAYL,QAAQ,CAA1BK,MAAM;MAAEC,KAAK,GAAKN,QAAQ,CAAlBM,KAAK;IACjD,IAAMC,GAAG,GAAG,IAAAC,4BAAqB,EAACV,UAAU,EAAEI,UAAU,CAAC;IACzD,IAAMO,WAAW,GAAG,IAAAC,cAAO,EAAC;MAAEP,IAAI,EAAEL,UAAU;MAAEI,UAAU,EAAVA,UAAU;MAAEI,KAAK,EAALA;IAAM,CAAC,CAAC;IACpEK,MAAM,CAACJ,GAAG,CAAC,CAACK,eAAe,EAAE;IAC7B,IAAMC,IAAI,GAAG,IAAAC,iBAAU,EAACP,GAAG,CAAC;IAC5B,IAAMQ,IAAI,GAAGF,IAAI,CAAC,CAAC,CAAC;IAEpB,IAAMG,QAAQ,GACZb,IAAI,KAAK,iBAAiB,GAAGY,IAAI,CAACZ,IAAI,GAAG,IAAAc,0BAAmB,EAACF,IAAI,CAAC;IACpEJ,MAAM,CAACK,QAAQ,CAAC,CAACE,OAAO,CAACf,IAAI,CAAC;;IAG9BQ,MAAM,CAACF,WAAW,CAAC,CAACU,IAAI,CAACf,QAAQ,CAAC;;IAGlC,IAAMgB,YAAY,GAChBjB,IAAI,KAAK,iBAAiB,GACtBD,UAAU,GACV,IAAAmB,yCAAkB,EAACd,GAAG,EAAET,UAAU,EAAEQ,KAAK,CAAC;IAChDK,MAAM,CAACS,YAAY,CAAC,CAACD,IAAI,CAACd,MAAM,CAAC;EACnC,CAAC,CAAC;AACJ,CAAC;AAEDD,QAAQ,CAAC,wBAAwB,EAAE,YAAM;EACvCkB,UAAU,CAAC;IAAA,OAAM,IAAAC,cAAQ,GAAE;EAAA,EAAC;EAC5BC,mDAAoB,CAACC,OAAO,CAAC1B,cAAc,CAAC;AAC9C,CAAC,CAAC"}