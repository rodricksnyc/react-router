{"version":3,"file":"get_unit_label.js","names":["getPlural","unit","t","i18next","bind","pluralUnits","ns","year","quarter","month","week","day","hour","minute","second","getSingular","getUnitLabel","value"],"sources":["../../../../src/utils/date/get_unit_label.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport i18next from 'i18next'\n\nconst getPlural = (unit: string) => {\n  const t = i18next.t.bind(i18next)\n  // prettier-ignore\n  const pluralUnits: { [key: string]: string } = {\n    'fiscal year'            : t('fiscal years'            , { ns: 'get_unit_label' }),\n    year                     : t('years'                   , { ns: 'get_unit_label' }),\n    'fiscal quarter'         : t('fiscal quarters'         , { ns: 'get_unit_label' }),\n    quarter                  : t('quarters'                , { ns: 'get_unit_label' }),\n    month                    : t('months'                  , { ns: 'get_unit_label' }),\n    week                     : t('weeks'                   , { ns: 'get_unit_label' }),\n    day                      : t('days'                    , { ns: 'get_unit_label' }),\n    hour                     : t('hours'                   , { ns: 'get_unit_label' }),\n    minute                   : t('minutes'                 , { ns: 'get_unit_label' }),\n    second                   : t('seconds'                 , { ns: 'get_unit_label' }),\n    'complete fiscal year'   : t('complete fiscal years'   , { ns: 'get_unit_label' }),\n    'complete year'          : t('complete years'          , { ns: 'get_unit_label' }),\n    'complete fiscal quarter': t('complete fiscal quarters', { ns: 'get_unit_label' }),\n    'complete quarter'       : t('complete quarters'       , { ns: 'get_unit_label' }),\n    'complete month'         : t('complete months'         , { ns: 'get_unit_label' }),\n    'complete week'          : t('complete weeks'          , { ns: 'get_unit_label' }),\n    'complete day'           : t('complete days'           , { ns: 'get_unit_label' }),\n    'complete hour'          : t('complete hours'          , { ns: 'get_unit_label' }),\n    'complete minute'        : t('complete minutes'        , { ns: 'get_unit_label' }),\n    'complete second'        : t('complete seconds'        , { ns: 'get_unit_label' }),\n  }\n  return pluralUnits[unit] || unit\n}\n\nconst getSingular = (unit: string) => {\n  const t = i18next.t.bind(i18next)\n  // prettier-ignore\n  const pluralUnits: { [key: string]: string } = {\n    'fiscal year'            : t('fiscal year'            , { ns: 'get_unit_label' }),\n    year                     : t('year'                   , { ns: 'get_unit_label' }),\n    'fiscal quarter'         : t('fiscal quarter'         , { ns: 'get_unit_label' }),\n    quarter                  : t('quarter'                , { ns: 'get_unit_label' }),\n    month                    : t('month'                  , { ns: 'get_unit_label' }),\n    week                     : t('week'                   , { ns: 'get_unit_label' }),\n    day                      : t('day'                    , { ns: 'get_unit_label' }),\n    hour                     : t('hour'                   , { ns: 'get_unit_label' }),\n    minute                   : t('minute'                 , { ns: 'get_unit_label' }),\n    second                   : t('second'                 , { ns: 'get_unit_label' }),\n    'complete fiscal year'   : t('complete fiscal year'   , { ns: 'get_unit_label' }),\n    'complete year'          : t('complete year'          , { ns: 'get_unit_label' }),\n    'complete fiscal quarter': t('complete fiscal quarter', { ns: 'get_unit_label' }),\n    'complete quarter'       : t('complete quarter'       , { ns: 'get_unit_label' }),\n    'complete month'         : t('complete month'         , { ns: 'get_unit_label' }),\n    'complete week'          : t('complete week'          , { ns: 'get_unit_label' }),\n    'complete day'           : t('complete day'           , { ns: 'get_unit_label' }),\n    'complete hour'          : t('complete hour'          , { ns: 'get_unit_label' }),\n    'complete minute'        : t('complete minute'        , { ns: 'get_unit_label' }),\n    'complete second'        : t('complete second'        , { ns: 'get_unit_label' }),\n  }\n  return pluralUnits[unit] || unit\n}\n\nexport const getUnitLabel = (unit: string, value = 1) =>\n  value !== 1 ? getPlural(unit) : getSingular(unit)\n"],"mappings":"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"}