{"version":3,"file":"get_matches_advanced_node.spec.js","names":["describe","it","testExpression","ast","parseFilterExpression","getMatchesAdvancedNode","id","type","expression","expect","toBe"],"sources":["../../../src/utils/get_matches_advanced_node.spec.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport { parseFilterExpression } from './parse_filter_expression'\nimport { getMatchesAdvancedNode } from './get_matches_advanced_node'\n\ndescribe('getsMatchesAdvancedNode', () => {\n  it('returns a matches advanced node from an ast', () => {\n    const testExpression = '1'\n    const ast = parseFilterExpression('string', testExpression)\n    const { id, type, expression } = getMatchesAdvancedNode(testExpression, ast)\n    expect(expression).toBe(testExpression)\n    expect(id).toBe(ast.id)\n    expect(type).toBe('matchesAdvanced')\n  })\n\n  it('returns a matches advanced node from an expression', () => {\n    const testExpression = '1'\n    const { id, type, expression } = getMatchesAdvancedNode(testExpression)\n    expect(expression).toBe(testExpression)\n    expect(id).toBe(1)\n    expect(type).toBe('matchesAdvanced')\n  })\n})\n"],"mappings":";;AAIA;AACA;;AAEAA,QAAQ,CAAC,yBAAyB,EAAE,YAAM;EACxCC,EAAE,CAAC,6CAA6C,EAAE,YAAM;IACtD,IAAMC,cAAc,GAAG,GAAG;IAC1B,IAAMC,GAAG,GAAG,IAAAC,8CAAqB,EAAC,QAAQ,EAAEF,cAAc,CAAC;IAC3D,4BAAiC,IAAAG,iDAAsB,EAACH,cAAc,EAAEC,GAAG,CAAC;MAApEG,EAAE,yBAAFA,EAAE;MAAEC,IAAI,yBAAJA,IAAI;MAAEC,UAAU,yBAAVA,UAAU;IAC5BC,MAAM,CAACD,UAAU,CAAC,CAACE,IAAI,CAACR,cAAc,CAAC;IACvCO,MAAM,CAACH,EAAE,CAAC,CAACI,IAAI,CAACP,GAAG,CAACG,EAAE,CAAC;IACvBG,MAAM,CAACF,IAAI,CAAC,CAACG,IAAI,CAAC,iBAAiB,CAAC;EACtC,CAAC,CAAC;EAEFT,EAAE,CAAC,oDAAoD,EAAE,YAAM;IAC7D,IAAMC,cAAc,GAAG,GAAG;IAC1B,6BAAiC,IAAAG,iDAAsB,EAACH,cAAc,CAAC;MAA/DI,EAAE,0BAAFA,EAAE;MAAEC,IAAI,0BAAJA,IAAI;MAAEC,UAAU,0BAAVA,UAAU;IAC5BC,MAAM,CAACD,UAAU,CAAC,CAACE,IAAI,CAACR,cAAc,CAAC;IACvCO,MAAM,CAACH,EAAE,CAAC,CAACI,IAAI,CAAC,CAAC,CAAC;IAClBD,MAAM,CAACF,IAAI,CAAC,CAACG,IAAI,CAAC,iBAAiB,CAAC;EACtC,CAAC,CAAC;AACJ,CAAC,CAAC"}