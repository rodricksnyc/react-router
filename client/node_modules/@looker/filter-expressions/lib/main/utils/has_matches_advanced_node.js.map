{"version":3,"file":"has_matches_advanced_node.js","names":["isMatchesAdvancedItem","subTypes","type","indexOf","hasMatchesAdvancedNode","flow","treeToList","any"],"sources":["../../../src/utils/has_matches_advanced_node.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport any from 'lodash/fp/any'\nimport flow from 'lodash/fp/flow'\nimport type { FilterModel } from '../types'\nimport { treeToList } from './tree'\n\nconst isMatchesAdvancedItem =\n  (subTypes: readonly string[]) =>\n  ({ type }: FilterModel) =>\n    type === 'matchesAdvanced' || subTypes.indexOf(type) === -1\n\n/**\n * checks if the ast has:\n * - any node that displays as MatchesAdvanced\n * - any node of type 'matchesAdvanced'\n */\nexport const hasMatchesAdvancedNode = (subTypes: readonly string[]) =>\n  flow([treeToList, any(isMatchesAdvancedItem(subTypes))])\n"],"mappings":";;;;;;;AAIA;AACA;AAEA;;AAEA,IAAMA,qBAAqB,GACzB,SADIA,qBAAqB,CACxBC,QAA2B;EAAA,OAC5B;IAAA,IAAGC,IAAI,QAAJA,IAAI;IAAA,OACLA,IAAI,KAAK,iBAAiB,IAAID,QAAQ,CAACE,OAAO,CAACD,IAAI,CAAC,KAAK,CAAC,CAAC;EAAA;AAAA;;AAOxD,IAAME,sBAAsB,GAAG,SAAzBA,sBAAsB,CAAIH,QAA2B;EAAA,OAChE,IAAAI,gBAAI,EAAC,CAACC,gBAAU,EAAE,IAAAC,eAAG,EAACP,qBAAqB,CAACC,QAAQ,CAAC,CAAC,CAAC,CAAC;AAAA;AAAA"}