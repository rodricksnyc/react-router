{"version":3,"file":"has_user_attribute_node_without_value.spec.js","names":["describe","getUserAttribute","overrideProps","name","value","type","TYPE_USER_ATTRIBUTE","it","testExpression","ast","parseFilterExpression","expect","hasUserAttributeNodeWithoutValue","toBe","userAttribute"],"sources":["../../../src/utils/has_user_attribute_node_without_value.spec.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport type { UserAttributeWithValue } from '../types'\nimport { TYPE_USER_ATTRIBUTE } from '../types'\nimport { hasUserAttributeNodeWithoutValue } from './has_user_attribute_node_without_value'\nimport { parseFilterExpression } from './parse_filter_expression'\n\ndescribe('hasUserAttributeNodeWithoutValue', () => {\n  const getUserAttribute = (\n    overrideProps?: Partial<UserAttributeWithValue>\n  ) => ({\n    name: 'xyz',\n    value: 'some-value',\n    type: TYPE_USER_ATTRIBUTE,\n    ...overrideProps,\n  })\n\n  describe('when there are no user attributes', () => {\n    it('should return false', () => {\n      const testExpression = '1'\n      const ast = parseFilterExpression('string', testExpression)\n\n      expect(hasUserAttributeNodeWithoutValue(ast)).toBe(false)\n    })\n  })\n\n  describe('when another user attribute exists with a value', () => {\n    it('should return true', () => {\n      const testExpression = \"{{ _user_attributes['abc'] }}\"\n      const userAttribute = getUserAttribute()\n\n      const ast = parseFilterExpression('string', testExpression, [\n        userAttribute,\n      ])\n      expect(hasUserAttributeNodeWithoutValue(ast)).toBe(true)\n    })\n  })\n\n  describe('when the user attribute exists but has an empty string value', () => {\n    it('should return true', () => {\n      const testExpression = \"{{ _user_attributes['xyz'] }}\"\n      const userAttribute = getUserAttribute({ value: '' })\n\n      const ast = parseFilterExpression('string', testExpression, [\n        userAttribute,\n      ])\n      expect(hasUserAttributeNodeWithoutValue(ast)).toBe(true)\n    })\n  })\n\n  describe('when the user attribute exists but has no value', () => {\n    it('should return true', () => {\n      const testExpression = \"{{ _user_attributes['xyz'] }}\"\n      const userAttribute = getUserAttribute({ value: null })\n\n      const ast = parseFilterExpression('string', testExpression, [\n        userAttribute,\n      ])\n      expect(hasUserAttributeNodeWithoutValue(ast)).toBe(true)\n    })\n  })\n\n  describe('when the user attribute exists and has a value', () => {\n    it('should return false', () => {\n      const testExpression = \"{{ _user_attributes['xyz'] }}\"\n      const userAttribute = getUserAttribute()\n\n      const ast = parseFilterExpression('string', testExpression, [\n        userAttribute,\n      ])\n      expect(hasUserAttributeNodeWithoutValue(ast)).toBe(false)\n    })\n  })\n})\n"],"mappings":";;;;AAKA;AACA;AACA;AAAiE;AAAA;AAEjEA,QAAQ,CAAC,kCAAkC,EAAE,YAAM;EACjD,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgB,CACpBC,aAA+C;IAAA;MAE/CC,IAAI,EAAE,KAAK;MACXC,KAAK,EAAE,YAAY;MACnBC,IAAI,EAAEC;IAAmB,GACtBJ,aAAa;EAAA,CAChB;EAEFF,QAAQ,CAAC,mCAAmC,EAAE,YAAM;IAClDO,EAAE,CAAC,qBAAqB,EAAE,YAAM;MAC9B,IAAMC,cAAc,GAAG,GAAG;MAC1B,IAAMC,GAAG,GAAG,IAAAC,8CAAqB,EAAC,QAAQ,EAAEF,cAAc,CAAC;MAE3DG,MAAM,CAAC,IAAAC,uEAAgC,EAACH,GAAG,CAAC,CAAC,CAACI,IAAI,CAAC,KAAK,CAAC;IAC3D,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFb,QAAQ,CAAC,iDAAiD,EAAE,YAAM;IAChEO,EAAE,CAAC,oBAAoB,EAAE,YAAM;MAC7B,IAAMC,cAAc,GAAG,+BAA+B;MACtD,IAAMM,aAAa,GAAGb,gBAAgB,EAAE;MAExC,IAAMQ,GAAG,GAAG,IAAAC,8CAAqB,EAAC,QAAQ,EAAEF,cAAc,EAAE,CAC1DM,aAAa,CACd,CAAC;MACFH,MAAM,CAAC,IAAAC,uEAAgC,EAACH,GAAG,CAAC,CAAC,CAACI,IAAI,CAAC,IAAI,CAAC;IAC1D,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFb,QAAQ,CAAC,8DAA8D,EAAE,YAAM;IAC7EO,EAAE,CAAC,oBAAoB,EAAE,YAAM;MAC7B,IAAMC,cAAc,GAAG,+BAA+B;MACtD,IAAMM,aAAa,GAAGb,gBAAgB,CAAC;QAAEG,KAAK,EAAE;MAAG,CAAC,CAAC;MAErD,IAAMK,GAAG,GAAG,IAAAC,8CAAqB,EAAC,QAAQ,EAAEF,cAAc,EAAE,CAC1DM,aAAa,CACd,CAAC;MACFH,MAAM,CAAC,IAAAC,uEAAgC,EAACH,GAAG,CAAC,CAAC,CAACI,IAAI,CAAC,IAAI,CAAC;IAC1D,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFb,QAAQ,CAAC,iDAAiD,EAAE,YAAM;IAChEO,EAAE,CAAC,oBAAoB,EAAE,YAAM;MAC7B,IAAMC,cAAc,GAAG,+BAA+B;MACtD,IAAMM,aAAa,GAAGb,gBAAgB,CAAC;QAAEG,KAAK,EAAE;MAAK,CAAC,CAAC;MAEvD,IAAMK,GAAG,GAAG,IAAAC,8CAAqB,EAAC,QAAQ,EAAEF,cAAc,EAAE,CAC1DM,aAAa,CACd,CAAC;MACFH,MAAM,CAAC,IAAAC,uEAAgC,EAACH,GAAG,CAAC,CAAC,CAACI,IAAI,CAAC,IAAI,CAAC;IAC1D,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFb,QAAQ,CAAC,gDAAgD,EAAE,YAAM;IAC/DO,EAAE,CAAC,qBAAqB,EAAE,YAAM;MAC9B,IAAMC,cAAc,GAAG,+BAA+B;MACtD,IAAMM,aAAa,GAAGb,gBAAgB,EAAE;MAExC,IAAMQ,GAAG,GAAG,IAAAC,8CAAqB,EAAC,QAAQ,EAAEF,cAAc,EAAE,CAC1DM,aAAa,CACd,CAAC;MACFH,MAAM,CAAC,IAAAC,uEAAgC,EAACH,GAAG,CAAC,CAAC,CAACI,IAAI,CAAC,KAAK,CAAC;IAC3D,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC"}