{"version":3,"file":"describe_number.spec.js","names":["describe","beforeEach","i18nInit","numberExpressionTestItems","forEach","testItem","expression","it","description","summary","type","expect","toBe","item","id","is","describeNumber"],"sources":["../../../../src/utils/number/describe_number.spec.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport type { GrammarTestItem } from '../../grammars'\nimport { numberExpressionTestItems } from '../../grammars'\nimport { summary } from '../summary/summary'\nimport { i18nInit } from '../i18n'\nimport type { FilterModel } from '../../types'\nimport { describeNumber } from './describe_number'\n\ndescribe('Summary', () => {\n  beforeEach(() => i18nInit())\n\n  numberExpressionTestItems.forEach((testItem: GrammarTestItem) => {\n    const { expression, describe } = testItem\n\n    it('works for number expression ' + expression, () => {\n      const description = summary({ type: 'number', expression })\n      expect(description).toBe(describe)\n    })\n  })\n\n  it('is empty for an undefined value', () => {\n    const item: FilterModel = { id: '0', is: true, type: 'other' }\n    const description = describeNumber(item)\n    expect(description).toBe('')\n  })\n})\n"],"mappings":";;AAKA;AACA;AACA;AAEA;;AAEAA,QAAQ,CAAC,SAAS,EAAE,YAAM;EACxBC,UAAU,CAAC;IAAA,OAAM,IAAAC,cAAQ,GAAE;EAAA,EAAC;EAE5BC,mCAAyB,CAACC,OAAO,CAAC,UAACC,QAAyB,EAAK;IAC/D,IAAQC,UAAU,GAAeD,QAAQ,CAAjCC,UAAU;MAAEN,QAAQ,GAAKK,QAAQ,CAArBL,QAAQ;IAE5BO,EAAE,CAAC,8BAA8B,GAAGD,UAAU,EAAE,YAAM;MACpD,IAAME,WAAW,GAAG,IAAAC,gBAAO,EAAC;QAAEC,IAAI,EAAE,QAAQ;QAAEJ,UAAU,EAAVA;MAAW,CAAC,CAAC;MAC3DK,MAAM,CAACH,WAAW,CAAC,CAACI,IAAI,CAACZ,QAAQ,CAAC;IACpC,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFO,EAAE,CAAC,iCAAiC,EAAE,YAAM;IAC1C,IAAMM,IAAiB,GAAG;MAAEC,EAAE,EAAE,GAAG;MAAEC,EAAE,EAAE,IAAI;MAAEL,IAAI,EAAE;IAAQ,CAAC;IAC9D,IAAMF,WAAW,GAAG,IAAAQ,+BAAc,EAACH,IAAI,CAAC;IACxCF,MAAM,CAACH,WAAW,CAAC,CAACI,IAAI,CAAC,EAAE,CAAC;EAC9B,CAAC,CAAC;AACJ,CAAC,CAAC"}