{"version":3,"file":"get_number_from_string.spec.js","names":["test","num","getNumberFromString","expect","toBe","bigNum"],"sources":["../../../../src/utils/number/get_number_from_string.spec.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport { getNumberFromString } from './get_number_from_string'\n\ntest('it returns a regular number', () => {\n  const num = getNumberFromString('1234567890')\n  expect(typeof num).toBe('number')\n})\n\ntest('it returns a bigint for 16 characters or more', () => {\n  const bigNum = getNumberFromString('12345678901234567890')\n  expect(typeof bigNum).toBe('bigint')\n})\n\ntest('it returns a regular number if decimal is found', () => {\n  const num = getNumberFromString('1234567890.1234567890')\n  expect(typeof num).toBe('number')\n})\n"],"mappings":";;;;AAKA;;AAEAA,IAAI,CAAC,6BAA6B,EAAE,YAAM;EACxC,IAAMC,GAAG,GAAG,IAAAC,2CAAmB,EAAC,YAAY,CAAC;EAC7CC,MAAM,0BAAQF,GAAG,EAAC,CAACG,IAAI,CAAC,QAAQ,CAAC;AACnC,CAAC,CAAC;AAEFJ,IAAI,CAAC,+CAA+C,EAAE,YAAM;EAC1D,IAAMK,MAAM,GAAG,IAAAH,2CAAmB,EAAC,sBAAsB,CAAC;EAC1DC,MAAM,0BAAQE,MAAM,EAAC,CAACD,IAAI,CAAC,QAAQ,CAAC;AACtC,CAAC,CAAC;AAEFJ,IAAI,CAAC,iDAAiD,EAAE,YAAM;EAC5D,IAAMC,GAAG,GAAG,IAAAC,2CAAmB,EAAC,uBAAuB,CAAC;EACxDC,MAAM,0BAAQF,GAAG,EAAC,CAACG,IAAI,CAAC,QAAQ,CAAC;AACnC,CAAC,CAAC"}