{"version":3,"file":"sanitize_number.spec.js","names":["describe","expression","it","ast","parseFilterExpression","item","sanitizeNumber","type","expect","value","toMatchObject","id","is","expected","bounds","low","high"],"sources":["../../../../src/utils/number/sanitize_number.spec.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport { parseFilterExpression } from '../parse_filter_expression'\nimport type { FilterModel } from '../../types'\nimport { sanitizeNumber } from './sanitize_number'\n\ndescribe('Number To String', () => {\n  const expression = '1,2,3'\n\n  it('works when switching to > ' + expression, () => {\n    const ast = parseFilterExpression('number', expression)\n    const item = sanitizeNumber({ ...ast, type: '>' } as FilterModel)\n    expect(item.value).toMatchObject([1])\n  })\n\n  it('works when switching to null ' + expression, () => {\n    const ast = parseFilterExpression('number', expression)\n    const { id, is } = ast\n    const expected = { id, type: 'null', is }\n    const item = sanitizeNumber({ ...ast, type: 'null' } as FilterModel)\n    expect(item).toMatchObject(expected)\n  })\n\n  it('works when switching to between ' + expression, () => {\n    const ast = parseFilterExpression('number', expression)\n    const { id, is } = ast\n    const expected = { id, type: 'between', is, bounds: '[]', low: 1, high: 1 }\n    const item = sanitizeNumber({ ...ast, type: 'between' } as FilterModel)\n    expect(item).toMatchObject(expected)\n  })\n\n  it('works when switching to matchesAdvanced ' + expression, () => {\n    const ast = parseFilterExpression('number', expression)\n    const { id, is } = ast\n    const expected = { id, type: 'matchesAdvanced', is, value: [1, 2, 3] }\n    const item = sanitizeNumber({\n      ...ast,\n      type: 'matchesAdvanced',\n    } as FilterModel)\n    expect(item).toMatchObject(expected)\n  })\n\n  it('works when switching from between to = ' + expression, () => {\n    const ast = parseFilterExpression('number', '(1,100)')\n    const { id, is } = ast\n    const expected = { id, type: '=', is, value: [] }\n    const item = sanitizeNumber({ ...ast, type: '=' } as FilterModel)\n    expect(item).toMatchObject(expected)\n  })\n\n  it('works when switching from between types with value 0', () => {\n    const ast = parseFilterExpression('number', '>0')\n    const { id, is } = ast\n    const expected = { id, type: '<', is, value: [0] }\n    const item = sanitizeNumber({ ...ast, type: '<' } as FilterModel)\n    expect(item).toMatchObject(expected)\n  })\n})\n"],"mappings":"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"}