{"version":3,"file":"add_quotes.spec.js","names":["describe","it","expect","addQuotes","toBe"],"sources":["../../../../src/utils/string/add_quotes.spec.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport { addQuotes } from './add_quotes'\n\ndescribe('Add quotes', () => {\n  describe('when the string contains any special characters', () => {\n    it('returns the same string enclosed in quotation marks', () => {\n      expect(addQuotes('something,')).toBe('\"something,\"')\n      expect(addQuotes(\"something'\")).toBe('\"something\\'\"')\n      expect(addQuotes('something\"')).toBe('\"something\"\"')\n    })\n  })\n\n  describe('when the string starts with a `-`', () => {\n    it('returns the same string enclosed in quotation marks', () => {\n      expect(addQuotes('-something')).toBe('\"-something\"')\n    })\n  })\n\n  describe('when the string contains a `-`, but not at the start', () => {\n    it('returns the same string not enclosed in quotation marks', () => {\n      expect(addQuotes('some-thing')).toBe('some-thing')\n    })\n  })\n})\n"],"mappings":";;AAIA;;AAEAA,QAAQ,CAAC,YAAY,EAAE,YAAM;EAC3BA,QAAQ,CAAC,iDAAiD,EAAE,YAAM;IAChEC,EAAE,CAAC,qDAAqD,EAAE,YAAM;MAC9DC,MAAM,CAAC,IAAAC,qBAAS,EAAC,YAAY,CAAC,CAAC,CAACC,IAAI,CAAC,cAAc,CAAC;MACpDF,MAAM,CAAC,IAAAC,qBAAS,EAAC,YAAY,CAAC,CAAC,CAACC,IAAI,CAAC,eAAe,CAAC;MACrDF,MAAM,CAAC,IAAAC,qBAAS,EAAC,YAAY,CAAC,CAAC,CAACC,IAAI,CAAC,cAAc,CAAC;IACtD,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFJ,QAAQ,CAAC,mCAAmC,EAAE,YAAM;IAClDC,EAAE,CAAC,qDAAqD,EAAE,YAAM;MAC9DC,MAAM,CAAC,IAAAC,qBAAS,EAAC,YAAY,CAAC,CAAC,CAACC,IAAI,CAAC,cAAc,CAAC;IACtD,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFJ,QAAQ,CAAC,sDAAsD,EAAE,YAAM;IACrEC,EAAE,CAAC,yDAAyD,EAAE,YAAM;MAClEC,MAAM,CAAC,IAAAC,qBAAS,EAAC,YAAY,CAAC,CAAC,CAACC,IAAI,CAAC,YAAY,CAAC;IACpD,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC"}