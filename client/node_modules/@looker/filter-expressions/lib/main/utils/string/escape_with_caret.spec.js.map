{"version":3,"file":"escape_with_caret.spec.js","names":["describe","it","expect","escapeWithCaret","toBe"],"sources":["../../../../src/utils/string/escape_with_caret.spec.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport { escapeWithCaret } from './escape_with_caret'\n\ndescribe('Escape With Caret', () => {\n  describe('when the string contains any special characters', () => {\n    it('returns the same string with special characters escaped with a caret', () => {\n      expect(escapeWithCaret('something^')).toBe('something^^')\n      expect(escapeWithCaret('something_')).toBe('something^_')\n      expect(escapeWithCaret('something%')).toBe('something^%')\n      expect(escapeWithCaret('something,')).toBe('something^,')\n    })\n  })\n\n  describe('when the string does not contain any special characters', () => {\n    it('returns the same string', () => {\n      expect(escapeWithCaret('some-thing;.')).toBe('some-thing;.')\n    })\n  })\n})\n"],"mappings":";;AAIA;;AAEAA,QAAQ,CAAC,mBAAmB,EAAE,YAAM;EAClCA,QAAQ,CAAC,iDAAiD,EAAE,YAAM;IAChEC,EAAE,CAAC,sEAAsE,EAAE,YAAM;MAC/EC,MAAM,CAAC,IAAAC,kCAAe,EAAC,YAAY,CAAC,CAAC,CAACC,IAAI,CAAC,aAAa,CAAC;MACzDF,MAAM,CAAC,IAAAC,kCAAe,EAAC,YAAY,CAAC,CAAC,CAACC,IAAI,CAAC,aAAa,CAAC;MACzDF,MAAM,CAAC,IAAAC,kCAAe,EAAC,YAAY,CAAC,CAAC,CAACC,IAAI,CAAC,aAAa,CAAC;MACzDF,MAAM,CAAC,IAAAC,kCAAe,EAAC,YAAY,CAAC,CAAC,CAACC,IAAI,CAAC,aAAa,CAAC;IAC3D,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFJ,QAAQ,CAAC,yDAAyD,EAAE,YAAM;IACxEC,EAAE,CAAC,yBAAyB,EAAE,YAAM;MAClCC,MAAM,CAAC,IAAAC,kCAAe,EAAC,cAAc,CAAC,CAAC,CAACC,IAAI,CAAC,cAAc,CAAC;IAC9D,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC"}