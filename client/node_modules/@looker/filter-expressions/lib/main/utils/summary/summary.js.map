{"version":3,"file":"summary.js","names":["t","i18next","bind","treeToSummary","root","describe","filterType","field","orItems","andItems","inorderTraversal","node","item","type","is","push","resultOr","join","resultAnd","result","summary","props","expression","userAttributes","required","ns","typeToGrammar","subTypes","ast","parseFilterExpression","hasUserAttributeNodeWithoutValue","userAttribute","getUserAttributeMatchingAST","label","isMatchesAdvanced","hasMatchesAdvancedNode","attributeName","find","ua","name"],"sources":["../../../../src/utils/summary/summary.ts"],"sourcesContent":["/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\nimport type { ILookmlModelExploreField } from '@looker/sdk'\nimport type {\n  FilterASTNode,\n  FilterItemToStringFunction,\n  FilterModel,\n  FilterExpressionType,\n  UserAttributeWithValue,\n} from '../../types'\nimport { hasMatchesAdvancedNode } from '../has_matches_advanced_node'\nimport { hasUserAttributeNodeWithoutValue } from '../has_user_attribute_node_without_value'\nimport { parseFilterExpression } from '../parse_filter_expression'\nimport { inorderTraversal } from '../tree'\nimport { typeToGrammar } from '../type_to_grammar'\nimport i18next from 'i18next'\nconst t = i18next.t.bind(i18next)\n\n/**\n * Traverses ast and calls the describe function for every node\n * combines results using or / and labels\n */\nconst treeToSummary = (\n  root: FilterASTNode,\n  describe: FilterItemToStringFunction,\n  filterType: FilterExpressionType,\n  field?: ILookmlModelExploreField | null\n): string => {\n  const orItems: string[] = []\n  const andItems: string[] = []\n  inorderTraversal(root, (node: FilterASTNode) => {\n    const item = node as FilterModel\n    if (item.type !== ',') {\n      ;(item.is ? orItems : andItems).push(describe(item, filterType, field))\n    }\n  })\n  const resultOr = orItems ? orItems.join(' or ') : ''\n  const resultAnd = andItems ? andItems.join(' and ') : ''\n  let result = resultOr\n  result += resultOr && resultAnd ? ', and ' : ''\n  result += resultAnd\n\n  return result\n}\n\ninterface ISummaryOptions {\n  /** The type of filter expression - number, string, etc. */\n  type: FilterExpressionType\n  /** The current value being filtered */\n  expression?: string\n  /** User attributes to be considered */\n  userAttributes?: UserAttributeWithValue[]\n  /** Field being filtered */\n  field?: ILookmlModelExploreField | null\n  /** Filter is required if true; required fields must have a value */\n  required?: boolean\n}\n\ntype ISummary = (o: ISummaryOptions) => string\n\n/**\n * Builds a summary description for a filter expression\n */\nexport const summary: ISummary = (props) => {\n  const {\n    type,\n    expression = '',\n    userAttributes,\n    field,\n    required,\n  } = props as ISummaryOptions\n\n  if (required && !expression) {\n    return t('Value required', { ns: 'summary' })\n  }\n\n  const { describe, subTypes } = typeToGrammar(type)\n  const ast = parseFilterExpression(type, expression, userAttributes)\n\n  // Special case: user attribute should be displayed\n  // as the name and a \"(null)\" text if it has no value\n  if (hasUserAttributeNodeWithoutValue(ast)) {\n    const userAttribute = getUserAttributeMatchingAST(ast, userAttributes)\n    if (userAttribute) {\n      return `${userAttribute?.label} (null)`\n    }\n  }\n\n  const isMatchesAdvanced = hasMatchesAdvancedNode(subTypes)(ast)\n  return isMatchesAdvanced\n    ? expression\n    : treeToSummary(ast, describe, type, field)\n}\n\nconst getUserAttributeMatchingAST = (\n  { attributeName }: FilterASTNode,\n  userAttributes?: UserAttributeWithValue[]\n) => userAttributes?.find((ua) => ua.name === attributeName)\n"],"mappings":";;;;;;;AAiCA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAMA,CAAC,GAAGC,mBAAO,CAACD,CAAC,CAACE,IAAI,CAACD,mBAAO,CAAC;;AAMjC,IAAME,aAAa,GAAG,SAAhBA,aAAa,CACjBC,IAAmB,EACnBC,QAAoC,EACpCC,UAAgC,EAChCC,KAAuC,EAC5B;EACX,IAAMC,OAAiB,GAAG,EAAE;EAC5B,IAAMC,QAAkB,GAAG,EAAE;EAC7B,IAAAC,sBAAgB,EAACN,IAAI,EAAE,UAACO,IAAmB,EAAK;IAC9C,IAAMC,IAAI,GAAGD,IAAmB;IAChC,IAAIC,IAAI,CAACC,IAAI,KAAK,GAAG,EAAE;MACrB;MAAC,CAACD,IAAI,CAACE,EAAE,GAAGN,OAAO,GAAGC,QAAQ,EAAEM,IAAI,CAACV,QAAQ,CAACO,IAAI,EAAEN,UAAU,EAAEC,KAAK,CAAC,CAAC;IACzE;EACF,CAAC,CAAC;EACF,IAAMS,QAAQ,GAAGR,OAAO,GAAGA,OAAO,CAACS,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE;EACpD,IAAMC,SAAS,GAAGT,QAAQ,GAAGA,QAAQ,CAACQ,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE;EACxD,IAAIE,MAAM,GAAGH,QAAQ;EACrBG,MAAM,IAAIH,QAAQ,IAAIE,SAAS,GAAG,QAAQ,GAAG,EAAE;EAC/CC,MAAM,IAAID,SAAS;EAEnB,OAAOC,MAAM;AACf,CAAC;AAoBM,IAAMC,OAAiB,GAAG,SAApBA,OAAiB,CAAIC,KAAK,EAAK;EAC1C,WAMIA,KAAK;IALPR,IAAI,QAAJA,IAAI;IAAA,uBACJS,UAAU;IAAVA,UAAU,gCAAG,EAAE;IACfC,cAAc,QAAdA,cAAc;IACdhB,KAAK,QAALA,KAAK;IACLiB,QAAQ,QAARA,QAAQ;EAGV,IAAIA,QAAQ,IAAI,CAACF,UAAU,EAAE;IAC3B,OAAOtB,CAAC,CAAC,gBAAgB,EAAE;MAAEyB,EAAE,EAAE;IAAU,CAAC,CAAC;EAC/C;EAEA,qBAA+B,IAAAC,8BAAa,EAACb,IAAI,CAAC;IAA1CR,QAAQ,kBAARA,QAAQ;IAAEsB,QAAQ,kBAARA,QAAQ;EAC1B,IAAMC,GAAG,GAAG,IAAAC,8CAAqB,EAAChB,IAAI,EAAES,UAAU,EAAEC,cAAc,CAAC;;EAInE,IAAI,IAAAO,uEAAgC,EAACF,GAAG,CAAC,EAAE;IACzC,IAAMG,aAAa,GAAGC,2BAA2B,CAACJ,GAAG,EAAEL,cAAc,CAAC;IACtE,IAAIQ,aAAa,EAAE;MACjB,iBAAUA,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEE,KAAK;IAChC;EACF;EAEA,IAAMC,iBAAiB,GAAG,IAAAC,iDAAsB,EAACR,QAAQ,CAAC,CAACC,GAAG,CAAC;EAC/D,OAAOM,iBAAiB,GACpBZ,UAAU,GACVnB,aAAa,CAACyB,GAAG,EAAEvB,QAAQ,EAAEQ,IAAI,EAAEN,KAAK,CAAC;AAC/C,CAAC;AAAA;AAED,IAAMyB,2BAA2B,GAAG,SAA9BA,2BAA2B,QAE/BT,cAAyC;EAAA,IADvCa,aAAa,SAAbA,aAAa;EAAA,OAEZb,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAEc,IAAI,CAAC,UAACC,EAAE;IAAA,OAAKA,EAAE,CAACC,IAAI,KAAKH,aAAa;EAAA,EAAC;AAAA"}