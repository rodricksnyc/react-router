{"version":3,"file":"tree_to_string.js","names":["treeToString","root","nodeToString","filterNode","treeToList","filter","map","String","join"],"sources":["../../../../src/utils/tree/tree_to_string.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport type { FilterASTNode, FilterModel } from '../../types'\nimport { treeToList } from './tree_to_list'\n\n/**\n * Given an AST and a nodeToString conversion function for that particular\n * type of filter, it converts the AST to a string expression representation\n */\nexport const treeToString = (\n  root: FilterASTNode,\n  nodeToString: (item: FilterModel) => string,\n  filterNode: (item: FilterModel) => boolean = () => true\n) =>\n  treeToList(root).filter(filterNode).map(nodeToString).filter(String).join(',')\n"],"mappings":";;;;;;AAKA;;AAMO,IAAMA,YAAY,GAAG,SAAfA,YAAY,CACvBC,IAAmB,EACnBC,YAA2C;EAAA,IAC3CC,UAA0C,uEAAG;IAAA,OAAM,IAAI;EAAA;EAAA,OAEvD,IAAAC,wBAAU,EAACH,IAAI,CAAC,CAACI,MAAM,CAACF,UAAU,CAAC,CAACG,GAAG,CAACJ,YAAY,CAAC,CAACG,MAAM,CAACE,MAAM,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;AAAA;AAAA"}