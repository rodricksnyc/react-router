{"version":3,"file":"number_grammar.spec.js","names":["convertTypeToOption","parseFilterExpression","treeToList","numberExpressionTestItems","testNumericItem","testItem","test","expression","type","ast","expect","toMatchSnapshot","list","item","itemType","toEqual","describe","forEach","fail","it","each","toBe","numeric","testNumeric","textInput","value","join","nullValues","testNull","toBeUndefined","error","toBeNull","between","low","high","bounds","String","nowSupported","unsupported"],"sources":["../../../src/grammars/number_grammar.spec.ts"],"sourcesContent":["/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\nimport type { FilterModel } from '../types'\nimport {\n  convertTypeToOption,\n  parseFilterExpression,\n  treeToList,\n} from '../utils'\nimport type { GrammarTestItem } from './grammar_test_utils'\nimport { numberExpressionTestItems } from './number_grammar_test_expressions'\nconst testNumericItem = (testItem: GrammarTestItem) => {\n  test(testItem.expression, () => {\n    const { expression, type } = testItem\n    const ast = parseFilterExpression('number', expression)\n    expect(ast).toMatchSnapshot()\n    const list = treeToList(ast)\n    const item = list[0]\n    let itemType = item.type\n    if (type !== 'matchesAdvanced') {\n      itemType = convertTypeToOption(item)\n    }\n    expect(itemType).toEqual(type)\n  })\n}\n\ndescribe('Number grammar can parse', () => {\n  numberExpressionTestItems.forEach(testNumericItem)\n})\n\n// these tests should fail\nconst fail = ['(,)', 'AND', 'OR', '[inf,10]']\n\ndescribe(\"Number grammar can't parse\", () => {\n  it.each(fail)('%s', (expression) => {\n    const ast = parseFilterExpression('number', expression)\n    expect(ast).toMatchSnapshot()\n    expect(ast.type).toBe('matchesAdvanced')\n    expect(ast.expression).toEqual(expression)\n  })\n})\n\nconst numeric = [\n  ['1', '=', '1'],\n  ['1, 2, 3', '=', '1,2,3'],\n  ['3.14159', '=', '3.14159'],\n  ['123456789', '=', '123456789'],\n  // Should support big integers\n  ['12345678901234567890', '=', '12345678901234567890'],\n  ['0.01', '=', '0.01'],\n  ['.01', '=', /* \".01\" */ '0.01'],\n  ['-.01', '=', /* \"-.01\" */ '-0.01'],\n  ['-0.01', '=', '-0.01'],\n  ['1, -1, 0.1', '=', '1,-1,0.1'],\n\n  ['not 1', '!=', '1'],\n  ['not 1, 2, 3', '!=', '1,2,3'],\n  ['<> 1', '!=', '1'],\n  ['!= 1, 2, 3', '!=', '1,2,3'],\n  ['not -1.2', '!=', '-1.2'],\n  ['not -.2', '!=', /* \"-.2\" */ '-0.2'],\n\n  ['> 1.1', '>', '1.1'],\n  ['>0.1', '>', '0.1'],\n  ['>999', '>', '999'],\n  ['> -42', '>', '-42'],\n  ['>-242', '>', '-242'],\n  ['>    0', '>', '0'],\n\n  ['< 1.1', '<', '1.1'],\n  ['<3', '<', '3'],\n  ['<0.1', '<', '0.1'],\n  ['<999', '<', '999'],\n  ['< -42', '<', '-42'],\n  ['<-242', '<', '-242'],\n  ['<    0', '<', '0'],\n\n  ['<= 1.1', '<=', '1.1'],\n  ['<=0.1', '<=', '0.1'],\n  ['<=999', '<=', '999'],\n  ['<= -42', '<=', '-42'],\n  ['<=-242', '<=', '-242'],\n  ['<=    0', '<=', '0'],\n\n  ['>= 1.1', '>=', '1.1'],\n  ['>=0.1', '>=', '0.1'],\n  ['>=999', '>=', '999'],\n  ['>= -42', '>=', '-42'],\n  ['>=-242', '>=', '-242'],\n  ['>=    0', '>=', '0'],\n]\n\nconst testNumeric = (\n  expression: string,\n  type: string,\n  textInput: string | undefined\n) => {\n  const ast = parseFilterExpression('number', expression)\n  expect(ast).toMatchSnapshot()\n  const list = treeToList(ast)\n  const item = list[0]\n  let itemType = item.type\n  if (type !== 'matchesAdvanced') {\n    itemType = convertTypeToOption(item)\n  }\n  expect(itemType).toEqual(type)\n  if (type !== 'matchesAdvanced' && type !== 'between') {\n    expect(textInput).toBe(item.value ? item.value.join(',') : item.value)\n  }\n}\n\ndescribe('Additional number tests', () => {\n  it.each(numeric)('%s', testNumeric)\n})\n\nconst nullValues = [\n  ['NULL', 'null'],\n  ['NOT NULL', '!null'],\n  ['null', 'null'],\n  ['not null', '!null'],\n  ['nUll', 'null'],\n  ['Not Null', '!null'],\n]\n\nconst testNull = (expression: string, type: string) => {\n  try {\n    const ast = parseFilterExpression('number', expression)\n    expect(ast).toMatchSnapshot()\n    const itemType = convertTypeToOption(ast as FilterModel)\n    expect(itemType).toEqual(type)\n    expect(ast.value).toBeUndefined()\n  } catch (error) {\n    expect(error).toBeNull()\n  }\n}\n\ndescribe('nullValues number tests', () => {\n  it.each(nullValues)('%s', testNull)\n})\n\nconst between: GrammarTestItem[] = [\n  { expression: '1 to 5', type: 'between', low: '1', high: '5', bounds: '[]' },\n  {\n    expression: '-1.0 to .75',\n    type: 'between',\n    low: '-1.0',\n    high: '.75',\n    bounds: '[]',\n  },\n\n  {\n    expression: '>7 AND <80.44',\n    type: 'between',\n    low: '7',\n    high: '80.44',\n    bounds: '()',\n  },\n  {\n    expression: '>= 7 AND <80.44',\n    type: 'between',\n    low: '7',\n    high: '80.44',\n    bounds: '[)',\n  },\n  {\n    expression: '<=80.44  AND    >.1',\n    type: 'between',\n    low: '0.1',\n    high: '80.44',\n    bounds: '(]',\n  },\n\n  { expression: '[2, 4]', type: 'between', low: '2', high: '4', bounds: '[]' },\n  {\n    expression: '[0.1,   -4)',\n    type: 'between',\n    low: '0.1',\n    high: '-4',\n    bounds: '[)',\n  },\n  {\n    expression: '(0.1,   -4]',\n    type: 'between',\n    low: '0.1',\n    high: '-4',\n    bounds: '(]',\n  },\n  {\n    expression: '(0.1, .11111)',\n    type: 'between',\n    low: '0.1',\n    high: '0.11111',\n    bounds: '()',\n  },\n\n  {\n    expression: 'NOT 1 to 5',\n    type: '!between',\n    low: '1',\n    high: '5',\n    bounds: '[]',\n  },\n  {\n    expression: 'NOT -1.0 to .75',\n    type: '!between',\n    low: '-1.0',\n    high: '.75',\n    bounds: '[]',\n  },\n  {\n    expression: 'not 3 to 80.44',\n    type: '!between',\n    low: '3',\n    high: '80.44',\n    bounds: '[]',\n  },\n\n  {\n    expression: '<7 OR >80.44',\n    type: '!between',\n    low: '7',\n    high: '80.44',\n    bounds: '()',\n  },\n  {\n    expression: '<= 7 OR >80.44',\n    type: '!between',\n    low: '7',\n    high: '80.44',\n    bounds: '[)',\n  },\n  {\n    expression: '>=80.44  OR    <.1',\n    type: '!between',\n    low: '0.1',\n    high: '80.44',\n    bounds: '(]',\n  },\n\n  {\n    expression: 'NOT[2, 4]',\n    type: '!between',\n    low: '2',\n    high: '4',\n    bounds: '[]',\n  },\n  {\n    expression: 'NOT [0.1,   -4)',\n    type: '!between',\n    low: '0.1',\n    high: '-4',\n    bounds: '[)',\n  },\n  {\n    expression: 'NOT  (0.1,   -4]',\n    type: '!between',\n    low: '0.1',\n    high: '-4',\n    bounds: '(]',\n  },\n  {\n    expression: 'NOT(0.1, .11111)',\n    type: '!between',\n    low: '0.1',\n    high: '0.11111',\n    bounds: '()',\n  },\n]\n\ndescribe('between tests', () => {\n  between.forEach((testItem: GrammarTestItem) => {\n    it(testItem.expression, () => {\n      const { expression, type, low, high, bounds } = testItem\n      const ast = parseFilterExpression('number', expression)\n      expect(ast).toMatchSnapshot()\n      const itemType = convertTypeToOption(ast as FilterModel)\n      expect(type).toEqual(itemType)\n      expect(String(ast.low)).toEqual(low)\n      expect(String(ast.high)).toEqual(high)\n      expect(ast.bounds).toEqual(bounds)\n    })\n  })\n})\n\n// prettier-ignore\nconst nowSupported = [\n  // the following previously had no deserializer,\t\n  // but are now supported\t\n  [\"1 to\",                   \">=\",     \"1\"],\t\n  [\"to -1\",                  \"<=\",     \"-1\"],\t\n  [\"to 0.1\",                 \"<=\",     \"0.1\"],\t\n  [\"not 1, not 2\",           \"!=\",     \"1,2\"],\t\n  [\"<> 1, <> 2\",             \"!=\",     \"1,2\"],\t\n  [\"!= 1, != 2\",             \"!=\",     \"1,2\"],\t\n  [\"1, not 2\",               \"!=\",     \"1,2\"],\n  [\">1 AND <2 OR >3 AND <4\", \"between\",      \">1 AND <2 OR >3 AND <4\"],\t\n]\n\ndescribe('nowSupported expressions', () => {\n  it.each(nowSupported)('%s', testNumeric)\n})\n\n// prettier-ignore\nconst unsupported = [\t\n  [\"0.1.1.1\",                \"matchesAdvanced\",     \"0.1.1.1\"],\t\n  [\"0.....1\",                \"matchesAdvanced\",     \"0.....1\"],\t\n  [\"--1\",                    \"matchesAdvanced\",     \"--1\"],\t\n  [\"foo\",                    \"matchesAdvanced\",     \"foo\"],\t\n  [\"seventeen\",              \"matchesAdvanced\",     \"seventeen\"],\t\n  [\"&,,,$%testContext.#,,,$,testContext.\",         \"matchesAdvanced\",     \"&,,,$%testContext.#,,,$,testContext.\"],\t\n  [\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",         \"matchesAdvanced\",     \"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"],\t\n  [\"~`!testContext.#$%^*()-+=_{}[]|?\",  \"matchesAdvanced\",     \"~`!testContext.#$%^*()-+=_{}[]|?\"],\t\n  [\"<>,. ¡™£¢∞§¶•ªº–≠œ∑\",    \"matchesAdvanced\",     \"<>,. ¡™£¢∞§¶•ªº–≠œ∑\"],\t\n  [\"´®†¥¨ˆøπ“‘åß∂ƒ©˙∆˚¬…æ\",  \"matchesAdvanced\",     \"´®†¥¨ˆøπ“‘åß∂ƒ©˙∆˚¬…æ\"],\t\n  [\"Ω≈ç√∫˜µ≤≥÷\",             \"matchesAdvanced\",     \"Ω≈ç√∫˜µ≤≥÷\"],\t\n  [\"😻🌚\",                   \"matchesAdvanced\",     \"😻🌚\"],\t\n  [\"^12345\",                 \"matchesAdvanced\",     \"^12345\"],\t\n  [\"1234^, 567\", \"matchesAdvanced\", \"1234^, 567\"],\t\n\n]\n\ndescribe('unsuppored expressions', () => {\n  it.each(unsupported)('%s', testNumeric)\n})\n"],"mappings":"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"}