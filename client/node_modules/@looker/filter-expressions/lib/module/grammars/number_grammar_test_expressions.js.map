{"version":3,"file":"number_grammar_test_expressions.js","names":["numberExpressionTestItems","expression","type","describe","output"],"sources":["../../../src/grammars/number_grammar_test_expressions.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport type { GrammarTestItem } from './grammar_test_utils'\n\n// prettier-ignore\nexport const numberExpressionTestItems: GrammarTestItem[] = [\n  { expression: '5', type: '=', describe: 'is 5', output: '5'},\n  { expression: 'not 5', type: '!=', describe: 'is not 5', output: 'not 5'},\n  { expression: '<> 5', type: '!=', describe: 'is not 5', output: 'not 5'},\n  { expression: '1, 3, 5, 7', type: '=', describe: 'is 1 or 3 or 5 or 7', output: '1,3,5,7'},\n  { expression: 'not 66, 99, 4', type: '!=', describe: 'is not 66 or 99 or 4', output: 'not 66,not 99,not 4'},\n  { expression: '5.5 to 10', type: 'between', describe: 'is in range [5.5, 10]', output: '[5.5,10]'},\n  { expression: 'not 3 to 80.44', type: '!between', describe: 'is not in range [3, 80.44]', output: 'not [3,80.44]'},\n  { expression: '1 to', type: '>=', describe: 'is >= 1', output: '>=1'},\n  { expression: 'to 100', type: '<=', describe: 'is <= 100', output: '<=100'},\n  { expression: '>= 5.5 AND <=10', type: 'between', describe: 'is in range [5.5, 10]', output: '[5.5,10]'},\n  { expression: '<3 OR >80.44', type: '!between', describe: 'is not in range (3, 80.44)', output: 'not (3,80.44)'},\n  { expression: '>10 AND <=20 OR 90', type: 'between', describe: 'is in range (10, 20] or is 90', output: '(10,20],90'},\n  { expression: '>=50 AND <=100 OR >=500 AND <=1000', type: 'between', describe: 'is in range [50, 100] or is in range [500, 1000]', output: '[50,100],[500,1000]'},\n  { expression: 'NULL', type: 'null', describe: 'is null', output: 'null'},\n  { expression: 'NOT NULL', type: '!null', describe: 'is not null', output: 'not null'},\n  { expression: '(1,100)', type: 'between', describe: 'is in range (1, 100)', output: '(1,100)'},\n  { expression: '(1,100]', type: 'between', describe: 'is in range (1, 100]', output: '(1,100]'},\n  { expression: '[1,100)', type: 'between', describe: 'is in range [1, 100)', output: '[1,100)'},\n  { expression: '[1,100]', type: 'between', describe: 'is in range [1, 100]', output: '[1,100]'},\n  { expression: '[0,9],[20,29]', type: 'between', describe: 'is in range [0, 9] or is in range [20, 29]', output: '[0,9],[20,29]'},\n  { expression: '[0,10],20', type: 'between', describe: 'is in range [0, 10] or is 20', output: '[0,10],20'},\n  { expression: 'NOT 10,[1,5)', type: 'between', describe: 'is in range [1, 5), and is not 10', output: '[1,5),not 10'},\n  { expression: '(1,100],500,600,(800,900],[2000,)', type: 'between', describe: 'is in range (1, 100] or is 500 or 600 or is in range (800, 900] or is >= 2000', output: '(1,100],500,600,(800,900],>=2000'},\n  { expression: '(1, inf)', type: '>', describe: 'is > 1', output: '>1'},\n  { expression: '(1,)', type: '>', describe: 'is > 1', output: '>1'},\n  { expression: '(-inf,100]', type: '<=', describe: 'is <= 100', output: '<=100'},\n  { expression: '(,100)', type: '<', describe: 'is < 100', output: '<100'},\n  { expression: '[,10]', type: '<=', describe: 'is <= 10', output: '<=10' },\n  { expression: '>5', type: '>', describe: 'is > 5', output: '>5'},\n  { expression: '23, not 42, not 42', type:'=', describe: 'is 23, and is not 42', output: '23,not 42,not 42'},\n  { expression: '23, not 42, 43', type:'!=', describe: 'is not 23 or 42 or 43', output: 'not 23,not 42,not 43'},\n  { expression: '23, not 42, not 43', type:'=', describe: 'is 23, and is not 42 or 43', output: '23,not 42,not 43'},\n  { expression: '23,NOT [30,40]', type: '=', describe: 'is 23, and is not in range [30, 40]', output: '23,not [30,40],not [30,40]'},\n  { expression: '23,NOT NULL', type: '=', describe: 'is 23, and is not null', output: '23,not null,not null'},\n  { expression: '23,NOT NULL,NOT NULL', type: '=', describe: 'is 23, and is not null', output: '23,not null,not null'},\n]\n"],"mappings":"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"}