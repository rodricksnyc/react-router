{"version":3,"file":"tier_grammar.js","names":["stringGrammar","grammar","tierGrammar","concat"],"sources":["../../../src/grammars/tier_grammar.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport { stringGrammar } from './string_grammar'\n\nconst grammar = `TierExpression\n= USER_ATTRIBUTE / MATCH_LIST / MATCH_TERM\n\nMATCH_LIST\n= left:MATCH_TERM COMMA _ right:TierExpression {\n return {\n     type: ',',\n       left: left,\n       right: right\n   }\n}\n\nMATCH_TERM\n= not:(NOT)? term:(MATCH) {\n term.is = not ? false : true\n return term\n}\n\n`\nexport const tierGrammar = grammar.concat(stringGrammar)\n"],"mappings":";AAIA,SAASA,aAAa,QAAQ,kBAAkB;AAEhD,MAAMC,OAAO,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,OAAO,MAAMC,WAAW,GAAGD,OAAO,CAACE,MAAM,CAACH,aAAa,CAAC"}