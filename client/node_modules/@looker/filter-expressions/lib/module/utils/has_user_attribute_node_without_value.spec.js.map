{"version":3,"file":"has_user_attribute_node_without_value.spec.js","names":["TYPE_USER_ATTRIBUTE","hasUserAttributeNodeWithoutValue","parseFilterExpression","describe","getUserAttribute","overrideProps","name","value","type","it","testExpression","ast","expect","toBe","userAttribute"],"sources":["../../../src/utils/has_user_attribute_node_without_value.spec.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport type { UserAttributeWithValue } from '../types'\nimport { TYPE_USER_ATTRIBUTE } from '../types'\nimport { hasUserAttributeNodeWithoutValue } from './has_user_attribute_node_without_value'\nimport { parseFilterExpression } from './parse_filter_expression'\n\ndescribe('hasUserAttributeNodeWithoutValue', () => {\n  const getUserAttribute = (\n    overrideProps?: Partial<UserAttributeWithValue>\n  ) => ({\n    name: 'xyz',\n    value: 'some-value',\n    type: TYPE_USER_ATTRIBUTE,\n    ...overrideProps,\n  })\n\n  describe('when there are no user attributes', () => {\n    it('should return false', () => {\n      const testExpression = '1'\n      const ast = parseFilterExpression('string', testExpression)\n\n      expect(hasUserAttributeNodeWithoutValue(ast)).toBe(false)\n    })\n  })\n\n  describe('when another user attribute exists with a value', () => {\n    it('should return true', () => {\n      const testExpression = \"{{ _user_attributes['abc'] }}\"\n      const userAttribute = getUserAttribute()\n\n      const ast = parseFilterExpression('string', testExpression, [\n        userAttribute,\n      ])\n      expect(hasUserAttributeNodeWithoutValue(ast)).toBe(true)\n    })\n  })\n\n  describe('when the user attribute exists but has an empty string value', () => {\n    it('should return true', () => {\n      const testExpression = \"{{ _user_attributes['xyz'] }}\"\n      const userAttribute = getUserAttribute({ value: '' })\n\n      const ast = parseFilterExpression('string', testExpression, [\n        userAttribute,\n      ])\n      expect(hasUserAttributeNodeWithoutValue(ast)).toBe(true)\n    })\n  })\n\n  describe('when the user attribute exists but has no value', () => {\n    it('should return true', () => {\n      const testExpression = \"{{ _user_attributes['xyz'] }}\"\n      const userAttribute = getUserAttribute({ value: null })\n\n      const ast = parseFilterExpression('string', testExpression, [\n        userAttribute,\n      ])\n      expect(hasUserAttributeNodeWithoutValue(ast)).toBe(true)\n    })\n  })\n\n  describe('when the user attribute exists and has a value', () => {\n    it('should return false', () => {\n      const testExpression = \"{{ _user_attributes['xyz'] }}\"\n      const userAttribute = getUserAttribute()\n\n      const ast = parseFilterExpression('string', testExpression, [\n        userAttribute,\n      ])\n      expect(hasUserAttributeNodeWithoutValue(ast)).toBe(false)\n    })\n  })\n})\n"],"mappings":";;;;AAKA,SAASA,mBAAmB,QAAQ,UAAU;AAC9C,SAASC,gCAAgC,QAAQ,yCAAyC;AAC1F,SAASC,qBAAqB,QAAQ,2BAA2B;AAEjEC,QAAQ,CAAC,kCAAkC,EAAE,MAAM;EACjD,MAAMC,gBAAgB,GACpBC,aAA+C;IAE/CC,IAAI,EAAE,KAAK;IACXC,KAAK,EAAE,YAAY;IACnBC,IAAI,EAAER;EAAmB,GACtBK,aAAa,CAChB;EAEFF,QAAQ,CAAC,mCAAmC,EAAE,MAAM;IAClDM,EAAE,CAAC,qBAAqB,EAAE,MAAM;MAC9B,MAAMC,cAAc,GAAG,GAAG;MAC1B,MAAMC,GAAG,GAAGT,qBAAqB,CAAC,QAAQ,EAAEQ,cAAc,CAAC;MAE3DE,MAAM,CAACX,gCAAgC,CAACU,GAAG,CAAC,CAAC,CAACE,IAAI,CAAC,KAAK,CAAC;IAC3D,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFV,QAAQ,CAAC,iDAAiD,EAAE,MAAM;IAChEM,EAAE,CAAC,oBAAoB,EAAE,MAAM;MAC7B,MAAMC,cAAc,GAAG,+BAA+B;MACtD,MAAMI,aAAa,GAAGV,gBAAgB,EAAE;MAExC,MAAMO,GAAG,GAAGT,qBAAqB,CAAC,QAAQ,EAAEQ,cAAc,EAAE,CAC1DI,aAAa,CACd,CAAC;MACFF,MAAM,CAACX,gCAAgC,CAACU,GAAG,CAAC,CAAC,CAACE,IAAI,CAAC,IAAI,CAAC;IAC1D,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFV,QAAQ,CAAC,8DAA8D,EAAE,MAAM;IAC7EM,EAAE,CAAC,oBAAoB,EAAE,MAAM;MAC7B,MAAMC,cAAc,GAAG,+BAA+B;MACtD,MAAMI,aAAa,GAAGV,gBAAgB,CAAC;QAAEG,KAAK,EAAE;MAAG,CAAC,CAAC;MAErD,MAAMI,GAAG,GAAGT,qBAAqB,CAAC,QAAQ,EAAEQ,cAAc,EAAE,CAC1DI,aAAa,CACd,CAAC;MACFF,MAAM,CAACX,gCAAgC,CAACU,GAAG,CAAC,CAAC,CAACE,IAAI,CAAC,IAAI,CAAC;IAC1D,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFV,QAAQ,CAAC,iDAAiD,EAAE,MAAM;IAChEM,EAAE,CAAC,oBAAoB,EAAE,MAAM;MAC7B,MAAMC,cAAc,GAAG,+BAA+B;MACtD,MAAMI,aAAa,GAAGV,gBAAgB,CAAC;QAAEG,KAAK,EAAE;MAAK,CAAC,CAAC;MAEvD,MAAMI,GAAG,GAAGT,qBAAqB,CAAC,QAAQ,EAAEQ,cAAc,EAAE,CAC1DI,aAAa,CACd,CAAC;MACFF,MAAM,CAACX,gCAAgC,CAACU,GAAG,CAAC,CAAC,CAACE,IAAI,CAAC,IAAI,CAAC;IAC1D,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFV,QAAQ,CAAC,gDAAgD,EAAE,MAAM;IAC/DM,EAAE,CAAC,qBAAqB,EAAE,MAAM;MAC9B,MAAMC,cAAc,GAAG,+BAA+B;MACtD,MAAMI,aAAa,GAAGV,gBAAgB,EAAE;MAExC,MAAMO,GAAG,GAAGT,qBAAqB,CAAC,QAAQ,EAAEQ,cAAc,EAAE,CAC1DI,aAAa,CACd,CAAC;MACFF,MAAM,CAACX,gCAAgC,CAACU,GAAG,CAAC,CAAC,CAACE,IAAI,CAAC,KAAK,CAAC;IAC3D,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC"}