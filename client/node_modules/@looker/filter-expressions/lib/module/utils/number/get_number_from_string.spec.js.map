{"version":3,"file":"get_number_from_string.spec.js","names":["getNumberFromString","test","num","expect","toBe","bigNum"],"sources":["../../../../src/utils/number/get_number_from_string.spec.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport { getNumberFromString } from './get_number_from_string'\n\ntest('it returns a regular number', () => {\n  const num = getNumberFromString('1234567890')\n  expect(typeof num).toBe('number')\n})\n\ntest('it returns a bigint for 16 characters or more', () => {\n  const bigNum = getNumberFromString('12345678901234567890')\n  expect(typeof bigNum).toBe('bigint')\n})\n\ntest('it returns a regular number if decimal is found', () => {\n  const num = getNumberFromString('1234567890.1234567890')\n  expect(typeof num).toBe('number')\n})\n"],"mappings":";;AAKA,SAASA,mBAAmB,QAAQ,0BAA0B;AAE9DC,IAAI,CAAC,6BAA6B,EAAE,MAAM;EACxC,MAAMC,GAAG,GAAGF,mBAAmB,CAAC,YAAY,CAAC;EAC7CG,MAAM,CAAC,OAAOD,GAAG,CAAC,CAACE,IAAI,CAAC,QAAQ,CAAC;AACnC,CAAC,CAAC;AAEFH,IAAI,CAAC,+CAA+C,EAAE,MAAM;EAC1D,MAAMI,MAAM,GAAGL,mBAAmB,CAAC,sBAAsB,CAAC;EAC1DG,MAAM,CAAC,OAAOE,MAAM,CAAC,CAACD,IAAI,CAAC,QAAQ,CAAC;AACtC,CAAC,CAAC;AAEFH,IAAI,CAAC,iDAAiD,EAAE,MAAM;EAC5D,MAAMC,GAAG,GAAGF,mBAAmB,CAAC,uBAAuB,CAAC;EACxDG,MAAM,CAAC,OAAOD,GAAG,CAAC,CAACE,IAAI,CAAC,QAAQ,CAAC;AACnC,CAAC,CAAC"}