{"version":3,"file":"sanitize_number.spec.js","names":["parseFilterExpression","sanitizeNumber","describe","expression","it","ast","item","type","expect","value","toMatchObject","id","is","expected","bounds","low","high"],"sources":["../../../../src/utils/number/sanitize_number.spec.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport { parseFilterExpression } from '../parse_filter_expression'\nimport type { FilterModel } from '../../types'\nimport { sanitizeNumber } from './sanitize_number'\n\ndescribe('Number To String', () => {\n  const expression = '1,2,3'\n\n  it('works when switching to > ' + expression, () => {\n    const ast = parseFilterExpression('number', expression)\n    const item = sanitizeNumber({ ...ast, type: '>' } as FilterModel)\n    expect(item.value).toMatchObject([1])\n  })\n\n  it('works when switching to null ' + expression, () => {\n    const ast = parseFilterExpression('number', expression)\n    const { id, is } = ast\n    const expected = { id, type: 'null', is }\n    const item = sanitizeNumber({ ...ast, type: 'null' } as FilterModel)\n    expect(item).toMatchObject(expected)\n  })\n\n  it('works when switching to between ' + expression, () => {\n    const ast = parseFilterExpression('number', expression)\n    const { id, is } = ast\n    const expected = { id, type: 'between', is, bounds: '[]', low: 1, high: 1 }\n    const item = sanitizeNumber({ ...ast, type: 'between' } as FilterModel)\n    expect(item).toMatchObject(expected)\n  })\n\n  it('works when switching to matchesAdvanced ' + expression, () => {\n    const ast = parseFilterExpression('number', expression)\n    const { id, is } = ast\n    const expected = { id, type: 'matchesAdvanced', is, value: [1, 2, 3] }\n    const item = sanitizeNumber({\n      ...ast,\n      type: 'matchesAdvanced',\n    } as FilterModel)\n    expect(item).toMatchObject(expected)\n  })\n\n  it('works when switching from between to = ' + expression, () => {\n    const ast = parseFilterExpression('number', '(1,100)')\n    const { id, is } = ast\n    const expected = { id, type: '=', is, value: [] }\n    const item = sanitizeNumber({ ...ast, type: '=' } as FilterModel)\n    expect(item).toMatchObject(expected)\n  })\n\n  it('works when switching from between types with value 0', () => {\n    const ast = parseFilterExpression('number', '>0')\n    const { id, is } = ast\n    const expected = { id, type: '<', is, value: [0] }\n    const item = sanitizeNumber({ ...ast, type: '<' } as FilterModel)\n    expect(item).toMatchObject(expected)\n  })\n})\n"],"mappings":";;;AAIA,SAASA,qBAAqB,QAAQ,4BAA4B;AAElE,SAASC,cAAc,QAAQ,mBAAmB;AAElDC,QAAQ,CAAC,kBAAkB,EAAE,MAAM;EACjC,MAAMC,UAAU,GAAG,OAAO;EAE1BC,EAAE,CAAC,4BAA4B,GAAGD,UAAU,EAAE,MAAM;IAClD,MAAME,GAAG,GAAGL,qBAAqB,CAAC,QAAQ,EAAEG,UAAU,CAAC;IACvD,MAAMG,IAAI,GAAGL,cAAc,iCAAMI,GAAG;MAAEE,IAAI,EAAE;IAAG,GAAkB;IACjEC,MAAM,CAACF,IAAI,CAACG,KAAK,CAAC,CAACC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;EACvC,CAAC,CAAC;EAEFN,EAAE,CAAC,+BAA+B,GAAGD,UAAU,EAAE,MAAM;IACrD,MAAME,GAAG,GAAGL,qBAAqB,CAAC,QAAQ,EAAEG,UAAU,CAAC;IACvD,MAAM;MAAEQ,EAAE;MAAEC;IAAG,CAAC,GAAGP,GAAG;IACtB,MAAMQ,QAAQ,GAAG;MAAEF,EAAE;MAAEJ,IAAI,EAAE,MAAM;MAAEK;IAAG,CAAC;IACzC,MAAMN,IAAI,GAAGL,cAAc,iCAAMI,GAAG;MAAEE,IAAI,EAAE;IAAM,GAAkB;IACpEC,MAAM,CAACF,IAAI,CAAC,CAACI,aAAa,CAACG,QAAQ,CAAC;EACtC,CAAC,CAAC;EAEFT,EAAE,CAAC,kCAAkC,GAAGD,UAAU,EAAE,MAAM;IACxD,MAAME,GAAG,GAAGL,qBAAqB,CAAC,QAAQ,EAAEG,UAAU,CAAC;IACvD,MAAM;MAAEQ,EAAE;MAAEC;IAAG,CAAC,GAAGP,GAAG;IACtB,MAAMQ,QAAQ,GAAG;MAAEF,EAAE;MAAEJ,IAAI,EAAE,SAAS;MAAEK,EAAE;MAAEE,MAAM,EAAE,IAAI;MAAEC,GAAG,EAAE,CAAC;MAAEC,IAAI,EAAE;IAAE,CAAC;IAC3E,MAAMV,IAAI,GAAGL,cAAc,iCAAMI,GAAG;MAAEE,IAAI,EAAE;IAAS,GAAkB;IACvEC,MAAM,CAACF,IAAI,CAAC,CAACI,aAAa,CAACG,QAAQ,CAAC;EACtC,CAAC,CAAC;EAEFT,EAAE,CAAC,0CAA0C,GAAGD,UAAU,EAAE,MAAM;IAChE,MAAME,GAAG,GAAGL,qBAAqB,CAAC,QAAQ,EAAEG,UAAU,CAAC;IACvD,MAAM;MAAEQ,EAAE;MAAEC;IAAG,CAAC,GAAGP,GAAG;IACtB,MAAMQ,QAAQ,GAAG;MAAEF,EAAE;MAAEJ,IAAI,EAAE,iBAAiB;MAAEK,EAAE;MAAEH,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;IAAE,CAAC;IACtE,MAAMH,IAAI,GAAGL,cAAc,iCACtBI,GAAG;MACNE,IAAI,EAAE;IAAiB,GACR;IACjBC,MAAM,CAACF,IAAI,CAAC,CAACI,aAAa,CAACG,QAAQ,CAAC;EACtC,CAAC,CAAC;EAEFT,EAAE,CAAC,yCAAyC,GAAGD,UAAU,EAAE,MAAM;IAC/D,MAAME,GAAG,GAAGL,qBAAqB,CAAC,QAAQ,EAAE,SAAS,CAAC;IACtD,MAAM;MAAEW,EAAE;MAAEC;IAAG,CAAC,GAAGP,GAAG;IACtB,MAAMQ,QAAQ,GAAG;MAAEF,EAAE;MAAEJ,IAAI,EAAE,GAAG;MAAEK,EAAE;MAAEH,KAAK,EAAE;IAAG,CAAC;IACjD,MAAMH,IAAI,GAAGL,cAAc,iCAAMI,GAAG;MAAEE,IAAI,EAAE;IAAG,GAAkB;IACjEC,MAAM,CAACF,IAAI,CAAC,CAACI,aAAa,CAACG,QAAQ,CAAC;EACtC,CAAC,CAAC;EAEFT,EAAE,CAAC,sDAAsD,EAAE,MAAM;IAC/D,MAAMC,GAAG,GAAGL,qBAAqB,CAAC,QAAQ,EAAE,IAAI,CAAC;IACjD,MAAM;MAAEW,EAAE;MAAEC;IAAG,CAAC,GAAGP,GAAG;IACtB,MAAMQ,QAAQ,GAAG;MAAEF,EAAE;MAAEJ,IAAI,EAAE,GAAG;MAAEK,EAAE;MAAEH,KAAK,EAAE,CAAC,CAAC;IAAE,CAAC;IAClD,MAAMH,IAAI,GAAGL,cAAc,iCAAMI,GAAG;MAAEE,IAAI,EAAE;IAAG,GAAkB;IACjEC,MAAM,CAACF,IAAI,CAAC,CAACI,aAAa,CAACG,QAAQ,CAAC;EACtC,CAAC,CAAC;AACJ,CAAC,CAAC"}