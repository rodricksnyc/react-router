{"version":3,"file":"describe_string.spec.js","names":["i18nInit","describeString","describe","beforeEach","it","item","id","type","is","expect","toBe","value"],"sources":["../../../../src/utils/string/describe_string.spec.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport type { FilterModel } from '../../types'\nimport { i18nInit } from '../i18n'\nimport { describeString } from './describe_string'\n\ndescribe('String summary', () => {\n  beforeEach(() => i18nInit())\n\n  it('returns empty string for an invalid item type', () => {\n    const item: FilterModel = {\n      id: '1',\n      type: 'what',\n      is: false,\n    }\n    expect(describeString(item)).toBe('')\n  })\n\n  describe('when type of filter is `match`', () => {\n    describe('and is including', () => {\n      describe('and values do not contain special characters', () => {\n        it('returns a string containing all values, unquoted, and separated by `or`', () => {\n          const item: FilterModel = {\n            is: true,\n            id: '1',\n            type: 'match',\n            value: ['value1', 'value2'],\n          }\n          expect(describeString(item)).toBe('is value1 or value2')\n        })\n      })\n\n      describe('and values contain special characters', () => {\n        it('returns a string containing all values, unquoted, and separated by `or`', () => {\n          const item: FilterModel = {\n            is: true,\n            id: '1',\n            type: 'match',\n            value: ['value1\"', 'value2,'],\n          }\n          expect(describeString(item)).toBe('is \"value1\"\" or \"value2,\"')\n        })\n      })\n    })\n\n    describe('and is excluding', () => {\n      describe('and values do not contain special characters', () => {\n        it('returns a string containing all values, unquoted, and separated by `or`', () => {\n          const item: FilterModel = {\n            is: false,\n            id: '1',\n            type: 'match',\n            value: ['value1', 'value2'],\n          }\n          expect(describeString(item)).toBe('is not value1 or value2')\n        })\n      })\n\n      describe('and values contain special characters', () => {\n        it('returns a string containing all values, unquoted, and separated by `or`', () => {\n          const item: FilterModel = {\n            is: false,\n            id: '1',\n            type: 'match',\n            value: ['value1\"', 'value2,'],\n          }\n          expect(describeString(item)).toBe('is not \"value1\"\" or \"value2,\"')\n        })\n      })\n    })\n  })\n})\n"],"mappings":";;AAKA,SAASA,QAAQ,QAAQ,SAAS;AAClC,SAASC,cAAc,QAAQ,mBAAmB;AAElDC,QAAQ,CAAC,gBAAgB,EAAE,MAAM;EAC/BC,UAAU,CAAC,MAAMH,QAAQ,EAAE,CAAC;EAE5BI,EAAE,CAAC,+CAA+C,EAAE,MAAM;IACxD,MAAMC,IAAiB,GAAG;MACxBC,EAAE,EAAE,GAAG;MACPC,IAAI,EAAE,MAAM;MACZC,EAAE,EAAE;IACN,CAAC;IACDC,MAAM,CAACR,cAAc,CAACI,IAAI,CAAC,CAAC,CAACK,IAAI,CAAC,EAAE,CAAC;EACvC,CAAC,CAAC;EAEFR,QAAQ,CAAC,gCAAgC,EAAE,MAAM;IAC/CA,QAAQ,CAAC,kBAAkB,EAAE,MAAM;MACjCA,QAAQ,CAAC,8CAA8C,EAAE,MAAM;QAC7DE,EAAE,CAAC,yEAAyE,EAAE,MAAM;UAClF,MAAMC,IAAiB,GAAG;YACxBG,EAAE,EAAE,IAAI;YACRF,EAAE,EAAE,GAAG;YACPC,IAAI,EAAE,OAAO;YACbI,KAAK,EAAE,CAAC,QAAQ,EAAE,QAAQ;UAC5B,CAAC;UACDF,MAAM,CAACR,cAAc,CAACI,IAAI,CAAC,CAAC,CAACK,IAAI,CAAC,qBAAqB,CAAC;QAC1D,CAAC,CAAC;MACJ,CAAC,CAAC;MAEFR,QAAQ,CAAC,uCAAuC,EAAE,MAAM;QACtDE,EAAE,CAAC,yEAAyE,EAAE,MAAM;UAClF,MAAMC,IAAiB,GAAG;YACxBG,EAAE,EAAE,IAAI;YACRF,EAAE,EAAE,GAAG;YACPC,IAAI,EAAE,OAAO;YACbI,KAAK,EAAE,CAAC,SAAS,EAAE,SAAS;UAC9B,CAAC;UACDF,MAAM,CAACR,cAAc,CAACI,IAAI,CAAC,CAAC,CAACK,IAAI,CAAC,2BAA2B,CAAC;QAChE,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFR,QAAQ,CAAC,kBAAkB,EAAE,MAAM;MACjCA,QAAQ,CAAC,8CAA8C,EAAE,MAAM;QAC7DE,EAAE,CAAC,yEAAyE,EAAE,MAAM;UAClF,MAAMC,IAAiB,GAAG;YACxBG,EAAE,EAAE,KAAK;YACTF,EAAE,EAAE,GAAG;YACPC,IAAI,EAAE,OAAO;YACbI,KAAK,EAAE,CAAC,QAAQ,EAAE,QAAQ;UAC5B,CAAC;UACDF,MAAM,CAACR,cAAc,CAACI,IAAI,CAAC,CAAC,CAACK,IAAI,CAAC,yBAAyB,CAAC;QAC9D,CAAC,CAAC;MACJ,CAAC,CAAC;MAEFR,QAAQ,CAAC,uCAAuC,EAAE,MAAM;QACtDE,EAAE,CAAC,yEAAyE,EAAE,MAAM;UAClF,MAAMC,IAAiB,GAAG;YACxBG,EAAE,EAAE,KAAK;YACTF,EAAE,EAAE,GAAG;YACPC,IAAI,EAAE,OAAO;YACbI,KAAK,EAAE,CAAC,SAAS,EAAE,SAAS;UAC9B,CAAC;UACDF,MAAM,CAACR,cAAc,CAACI,IAAI,CAAC,CAAC,CAACK,IAAI,CAAC,+BAA+B,CAAC;QACpE,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC"}