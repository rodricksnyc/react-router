{"version":3,"file":"apply_id_to_ast.js","names":["applyId","root","id","traverse","node","left","right","newLeft","newRight","newNode"],"sources":["../../../../../src/utils/transform/utils/apply_id_to_ast.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport type { FilterASTNode } from '../../../types'\n\n/**\n * Traverses the AST and assigns an id attribute to each node\n */\nconst applyId = (root: FilterASTNode): FilterASTNode => {\n  let id = 0\n  const traverse = (node: FilterASTNode): FilterASTNode => {\n    const { left, right } = node\n    let newLeft, newRight\n    if (left) {\n      newLeft = traverse(left)\n    }\n    id += 1\n    const newNode = { ...node, id }\n    if (right) {\n      newRight = traverse(right)\n    }\n    return { ...newNode, left: newLeft, right: newRight }\n  }\n  return traverse(root)\n}\n\nexport default applyId\n"],"mappings":";;;;AASA,MAAMA,OAAO,GAAIC,IAAmB,IAAoB;EACtD,IAAIC,EAAE,GAAG,CAAC;EACV,MAAMC,QAAQ,GAAIC,IAAmB,IAAoB;IACvD,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,IAAI;IAC5B,IAAIG,OAAO,EAAEC,QAAQ;IACrB,IAAIH,IAAI,EAAE;MACRE,OAAO,GAAGJ,QAAQ,CAACE,IAAI,CAAC;IAC1B;IACAH,EAAE,IAAI,CAAC;IACP,MAAMO,OAAO,mCAAQL,IAAI;MAAEF;IAAE,EAAE;IAC/B,IAAII,KAAK,EAAE;MACTE,QAAQ,GAAGL,QAAQ,CAACG,KAAK,CAAC;IAC5B;IACA,uCAAYG,OAAO;MAAEJ,IAAI,EAAEE,OAAO;MAAED,KAAK,EAAEE;IAAQ;EACrD,CAAC;EACD,OAAOL,QAAQ,CAACF,IAAI,CAAC;AACvB,CAAC;AAED,eAAeD,OAAO"}