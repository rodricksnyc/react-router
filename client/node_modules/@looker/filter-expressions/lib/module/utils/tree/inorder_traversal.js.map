{"version":3,"file":"inorder_traversal.js","names":["inorderTraversal","root","nodeHandler","inorder","node","parent","left","right"],"sources":["../../../../src/utils/tree/inorder_traversal.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport type { FilterASTNode } from '../../types'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype NodeHandler = (node: FilterASTNode, parent?: FilterASTNode) => any\n\n/**\n * Traverses the tree depth-first inorder (left, root, right) and assigns an id atribute to each node\n */\nexport const inorderTraversal = (\n  root: FilterASTNode,\n  nodeHandler: NodeHandler\n) => {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const inorder = (node: any, parent: any) => {\n    if (node) {\n      inorder(node.left, node)\n      nodeHandler(node, parent)\n      inorder(node.right, node)\n    }\n  }\n  inorder(root, null)\n}\n"],"mappings":";;AAYA,OAAO,MAAMA,gBAAgB,GAAG,CAC9BC,IAAmB,EACnBC,WAAwB,KACrB;EAEH,MAAMC,OAAO,GAAG,CAACC,IAAS,EAAEC,MAAW,KAAK;IAC1C,IAAID,IAAI,EAAE;MACRD,OAAO,CAACC,IAAI,CAACE,IAAI,EAAEF,IAAI,CAAC;MACxBF,WAAW,CAACE,IAAI,EAAEC,MAAM,CAAC;MACzBF,OAAO,CAACC,IAAI,CAACG,KAAK,EAAEH,IAAI,CAAC;IAC3B;EACF,CAAC;EACDD,OAAO,CAACF,IAAI,EAAE,IAAI,CAAC;AACrB,CAAC"}