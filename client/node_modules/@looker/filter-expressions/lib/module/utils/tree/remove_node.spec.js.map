{"version":3,"file":"remove_node.spec.js","names":["removeNode","treeToList","describe","it","root","id","type","value","ast","expect","toBeUndefined","n0","n1","left","right","toEqual","toHaveLength","m0","m1","x0","x1"],"sources":["../../../../src/utils/tree/remove_node.spec.ts"],"sourcesContent":["/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\nimport { removeNode } from './remove_node'\nimport { treeToList } from './tree_to_list'\n\ndescribe('Remove node', () => {\n  it('One tree node returns undefined', () => {\n    const root = { id: 'n1', type: '=', value: 10 }\n    const ast = removeNode(root, 'n1')\n    expect(ast).toBeUndefined()\n  })\n\n  it('Three tree node reduces to one when removing left leaf', () => {\n    const n0 = { id: 'n0', type: '=', value: 10 }\n    const n1 = { id: 'n1', type: '=', value: 15 }\n    const root = { id: 'root', left: n0, right: n1 }\n\n    const ast = removeNode(root, 'n0')\n\n    expect(ast?.value).toEqual(15)\n    expect(ast && treeToList(ast)).toHaveLength(1)\n  })\n\n  it('Three tree node reduces to one when removing right leaf', () => {\n    const n0 = { id: 'n0', type: '=', value: 10 }\n    const n1 = { id: 'n1', type: '=', value: 15 }\n    const root = { id: 'root', left: n0, right: n1 }\n\n    const ast = removeNode(root, 'n1')\n\n    expect(ast?.value).toEqual(10)\n    expect(ast && treeToList(ast)).toHaveLength(1)\n  })\n\n  it('Five tree node reduces to 3 when removing right leaf', () => {\n    const m0 = { id: 'm0', type: '=', value: 10 }\n    const m1 = { id: 'm1', type: '=', value: 10 }\n    const n0 = { id: 'n0', type: '=', value: 10 }\n    const n1 = { id: 'n1', left: m0, right: m1 }\n    const root = { id: 'root', left: n0, right: n1 }\n\n    const ast = removeNode(root, 'm1')\n\n    expect(ast && treeToList(ast)).toHaveLength(3)\n  })\n\n  it('Five tree node reduces to 3 when removing left leaf', () => {\n    const m0 = { id: 'm0', type: '=', value: 10 }\n    const m1 = { id: 'm1', type: '=', value: 10 }\n    const n0 = { id: 'n0', type: '=', value: 10 }\n    const n1 = { id: 'n1', left: m0, right: m1 }\n    const root = { id: 'root', left: n0, right: n1 }\n\n    const ast = removeNode(root, 'm0')\n\n    expect(ast && treeToList(ast)).toHaveLength(3)\n  })\n\n  it('Seven tree node reduces to 5 when removing left leaf', () => {\n    const x0 = { id: 'x0', type: '=', value: 10 }\n    const x1 = { id: 'x1', type: '=', value: 10 }\n    const m0 = { id: 'm0', type: '=', value: 10 }\n    const m1 = { id: 'm1', left: x0, right: x1 }\n    const n0 = { id: 'n0', type: '=', value: 10 }\n    const n1 = { id: 'n1', left: m0, right: m1 }\n    const root = { id: 'root', left: n0, right: n1 }\n\n    const ast = removeNode(root, 'x0')\n\n    expect(ast && treeToList(ast)).toHaveLength(5)\n  })\n\n  it('Tree stays same size if we cant find node', () => {\n    const x0 = { id: 'x0', type: '=', value: 10 }\n    const x1 = { id: 'x1', type: '=', value: 10 }\n    const m0 = { id: 'm0', type: '=', value: 10 }\n    const m1 = { id: 'm1', left: x0, right: x1 }\n    const n0 = { id: 'n0', type: '=', value: 10 }\n    const n1 = { id: 'n1', left: m0, right: m1 }\n    const root = { id: 'root', left: n0, right: n1 }\n\n    const ast = removeNode(root, 'cantfindme')\n\n    expect(ast && treeToList(ast)).toHaveLength(7)\n  })\n})\n"],"mappings":"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"}