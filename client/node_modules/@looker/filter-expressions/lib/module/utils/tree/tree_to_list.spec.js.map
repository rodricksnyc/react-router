{"version":3,"file":"tree_to_list.spec.js","names":["treeToList","describe","it","root","id","type","value","list","expect","toHaveLength","toEqual","left","vaue","right","is"],"sources":["../../../../src/utils/tree/tree_to_list.spec.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport { treeToList } from './tree_to_list'\n\ndescribe('filter ast to list', () => {\n  it('can convert an ast to array', () => {\n    const root = { id: 1, type: '=', value: [1] }\n    const list = treeToList(root)\n    expect(list).toHaveLength(1)\n    expect(list[0]).toEqual(root)\n  })\n\n  it('tree list only holds value nodes', () => {\n    const root = {\n      id: 1,\n      type: ',',\n      left: { id: 2, type: '=', vaue: [1] },\n      right: { id: 3, type: '>', value: [5] },\n    }\n    const list = treeToList(root)\n    expect(list).toHaveLength(2)\n    expect(list[0]).toEqual(root.left)\n    expect(list[1]).toEqual(root.right)\n  })\n\n  it('tree list is sorted by is value of nodes', () => {\n    const root = {\n      id: 1,\n      type: ',',\n      left: { id: 2, type: '=', vaue: [1], is: false },\n      right: { id: 3, type: '>', value: [5], is: true },\n    }\n    const list = treeToList(root)\n    expect(list).toHaveLength(2)\n    expect(list[0]).toEqual(root.right)\n    expect(list[1]).toEqual(root.left)\n  })\n})\n"],"mappings":";AAIA,SAASA,UAAU,QAAQ,gBAAgB;AAE3CC,QAAQ,CAAC,oBAAoB,EAAE,MAAM;EACnCC,EAAE,CAAC,6BAA6B,EAAE,MAAM;IACtC,MAAMC,IAAI,GAAG;MAAEC,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,GAAG;MAAEC,KAAK,EAAE,CAAC,CAAC;IAAE,CAAC;IAC7C,MAAMC,IAAI,GAAGP,UAAU,CAACG,IAAI,CAAC;IAC7BK,MAAM,CAACD,IAAI,CAAC,CAACE,YAAY,CAAC,CAAC,CAAC;IAC5BD,MAAM,CAACD,IAAI,CAAC,CAAC,CAAC,CAAC,CAACG,OAAO,CAACP,IAAI,CAAC;EAC/B,CAAC,CAAC;EAEFD,EAAE,CAAC,kCAAkC,EAAE,MAAM;IAC3C,MAAMC,IAAI,GAAG;MACXC,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE,GAAG;MACTM,IAAI,EAAE;QAAEP,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE,GAAG;QAAEO,IAAI,EAAE,CAAC,CAAC;MAAE,CAAC;MACrCC,KAAK,EAAE;QAAET,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE,GAAG;QAAEC,KAAK,EAAE,CAAC,CAAC;MAAE;IACxC,CAAC;IACD,MAAMC,IAAI,GAAGP,UAAU,CAACG,IAAI,CAAC;IAC7BK,MAAM,CAACD,IAAI,CAAC,CAACE,YAAY,CAAC,CAAC,CAAC;IAC5BD,MAAM,CAACD,IAAI,CAAC,CAAC,CAAC,CAAC,CAACG,OAAO,CAACP,IAAI,CAACQ,IAAI,CAAC;IAClCH,MAAM,CAACD,IAAI,CAAC,CAAC,CAAC,CAAC,CAACG,OAAO,CAACP,IAAI,CAACU,KAAK,CAAC;EACrC,CAAC,CAAC;EAEFX,EAAE,CAAC,0CAA0C,EAAE,MAAM;IACnD,MAAMC,IAAI,GAAG;MACXC,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE,GAAG;MACTM,IAAI,EAAE;QAAEP,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE,GAAG;QAAEO,IAAI,EAAE,CAAC,CAAC,CAAC;QAAEE,EAAE,EAAE;MAAM,CAAC;MAChDD,KAAK,EAAE;QAAET,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE,GAAG;QAAEC,KAAK,EAAE,CAAC,CAAC,CAAC;QAAEQ,EAAE,EAAE;MAAK;IAClD,CAAC;IACD,MAAMP,IAAI,GAAGP,UAAU,CAACG,IAAI,CAAC;IAC7BK,MAAM,CAACD,IAAI,CAAC,CAACE,YAAY,CAAC,CAAC,CAAC;IAC5BD,MAAM,CAACD,IAAI,CAAC,CAAC,CAAC,CAAC,CAACG,OAAO,CAACP,IAAI,CAACU,KAAK,CAAC;IACnCL,MAAM,CAACD,IAAI,CAAC,CAAC,CAAC,CAAC,CAACG,OAAO,CAACP,IAAI,CAACQ,IAAI,CAAC;EACpC,CAAC,CAAC;AACJ,CAAC,CAAC"}