{"version":3,"file":"SingleValue.js","names":["SingleValue","data","fields","width","height","config","series","name","measures","firstSeries","Array","isArray","color","label","value_format","value","formattedValue","numeral","format","SingleValueLayout","styled","div","theme","colors","background","SingleValueContent","fontSizes","xxxlarge","SingleValueTitle","large"],"sources":["../../../src/SingleValue/SingleValue.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport React from 'react'\nimport type { SingleValueProps } from '@looker/visualizations-adapters'\nimport numeral from 'numeral'\nimport styled from 'styled-components'\nimport { VisWrapper } from '@looker/visualizations-adapters'\n\nexport const SingleValue = ({\n  data,\n  fields,\n  width,\n  height,\n  config,\n}: SingleValueProps) => {\n  if (!data) {\n    return null\n  }\n  const { series = {} } = config\n\n  // only allow one measure for single_value\n  const { name } = fields.measures[0]\n  const firstSeries = Array.isArray(series) ? series[0] : series[name || '']\n  const { color, label, value_format } = firstSeries\n  const value: number = data[0][name || '']\n  const formattedValue = numeral(value).format(value_format)\n  return (\n    <VisWrapper>\n      <SingleValueLayout width={width} height={height}>\n        <SingleValueContent color={color}>{formattedValue}</SingleValueContent>\n        {label && <SingleValueTitle color={color}>{label}</SingleValueTitle>}\n      </SingleValueLayout>\n    </VisWrapper>\n  )\n}\n\ntype SingleValueLayoutProps = { width?: number; height?: number }\ntype SingleValueContentProps = { color?: string }\n\nconst SingleValueLayout = styled.div<SingleValueLayoutProps>`\n  align-items: center;\n  background: ${({ theme }) => theme.colors.background};\n  display: grid;\n  grid-template-columns: 1fr;\n  height: ${({ height }) => `${height}px` || `auto`};\n  justify-items: center;\n  width: ${({ width }) => `${width}px` || `auto`};\n`\n\nconst SingleValueContent = styled.div<SingleValueContentProps>`\n  color: ${({ color }) => `${color}`};\n  font-size: ${({ theme }) => theme.fontSizes.xxxlarge};\n`\nconst SingleValueTitle = styled.div<SingleValueContentProps>`\n  color: ${({ color }) => `${color}`};\n  font-size: ${({ theme }) => theme.fontSizes.large};\n  opacity: 50%;\n`\n"],"mappings":";;;;;;;;AAIA;AAEA;AACA;AACA;AAA4D;AAErD,IAAMA,WAAW,GAAG,SAAdA,WAAW,OAMA;EAAA,IALtBC,IAAI,QAAJA,IAAI;IACJC,MAAM,QAANA,MAAM;IACNC,KAAK,QAALA,KAAK;IACLC,MAAM,QAANA,MAAM;IACNC,MAAM,QAANA,MAAM;EAEN,IAAI,CAACJ,IAAI,EAAE;IACT,OAAO,IAAI;EACb;EACA,qBAAwBI,MAAM,CAAtBC,MAAM;IAANA,MAAM,+BAAG,CAAC,CAAC;;EAGnB,IAAQC,IAAI,GAAKL,MAAM,CAACM,QAAQ,CAAC,CAAC,CAAC,CAA3BD,IAAI;EACZ,IAAME,WAAW,GAAGC,KAAK,CAACC,OAAO,CAACL,MAAM,CAAC,GAAGA,MAAM,CAAC,CAAC,CAAC,GAAGA,MAAM,CAACC,IAAI,IAAI,EAAE,CAAC;EAC1E,IAAQK,KAAK,GAA0BH,WAAW,CAA1CG,KAAK;IAAEC,KAAK,GAAmBJ,WAAW,CAAnCI,KAAK;IAAEC,YAAY,GAAKL,WAAW,CAA5BK,YAAY;EAClC,IAAMC,KAAa,GAAGd,IAAI,CAAC,CAAC,CAAC,CAACM,IAAI,IAAI,EAAE,CAAC;EACzC,IAAMS,cAAc,GAAG,IAAAC,mBAAO,EAACF,KAAK,CAAC,CAACG,MAAM,CAACJ,YAAY,CAAC;EAC1D,OACE,gCAAC,kCAAU,QACT,gCAAC,iBAAiB;IAAC,KAAK,EAAEX,KAAM;IAAC,MAAM,EAAEC;EAAO,GAC9C,gCAAC,kBAAkB;IAAC,KAAK,EAAEQ;EAAM,GAAEI,cAAc,CAAsB,EACtEH,KAAK,IAAI,gCAAC,gBAAgB;IAAC,KAAK,EAAED;EAAM,GAAEC,KAAK,CAAoB,CAClD,CACT;AAEjB,CAAC;AAAA;AAKD,IAAMM,iBAAiB,GAAGC,4BAAM,CAACC,GAAG;EAAA;EAAA;AAAA,oPAEpB;EAAA,IAAGC,KAAK,SAALA,KAAK;EAAA,OAAOA,KAAK,CAACC,MAAM,CAACC,UAAU;AAAA,GAG1C;EAAA,IAAGpB,MAAM,SAANA,MAAM;EAAA,OAAO,UAAGA,MAAM,iBAAc;AAAA,GAExC;EAAA,IAAGD,KAAK,SAALA,KAAK;EAAA,OAAO,UAAGA,KAAK,iBAAc;AAAA,EAC/C;AAED,IAAMsB,kBAAkB,GAAGL,4BAAM,CAACC,GAAG;EAAA;EAAA;AAAA,iIAC1B;EAAA,IAAGT,KAAK,SAALA,KAAK;EAAA,iBAAUA,KAAK;AAAA,CAAE,EACrB;EAAA,IAAGU,KAAK,SAALA,KAAK;EAAA,OAAOA,KAAK,CAACI,SAAS,CAACC,QAAQ;AAAA,EACrD;AACD,IAAMC,gBAAgB,GAAGR,4BAAM,CAACC,GAAG;EAAA;EAAA;AAAA,kJACxB;EAAA,IAAGT,KAAK,SAALA,KAAK;EAAA,iBAAUA,KAAK;AAAA,CAAE,EACrB;EAAA,IAAGU,KAAK,SAALA,KAAK;EAAA,OAAOA,KAAK,CAACI,SAAS,CAACG,KAAK;AAAA,EAElD"}