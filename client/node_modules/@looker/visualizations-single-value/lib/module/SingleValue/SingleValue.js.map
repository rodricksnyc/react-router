{"version":3,"file":"SingleValue.js","names":["React","numeral","styled","VisWrapper","SingleValue","data","fields","width","height","config","series","name","measures","firstSeries","Array","isArray","color","label","value_format","value","formattedValue","format","SingleValueLayout","div","theme","colors","background","SingleValueContent","fontSizes","xxxlarge","SingleValueTitle","large"],"sources":["../../../src/SingleValue/SingleValue.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\nimport React from 'react'\nimport type { SingleValueProps } from '@looker/visualizations-adapters'\nimport numeral from 'numeral'\nimport styled from 'styled-components'\nimport { VisWrapper } from '@looker/visualizations-adapters'\n\nexport const SingleValue = ({\n  data,\n  fields,\n  width,\n  height,\n  config,\n}: SingleValueProps) => {\n  if (!data) {\n    return null\n  }\n  const { series = {} } = config\n\n  // only allow one measure for single_value\n  const { name } = fields.measures[0]\n  const firstSeries = Array.isArray(series) ? series[0] : series[name || '']\n  const { color, label, value_format } = firstSeries\n  const value: number = data[0][name || '']\n  const formattedValue = numeral(value).format(value_format)\n  return (\n    <VisWrapper>\n      <SingleValueLayout width={width} height={height}>\n        <SingleValueContent color={color}>{formattedValue}</SingleValueContent>\n        {label && <SingleValueTitle color={color}>{label}</SingleValueTitle>}\n      </SingleValueLayout>\n    </VisWrapper>\n  )\n}\n\ntype SingleValueLayoutProps = { width?: number; height?: number }\ntype SingleValueContentProps = { color?: string }\n\nconst SingleValueLayout = styled.div<SingleValueLayoutProps>`\n  align-items: center;\n  background: ${({ theme }) => theme.colors.background};\n  display: grid;\n  grid-template-columns: 1fr;\n  height: ${({ height }) => `${height}px` || `auto`};\n  justify-items: center;\n  width: ${({ width }) => `${width}px` || `auto`};\n`\n\nconst SingleValueContent = styled.div<SingleValueContentProps>`\n  color: ${({ color }) => `${color}`};\n  font-size: ${({ theme }) => theme.fontSizes.xxxlarge};\n`\nconst SingleValueTitle = styled.div<SingleValueContentProps>`\n  color: ${({ color }) => `${color}`};\n  font-size: ${({ theme }) => theme.fontSizes.large};\n  opacity: 50%;\n`\n"],"mappings":";;;;AAIA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,OAAO,MAAM,SAAS;AAC7B,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,UAAU,QAAQ,iCAAiC;AAE5D,OAAO,MAAMC,WAAW,GAAG,CAAC;EAC1BC,IAAI;EACJC,MAAM;EACNC,KAAK;EACLC,MAAM;EACNC;AACgB,CAAC,KAAK;EACtB,IAAI,CAACJ,IAAI,EAAE;IACT,OAAO,IAAI;EACb;EACA,MAAM;IAAEK,MAAM,GAAG,CAAC;EAAE,CAAC,GAAGD,MAAM;;EAG9B,MAAM;IAAEE;EAAK,CAAC,GAAGL,MAAM,CAACM,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAMC,WAAW,GAAGC,KAAK,CAACC,OAAO,CAACL,MAAM,CAAC,GAAGA,MAAM,CAAC,CAAC,CAAC,GAAGA,MAAM,CAACC,IAAI,IAAI,EAAE,CAAC;EAC1E,MAAM;IAAEK,KAAK;IAAEC,KAAK;IAAEC;EAAa,CAAC,GAAGL,WAAW;EAClD,MAAMM,KAAa,GAAGd,IAAI,CAAC,CAAC,CAAC,CAACM,IAAI,IAAI,EAAE,CAAC;EACzC,MAAMS,cAAc,GAAGnB,OAAO,CAACkB,KAAK,CAAC,CAACE,MAAM,CAACH,YAAY,CAAC;EAC1D,OACE,oBAAC,UAAU,QACT,oBAAC,iBAAiB;IAAC,KAAK,EAAEX,KAAM;IAAC,MAAM,EAAEC;EAAO,GAC9C,oBAAC,kBAAkB;IAAC,KAAK,EAAEQ;EAAM,GAAEI,cAAc,CAAsB,EACtEH,KAAK,IAAI,oBAAC,gBAAgB;IAAC,KAAK,EAAED;EAAM,GAAEC,KAAK,CAAoB,CAClD,CACT;AAEjB,CAAC;AAKD,MAAMK,iBAAiB,GAAGpB,MAAM,CAACqB,GAAG;EAAA;EAAA;AAAA,gBAAyB;AAC7D;AACA,gBAAc,CAAyC;AACvD;AACA;AACA,YAAU,CAA0C;AACpD;AACA,WAAS,CAAwC;AACjD,IANgB,CAAC;EAAEC;AAAM,CAAC,KAAKA,KAAK,CAACC,MAAM,CAACC,UAAU,EAG1C,CAAC;EAAElB;AAAO,CAAC,KAAM,GAAEA,MAAO,IAAG,IAAK,MAAK,EAExC,CAAC;EAAED;AAAM,CAAC,KAAM,GAAEA,KAAM,IAAG,IAAK,MAAK,CAC/C;AAED,MAAMoB,kBAAkB,GAAGzB,MAAM,CAACqB,GAAG;EAAA;EAAA;AAAA,kBAA0B;AAC/D,WAAS,CAA4B;AACrC,eAAa,CAA0C;AACvD,IAFW,CAAC;EAAEP;AAAM,CAAC,KAAM,GAAEA,KAAM,EAAC,EACrB,CAAC;EAAEQ;AAAM,CAAC,KAAKA,KAAK,CAACI,SAAS,CAACC,QAAQ,CACrD;AACD,MAAMC,gBAAgB,GAAG5B,MAAM,CAACqB,GAAG;EAAA;EAAA;AAAA,kBAA0B;AAC7D,WAAS,CAA4B;AACrC,eAAa,CAAuC;AACpD;AACA,IAHW,CAAC;EAAEP;AAAM,CAAC,KAAM,GAAEA,KAAM,EAAC,EACrB,CAAC;EAAEQ;AAAM,CAAC,KAAKA,KAAK,CAACI,SAAS,CAACG,KAAK,CAElD"}