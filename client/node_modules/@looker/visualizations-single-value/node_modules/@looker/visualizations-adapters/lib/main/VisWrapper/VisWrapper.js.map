{"version":3,"file":"VisWrapper.js","names":["VisWrapperInternal","forwardRef","ref","legend","props","theme","useTheme","displayName","flexDirection","POSITION_MAP","top","right","left","bottom","POSITION","position","css","VisWrapper","styled"],"sources":["../../../src/VisWrapper/VisWrapper.tsx"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type { ReactNode, Ref } from 'react'\nimport React, { forwardRef } from 'react'\nimport styled, { css, useTheme } from 'styled-components'\nimport { ComponentsProvider } from '@looker/components'\nimport type { CommonCartesianProperties, LegendPositions } from '../types'\n\nexport type VisWrapperProps = {\n  children?: ReactNode\n  legend?: CommonCartesianProperties['legend']\n}\n\nexport type VisWrapperInternalProps = VisWrapperProps & {\n  className?: string\n}\n\nconst VisWrapperInternal = forwardRef(\n  (\n    { legend, ...props }: VisWrapperInternalProps,\n    ref?: Ref<HTMLDivElement>\n  ) => {\n    const theme = useTheme()\n\n    if (!theme) {\n      // Recursively wrap VisWrapper in ComponentsProvider to ensure that\n      // individual chart components can be rendered outside of Looker Components context\n      // without breaking.\n      return (\n        <ComponentsProvider>\n          <VisWrapperInternal {...props} ref={ref} />\n        </ComponentsProvider>\n      )\n    }\n\n    return <div {...props} ref={ref} />\n  }\n)\n\nVisWrapperInternal.displayName = `VisWrapperInternal`\n\nconst flexDirection = ({ legend }: Pick<VisWrapperProps, 'legend'>) => {\n  const POSITION_MAP: Record<LegendPositions, string> = {\n    top: 'column-reverse',\n    right: 'row',\n    left: 'row-reverse',\n    bottom: 'column',\n  }\n\n  const POSITION = legend ? legend.position : 'bottom'\n\n  return css`\n    flex-direction: ${POSITION_MAP[POSITION]};\n    justify-content: ${POSITION === 'left' ? `flex-end` : `flex-start`};\n  `\n}\n\nexport const VisWrapper = styled(VisWrapperInternal)`\n  /*\n    Flex properties primarily used to reposition legend\n    based on prop.\n   */\n  display: flex;\n  flex: 1;\n  ${flexDirection}\n\n  /*\n    This style override allows longer dimension to fully render on x-axis.\n    Without it, long dimension values get cut off (after being rotated).\n  */\n  & > div > svg {\n    overflow: visible;\n  }\n`\n"],"mappings":";;;;;;;;;;;AAMA;AACA;AACA;AAAuD;AAAA;AAAA;AAAA;AAYvD,IAAMA,kBAAkB,GAAG,IAAAC,iBAAU,EACnC,gBAEEC,GAAyB,EACtB;EAAA,IAFDC,MAAM,QAANA,MAAM;IAAKC,KAAK;EAGlB,IAAMC,KAAK,GAAG,IAAAC,0BAAQ,GAAE;EAExB,IAAI,CAACD,KAAK,EAAE;IAIV,OACE,gCAAC,8BAAkB,QACjB,gCAAC,kBAAkB,gCAAKD,KAAK;MAAE,GAAG,EAAEF;IAAI,GAAG,CACxB;EAEzB;EAEA,OAAO,qEAASE,KAAK;IAAE,GAAG,EAAEF;EAAI,GAAG;AACrC,CAAC,CACF;AAEDF,kBAAkB,CAACO,WAAW,uBAAuB;AAErD,IAAMC,aAAa,GAAG,SAAhBA,aAAa,QAAoD;EAAA,IAA9CL,MAAM,SAANA,MAAM;EAC7B,IAAMM,YAA6C,GAAG;IACpDC,GAAG,EAAE,gBAAgB;IACrBC,KAAK,EAAE,KAAK;IACZC,IAAI,EAAE,aAAa;IACnBC,MAAM,EAAE;EACV,CAAC;EAED,IAAMC,QAAQ,GAAGX,MAAM,GAAGA,MAAM,CAACY,QAAQ,GAAG,QAAQ;EAEpD,WAAOC,qBAAG,mJACUP,YAAY,CAACK,QAAQ,CAAC,EACrBA,QAAQ,KAAK,MAAM,4BAA4B;AAEtE,CAAC;AAEM,IAAMG,UAAU,GAAG,IAAAC,4BAAM,EAAClB,kBAAkB,CAAC;EAAA;EAAA;AAAA,ibAOhDQ,aAAa,CAShB;AAAA"}