{"version":3,"file":"sanitizeSDKResponse.spec.js","names":["describe","test","transformedConfig","sanitizeSDKResponse","config","mockSdkConfigResponse","data","mockSdkDataResponse","fields","mockFields","KEYS_TO_REMOVE","forEach","key","expect","not","toHaveProperty"],"sources":["../../../src/configTransformations/sanitizeSDKResponse.spec.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport {\n  mockFields,\n  mockSdkConfigResponse,\n  mockSdkDataResponse,\n} from '../fixtures'\nimport { KEYS_TO_REMOVE, sanitizeSDKResponse } from './sanitizeSDKResponse'\n\ndescribe('sanitizeSDKResponse', () => {\n  test('removes appropriate properties from config object', () => {\n    const transformedConfig = sanitizeSDKResponse({\n      config: mockSdkConfigResponse,\n      data: mockSdkDataResponse,\n      fields: mockFields,\n    })\n\n    // ensure the final output has in fact been stripped of unsupported keys\n    KEYS_TO_REMOVE.forEach((key) =>\n      expect(transformedConfig).not.toHaveProperty(key)\n    )\n  })\n})\n"],"mappings":";;AAKA;AAKA;;AAEAA,QAAQ,CAAC,qBAAqB,EAAE,YAAM;EACpCC,IAAI,CAAC,mDAAmD,EAAE,YAAM;IAC9D,IAAMC,iBAAiB,GAAG,IAAAC,wCAAmB,EAAC;MAC5CC,MAAM,EAAEC,+BAAqB;MAC7BC,IAAI,EAAEC,6BAAmB;MACzBC,MAAM,EAAEC;IACV,CAAC,CAAC;;IAGFC,mCAAc,CAACC,OAAO,CAAC,UAACC,GAAG;MAAA,OACzBC,MAAM,CAACX,iBAAiB,CAAC,CAACY,GAAG,CAACC,cAAc,CAACH,GAAG,CAAC;IAAA,EAClD;EACH,CAAC,CAAC;AACJ,CAAC,CAAC"}