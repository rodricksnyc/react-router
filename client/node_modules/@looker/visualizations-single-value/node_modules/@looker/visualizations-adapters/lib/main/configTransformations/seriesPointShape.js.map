{"version":3,"file":"seriesPointShape.js","names":["seriesPointShape","config","data","fields","series_point_styles","series","restConfig","measures","getMeasureNames","buildArraySeries","s","arraySeries","i","length","merge","shape","buildNamedSeries","namedSeries","reduce","seriesConfig","field","currentFieldSettings","pick","DEFAULT_SERIES_SHAPE","Array","isArray"],"sources":["../../../src/configTransformations/seriesPointShape.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport merge from 'lodash/merge'\nimport pick from 'lodash/pick'\nimport type { CArea, CLine, CLineSeries } from '../adapters'\nimport type { ConfigHelper } from '../types'\nimport { getMeasureNames } from '../utils'\n\n/**\n * Populate series point shapes from series_point_styles response.\n * Merges with named series settings, and sets all array elements to 'circle' unless already set.\n */\nexport const seriesPointShape: ConfigHelper<CLine | CArea> = ({\n  config,\n  data,\n  fields,\n}) => {\n  const { series_point_styles, series = {}, ...restConfig } = config\n  const measures = getMeasureNames(fields)\n\n  const buildArraySeries = (s: CLineSeries[] = []) => {\n    const arraySeries = [...s]\n    for (let i = 0; i < measures.length; i++) {\n      arraySeries[i] = merge({ shape: 'circle' }, arraySeries[i] || {})\n    }\n    return arraySeries\n  }\n\n  const buildNamedSeries = (s: { [k: string]: CLineSeries }) => {\n    const namedSeries = measures.reduce((seriesConfig, field) => {\n      const shape = series_point_styles?.[field]\n      const currentFieldSettings = pick(s, field)\n      const DEFAULT_SERIES_SHAPE = {\n        [field]: { shape: !shape || shape === 'automatic' ? 'circle' : shape },\n      }\n      return merge(seriesConfig, DEFAULT_SERIES_SHAPE, currentFieldSettings)\n    }, {} as { [key: string]: CLineSeries })\n    return namedSeries\n  }\n\n  return {\n    config: {\n      series: Array.isArray(series)\n        ? buildArraySeries(series)\n        : buildNamedSeries(series),\n      ...restConfig,\n    },\n    data,\n    fields,\n  }\n}\n"],"mappings":";;;;;;;;;;AAKA;AACA;AAGA;AAA0C;AAAA;AAAA;AAMnC,IAAMA,gBAA6C,GAAG,SAAhDA,gBAA6C,OAIpD;EAAA,IAHJC,MAAM,QAANA,MAAM;IACNC,IAAI,QAAJA,IAAI;IACJC,MAAM,QAANA,MAAM;EAEN,IAAQC,mBAAmB,GAAiCH,MAAM,CAA1DG,mBAAmB;IAAA,iBAAiCH,MAAM,CAArCI,MAAM;IAANA,MAAM,+BAAG,CAAC,CAAC;IAAKC,UAAU,6CAAKL,MAAM;EAClE,IAAMM,QAAQ,GAAG,IAAAC,sBAAe,EAACL,MAAM,CAAC;EAExC,IAAMM,gBAAgB,GAAG,SAAnBA,gBAAgB,GAA8B;IAAA,IAA1BC,CAAgB,uEAAG,EAAE;IAC7C,IAAMC,WAAW,uCAAOD,CAAC,CAAC;IAC1B,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,QAAQ,CAACM,MAAM,EAAED,CAAC,EAAE,EAAE;MACxCD,WAAW,CAACC,CAAC,CAAC,GAAG,IAAAE,iBAAK,EAAC;QAAEC,KAAK,EAAE;MAAS,CAAC,EAAEJ,WAAW,CAACC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;IACnE;IACA,OAAOD,WAAW;EACpB,CAAC;EAED,IAAMK,gBAAgB,GAAG,SAAnBA,gBAAgB,CAAIN,CAA+B,EAAK;IAC5D,IAAMO,WAAW,GAAGV,QAAQ,CAACW,MAAM,CAAC,UAACC,YAAY,EAAEC,KAAK,EAAK;MAC3D,IAAML,KAAK,GAAGX,mBAAmB,aAAnBA,mBAAmB,uBAAnBA,mBAAmB,CAAGgB,KAAK,CAAC;MAC1C,IAAMC,oBAAoB,GAAG,IAAAC,gBAAI,EAACZ,CAAC,EAAEU,KAAK,CAAC;MAC3C,IAAMG,oBAAoB,wCACvBH,KAAK,EAAG;QAAEL,KAAK,EAAE,CAACA,KAAK,IAAIA,KAAK,KAAK,WAAW,GAAG,QAAQ,GAAGA;MAAM,CAAC,CACvE;MACD,OAAO,IAAAD,iBAAK,EAACK,YAAY,EAAEI,oBAAoB,EAAEF,oBAAoB,CAAC;IACxE,CAAC,EAAE,CAAC,CAAC,CAAmC;IACxC,OAAOJ,WAAW;EACpB,CAAC;EAED,OAAO;IACLhB,MAAM;MACJI,MAAM,EAAEmB,KAAK,CAACC,OAAO,CAACpB,MAAM,CAAC,GACzBI,gBAAgB,CAACJ,MAAM,CAAC,GACxBW,gBAAgB,CAACX,MAAM;IAAC,GACzBC,UAAU,CACd;IACDJ,IAAI,EAAJA,IAAI;IACJC,MAAM,EAANA;EACF,CAAC;AACH,CAAC;AAAA"}