{"version":3,"file":"seriesSize.js","names":["removeInvalidSizeBy","series","fields","measureNames","getMeasureNames","entries","Object","key","seriesEntry","size_by","set","includes","seriesSize","config","data","size_by_field","restConfig","measures","defaultSizeByValue","length","buildNamedSeries","s","namedSeries","reduce","seriesConfig","field","currentFieldSettings","pick","defaultSizeBy","draftSeries","merge","buildArraySeries","arraySeries","i","currentSeries","Array","isArray"],"sources":["../../../src/configTransformations/seriesSize.ts"],"sourcesContent":["/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport merge from 'lodash/merge'\nimport pick from 'lodash/pick'\nimport set from 'lodash/set'\nimport type { CScatter, CScatterSeries } from '../adapters'\nimport type { ConfigHelper, Fields } from '../types'\nimport { getMeasureNames } from '../utils'\n\ntype NamedSeries = { [key: string]: CScatterSeries }\ntype ArraySeries = CScatterSeries[]\n\n/**\n * A small helper function to remove size by value if it references a field that doesn't\n * exist in the actual response.\n */\nfunction removeInvalidSizeBy(\n  series: CScatter['series'] = {},\n  fields: Fields\n): CScatter['series'] {\n  const measureNames = getMeasureNames(fields)\n  const entries = Object.entries(series || {})\n  for (const [key, seriesEntry] of entries) {\n    const { size_by } = seriesEntry\n    set(\n      series,\n      [key, 'size_by'],\n      size_by && measureNames.includes(size_by) ? size_by : false\n    )\n  }\n  return series\n}\n\n/**\n * Populate series size_by attribute from the size_by_field response\n * Works with both named series and array series options.\n */\nexport const seriesSize: ConfigHelper<CScatter> = ({\n  config,\n  data,\n  fields,\n}) => {\n  const { size_by_field, series = {}, ...restConfig } = config\n\n  const measures = getMeasureNames(fields)\n\n  const defaultSizeByValue =\n    size_by_field && size_by_field.length ? size_by_field : false\n\n  const buildNamedSeries = (s: NamedSeries) => {\n    const namedSeries: NamedSeries = measures.reduce((seriesConfig, field) => {\n      const currentFieldSettings = pick(s, field)\n      const defaultSizeBy = { [field]: { size_by: defaultSizeByValue } }\n      const draftSeries = merge(\n        seriesConfig,\n        defaultSizeBy,\n        currentFieldSettings\n      )\n\n      return draftSeries\n    }, {})\n\n    return removeInvalidSizeBy(namedSeries, fields)\n  }\n\n  const buildArraySeries = (s: ArraySeries) => {\n    const arraySeries = [...s]\n    for (let i = 0; i < measures.length; i++) {\n      const currentSeries = arraySeries[i] || {}\n      const draftSeries: CScatterSeries = {\n        size_by: defaultSizeByValue,\n        ...currentSeries,\n      }\n      arraySeries[i] = draftSeries\n    }\n    return removeInvalidSizeBy(arraySeries, fields)\n  }\n\n  return {\n    config: {\n      series: Array.isArray(series)\n        ? buildArraySeries(series)\n        : buildNamedSeries(series),\n      ...restConfig,\n    },\n    data,\n    fields,\n  }\n}\n"],"mappings":";;;;;;;;;;;AA0BA;AACA;AACA;AAGA;AAA0C;AAAA;AAAA;AAS1C,SAASA,mBAAmB,GAGN;EAAA,IAFpBC,MAA0B,uEAAG,CAAC,CAAC;EAAA,IAC/BC,MAAc;EAEd,IAAMC,YAAY,GAAG,IAAAC,sBAAe,EAACF,MAAM,CAAC;EAC5C,IAAMG,OAAO,GAAGC,MAAM,CAACD,OAAO,CAACJ,MAAM,IAAI,CAAC,CAAC,CAAC;EAC5C,4BAAiCI,OAAO,8BAAE;IAArC;MAAOE,IAAG;MAAEC,WAAW;IAC1B,IAAQC,OAAO,GAAKD,WAAW,CAAvBC,OAAO;IACf,IAAAC,eAAG,EACDT,MAAM,EACN,CAACM,IAAG,EAAE,SAAS,CAAC,EAChBE,OAAO,IAAIN,YAAY,CAACQ,QAAQ,CAACF,OAAO,CAAC,GAAGA,OAAO,GAAG,KAAK,CAC5D;EACH;EACA,OAAOR,MAAM;AACf;;AAMO,IAAMW,UAAkC,GAAG,SAArCA,UAAkC,OAIzC;EAAA,IAHJC,MAAM,QAANA,MAAM;IACNC,IAAI,QAAJA,IAAI;IACJZ,MAAM,QAANA,MAAM;EAEN,IAAQa,aAAa,GAAiCF,MAAM,CAApDE,aAAa;IAAA,iBAAiCF,MAAM,CAArCZ,MAAM;IAANA,MAAM,+BAAG,CAAC,CAAC;IAAKe,UAAU,6CAAKH,MAAM;EAE5D,IAAMI,QAAQ,GAAG,IAAAb,sBAAe,EAACF,MAAM,CAAC;EAExC,IAAMgB,kBAAkB,GACtBH,aAAa,IAAIA,aAAa,CAACI,MAAM,GAAGJ,aAAa,GAAG,KAAK;EAE/D,IAAMK,gBAAgB,GAAG,SAAnBA,gBAAgB,CAAIC,CAAc,EAAK;IAC3C,IAAMC,WAAwB,GAAGL,QAAQ,CAACM,MAAM,CAAC,UAACC,YAAY,EAAEC,KAAK,EAAK;MACxE,IAAMC,oBAAoB,GAAG,IAAAC,gBAAI,EAACN,CAAC,EAAEI,KAAK,CAAC;MAC3C,IAAMG,aAAa,wCAAMH,KAAK,EAAG;QAAEhB,OAAO,EAAES;MAAmB,CAAC,CAAE;MAClE,IAAMW,WAAW,GAAG,IAAAC,iBAAK,EACvBN,YAAY,EACZI,aAAa,EACbF,oBAAoB,CACrB;MAED,OAAOG,WAAW;IACpB,CAAC,EAAE,CAAC,CAAC,CAAC;IAEN,OAAO7B,mBAAmB,CAACsB,WAAW,EAAEpB,MAAM,CAAC;EACjD,CAAC;EAED,IAAM6B,gBAAgB,GAAG,SAAnBA,gBAAgB,CAAIV,CAAc,EAAK;IAC3C,IAAMW,WAAW,uCAAOX,CAAC,CAAC;IAC1B,KAAK,IAAIY,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGhB,QAAQ,CAACE,MAAM,EAAEc,CAAC,EAAE,EAAE;MACxC,IAAMC,aAAa,GAAGF,WAAW,CAACC,CAAC,CAAC,IAAI,CAAC,CAAC;MAC1C,IAAMJ,WAA2B;QAC/BpB,OAAO,EAAES;MAAkB,GACxBgB,aAAa,CACjB;MACDF,WAAW,CAACC,CAAC,CAAC,GAAGJ,WAAW;IAC9B;IACA,OAAO7B,mBAAmB,CAACgC,WAAW,EAAE9B,MAAM,CAAC;EACjD,CAAC;EAED,OAAO;IACLW,MAAM;MACJZ,MAAM,EAAEkC,KAAK,CAACC,OAAO,CAACnC,MAAM,CAAC,GACzB8B,gBAAgB,CAAC9B,MAAM,CAAC,GACxBmB,gBAAgB,CAACnB,MAAM;IAAC,GACzBe,UAAU,CACd;IACDF,IAAI,EAAJA,IAAI;IACJZ,MAAM,EAANA;EACF,CAAC;AACH,CAAC;AAAA"}