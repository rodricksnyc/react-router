{"version":3,"file":"seriesVisible.js","names":["seriesVisible","config","data","fields","type","hidden_fields","series","plot_size_by_field","size_by_field","restConfig","measures","getMeasureNames","buildArraySeries","s","arraySeries","i","length","visible","currentVisibility","set","buildNamedSeries","namedSeries","field","defaultVisibility","includes","Array","isArray"],"sources":["../../../src/configTransformations/seriesVisible.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport set from 'lodash/set'\nimport type {\n  ConfigHelper,\n  CSeriesBasic,\n  CommonCartesianProperties,\n} from '../types'\nimport { getMeasureNames } from '../utils'\n\n/**\n * Populate series visibility from hidden_series response.\n * Only merges api visibility values for named series.\n * Array series fills default visibility:true when not otherwise set.\n */\nexport const seriesVisible: ConfigHelper<CommonCartesianProperties> = ({\n  config,\n  data,\n  fields,\n}) => {\n  const {\n    type,\n    hidden_fields = [],\n    series = {},\n    plot_size_by_field,\n    size_by_field,\n    ...restConfig\n  } = config\n  const measures = getMeasureNames(fields)\n\n  const buildArraySeries = (s: CSeriesBasic[] = []) => {\n    const arraySeries = [...s]\n    for (let i = 0; i < measures.length; i++) {\n      const { visible: currentVisibility = true } = arraySeries[i] || {}\n      set(arraySeries, [i, 'visible'], currentVisibility)\n    }\n    return arraySeries\n  }\n\n  const buildNamedSeries = (s: { [k: string]: CSeriesBasic }) => {\n    const namedSeries = { ...s }\n    for (const field of measures) {\n      // For scatter charts, series used by the size_by behavior are hidden by default\n      const defaultVisibility = !(\n        (type === 'scatter' &&\n          size_by_field === field &&\n          !plot_size_by_field &&\n          fields.measures.length > 1) ||\n        hidden_fields.includes(field)\n      )\n\n      const { visible } = namedSeries[field]\n      set(\n        namedSeries,\n        [field, 'visible'],\n        typeof visible === 'boolean' ? visible : defaultVisibility\n      )\n    }\n    return namedSeries\n  }\n\n  return {\n    config: {\n      series: Array.isArray(series)\n        ? buildArraySeries(series)\n        : buildNamedSeries(series),\n      plot_size_by_field,\n      size_by_field,\n      type,\n      ...restConfig,\n    },\n    data,\n    fields,\n  }\n}\n"],"mappings":";;;;;;;;;;AAKA;AAMA;AAA0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAOnC,IAAMA,aAAsD,GAAG,SAAzDA,aAAsD,OAI7D;EAAA,IAHJC,MAAM,QAANA,MAAM;IACNC,IAAI,QAAJA,IAAI;IACJC,MAAM,QAANA,MAAM;EAEN,IACEC,IAAI,GAMFH,MAAM,CANRG,IAAI;IAAA,wBAMFH,MAAM,CALRI,aAAa;IAAbA,aAAa,sCAAG,EAAE;IAAA,iBAKhBJ,MAAM,CAJRK,MAAM;IAANA,MAAM,+BAAG,CAAC,CAAC;IACXC,kBAAkB,GAGhBN,MAAM,CAHRM,kBAAkB;IAClBC,aAAa,GAEXP,MAAM,CAFRO,aAAa;IACVC,UAAU,6CACXR,MAAM;EACV,IAAMS,QAAQ,GAAG,IAAAC,sBAAe,EAACR,MAAM,CAAC;EAExC,IAAMS,gBAAgB,GAAG,SAAnBA,gBAAgB,GAA+B;IAAA,IAA3BC,CAAiB,uEAAG,EAAE;IAC9C,IAAMC,WAAW,uCAAOD,CAAC,CAAC;IAC1B,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,QAAQ,CAACM,MAAM,EAAED,CAAC,EAAE,EAAE;MACxC,YAA8CD,WAAW,CAACC,CAAC,CAAC,IAAI,CAAC,CAAC;QAAA,uBAA1DE,OAAO;QAAEC,iBAAiB,+BAAG,IAAI;MACzC,IAAAC,eAAG,EAACL,WAAW,EAAE,CAACC,CAAC,EAAE,SAAS,CAAC,EAAEG,iBAAiB,CAAC;IACrD;IACA,OAAOJ,WAAW;EACpB,CAAC;EAED,IAAMM,gBAAgB,GAAG,SAAnBA,gBAAgB,CAAIP,CAAgC,EAAK;IAC7D,IAAMQ,WAAW,qBAAQR,CAAC,CAAE;IAAA,2CACRH,QAAQ;MAAA;IAAA;MAA5B,oDAA8B;QAAA,IAAnBY,KAAK;QAEd,IAAMC,iBAAiB,GAAG,EACvBnB,IAAI,KAAK,SAAS,IACjBI,aAAa,KAAKc,KAAK,IACvB,CAACf,kBAAkB,IACnBJ,MAAM,CAACO,QAAQ,CAACM,MAAM,GAAG,CAAC,IAC5BX,aAAa,CAACmB,QAAQ,CAACF,KAAK,CAAC,CAC9B;QAED,IAAQL,OAAO,GAAKI,WAAW,CAACC,KAAK,CAAC,CAA9BL,OAAO;QACf,IAAAE,eAAG,EACDE,WAAW,EACX,CAACC,KAAK,EAAE,SAAS,CAAC,EAClB,OAAOL,OAAO,KAAK,SAAS,GAAGA,OAAO,GAAGM,iBAAiB,CAC3D;MACH;IAAC;MAAA;IAAA;MAAA;IAAA;IACD,OAAOF,WAAW;EACpB,CAAC;EAED,OAAO;IACLpB,MAAM;MACJK,MAAM,EAAEmB,KAAK,CAACC,OAAO,CAACpB,MAAM,CAAC,GACzBM,gBAAgB,CAACN,MAAM,CAAC,GACxBc,gBAAgB,CAACd,MAAM,CAAC;MAC5BC,kBAAkB,EAAlBA,kBAAkB;MAClBC,aAAa,EAAbA,aAAa;MACbJ,IAAI,EAAJA;IAAI,GACDK,UAAU,CACd;IACDP,IAAI,EAAJA,IAAI;IACJC,MAAM,EAANA;EACF,CAAC;AACH,CAAC;AAAA"}