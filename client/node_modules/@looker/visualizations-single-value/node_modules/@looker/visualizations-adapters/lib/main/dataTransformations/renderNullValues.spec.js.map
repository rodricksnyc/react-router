{"version":3,"file":"renderNullValues.spec.js","names":["describe","mockData","it","nullValueZero","data","fields","mockFields","config","type","render_null_values","draftData","expect","toMatchInlineSnapshot","toEqual"],"sources":["../../../src/dataTransformations/renderNullValues.spec.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport { nullValueZero } from './nullValueZero'\nimport { mockFields } from '../fixtures'\n\ndescribe('nullValueZero', () => {\n  const mockData = [\n    {\n      'orders.created_month': '2019-11',\n      'orders.count': 1,\n      'orders.average_total_amount_of_order_usd': null,\n    },\n    {\n      'orders.created_month': '2014-07',\n      'orders.count': null,\n      'orders.average_total_amount_of_order_usd': null,\n    },\n    {\n      'orders.created_month': '2017-09',\n      'orders.count': 4000,\n      'orders.average_total_amount_of_order_usd': 15,\n    },\n  ]\n\n  it('replaces null values with 0 when render_null_values is true', () => {\n    const { data: draftData } = nullValueZero({\n      data: mockData,\n      fields: mockFields,\n      config: { type: 'line', render_null_values: true },\n    })\n\n    expect(draftData).toMatchInlineSnapshot(`\n      Array [\n        Object {\n          \"orders.average_total_amount_of_order_usd\": 0,\n          \"orders.count\": 1,\n          \"orders.created_month\": \"2019-11\",\n        },\n        Object {\n          \"orders.average_total_amount_of_order_usd\": 0,\n          \"orders.count\": 0,\n          \"orders.created_month\": \"2014-07\",\n        },\n        Object {\n          \"orders.average_total_amount_of_order_usd\": 15,\n          \"orders.count\": 4000,\n          \"orders.created_month\": \"2017-09\",\n        },\n      ]\n    `)\n  })\n\n  it('passes through unmodified data when render_null_values is false', () => {\n    const { data: draftData } = nullValueZero({\n      data: mockData,\n      fields: mockFields,\n      config: { type: 'line', render_null_values: false },\n    })\n\n    expect(draftData).toEqual(mockData)\n  })\n})\n"],"mappings":";;AAKA;AACA;;AAEAA,QAAQ,CAAC,eAAe,EAAE,YAAM;EAC9B,IAAMC,QAAQ,GAAG,CACf;IACE,sBAAsB,EAAE,SAAS;IACjC,cAAc,EAAE,CAAC;IACjB,0CAA0C,EAAE;EAC9C,CAAC,EACD;IACE,sBAAsB,EAAE,SAAS;IACjC,cAAc,EAAE,IAAI;IACpB,0CAA0C,EAAE;EAC9C,CAAC,EACD;IACE,sBAAsB,EAAE,SAAS;IACjC,cAAc,EAAE,IAAI;IACpB,0CAA0C,EAAE;EAC9C,CAAC,CACF;EAEDC,EAAE,CAAC,6DAA6D,EAAE,YAAM;IACtE,qBAA4B,IAAAC,6BAAa,EAAC;QACxCC,IAAI,EAAEH,QAAQ;QACdI,MAAM,EAAEC,oBAAU;QAClBC,MAAM,EAAE;UAAEC,IAAI,EAAE,MAAM;UAAEC,kBAAkB,EAAE;QAAK;MACnD,CAAC,CAAC;MAJYC,SAAS,kBAAfN,IAAI;IAMZO,MAAM,CAACD,SAAS,CAAC,CAACE,qBAAqB,0iBAkBrC;EACJ,CAAC,CAAC;EAEFV,EAAE,CAAC,iEAAiE,EAAE,YAAM;IAC1E,sBAA4B,IAAAC,6BAAa,EAAC;QACxCC,IAAI,EAAEH,QAAQ;QACdI,MAAM,EAAEC,oBAAU;QAClBC,MAAM,EAAE;UAAEC,IAAI,EAAE,MAAM;UAAEC,kBAAkB,EAAE;QAAM;MACpD,CAAC,CAAC;MAJYC,SAAS,mBAAfN,IAAI;IAMZO,MAAM,CAACD,SAAS,CAAC,CAACG,OAAO,CAACZ,QAAQ,CAAC;EACrC,CAAC,CAAC;AACJ,CAAC,CAAC"}