{"version":3,"file":"sortByDateTime.js","names":["sortByDateTime","data","fields","config","dimension","dimensions","draftData","Array","from","isTimeframeDataset","length","is_timeframe","sortBy","d","Date","name"],"sources":["../../../src/dataTransformations/sortByDateTime.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type { ConfigHelper, CAll } from '../types'\nimport sortBy from 'lodash/sortBy'\n\n/**\n * Data transformation enforces chronological order on the dataset\n * when dealing with a timeframe-based dataset with a single dimension.\n */\n\nexport const sortByDateTime: ConfigHelper<CAll> = ({\n  data,\n  fields,\n  config,\n}) => {\n  const dimension = fields.dimensions[0]\n  const draftData = Array.from(data)\n  const isTimeframeDataset =\n    fields?.dimensions?.length === 1 && dimension.is_timeframe\n\n  return {\n    data: isTimeframeDataset\n      ? sortBy(draftData, [(d) => new Date(d[dimension.name])])\n      : draftData,\n    fields,\n    config,\n  }\n}\n"],"mappings":";;;;;;;AAMA;;AAOO,IAAMA,cAAkC,GAAG,SAArCA,cAAkC,OAIzC;EAAA;EAAA,IAHJC,IAAI,QAAJA,IAAI;IACJC,MAAM,QAANA,MAAM;IACNC,MAAM,QAANA,MAAM;EAEN,IAAMC,SAAS,GAAGF,MAAM,CAACG,UAAU,CAAC,CAAC,CAAC;EACtC,IAAMC,SAAS,GAAGC,KAAK,CAACC,IAAI,CAACP,IAAI,CAAC;EAClC,IAAMQ,kBAAkB,GACtB,CAAAP,MAAM,aAANA,MAAM,6CAANA,MAAM,CAAEG,UAAU,uDAAlB,mBAAoBK,MAAM,MAAK,CAAC,IAAIN,SAAS,CAACO,YAAY;EAE5D,OAAO;IACLV,IAAI,EAAEQ,kBAAkB,GACpB,IAAAG,kBAAM,EAACN,SAAS,EAAE,CAAC,UAACO,CAAC;MAAA,OAAK,IAAIC,IAAI,CAACD,CAAC,CAACT,SAAS,CAACW,IAAI,CAAC,CAAC;IAAA,EAAC,CAAC,GACvDT,SAAS;IACbJ,MAAM,EAANA,MAAM;IACNC,MAAM,EAANA;EACF,CAAC;AACH,CAAC;AAAA"}