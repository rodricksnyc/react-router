{"version":3,"file":"cartesian.js","names":[],"sources":["../../../src/types/cartesian.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type { CSeriesBasic, LegendPositions } from '../types'\n\nexport type CommonAxisConfig = {\n  /**\n   * Render grid lines in chart\n   */\n  gridlines?: boolean\n  /**\n   * Axis label content, disabled with `false`\n   */\n  label?: string | false\n  /**\n   * Render axis values\n   */\n  values?: boolean\n}\n\nexport type XAxisConfig = CommonAxisConfig & {\n  /**\n   * Reverse data direction\n   */\n  reversed?: boolean\n}\n\nexport type YAxisEndpoint = number | 'auto' | undefined\nexport type YAxisConfig = CommonAxisConfig & {\n  /**\n   * Set min and max values for Y-Axis\n   */\n  range?: [YAxisEndpoint, YAxisEndpoint]\n}\n\nexport type CartesianLegend = {\n  /**\n   * Determines position of legend items\n   */\n  position: LegendPositions\n  /**\n   * Width in pixels when legend is left or right positioned\n   */\n  width?: number\n}\n\nexport type CommonCartesianProperties = {\n  /**\n   * Toggle tooltips on hover\n   */\n  tooltips?: boolean\n  /**\n   * Configure legend properties, or disable it altogether by setting value to false.\n   */\n  legend?: false | CartesianLegend\n  /**\n   * Customize the series settings either by an ordered array or a named object.\n   * Can be used like series: [{color: '#000000'}] or series: { name: { color: '#000000' }}\n   */\n  series?: CSeriesBasic[] | { [key: string]: CSeriesBasic }\n  /**\n   * Configure an array of x-axis settings. Charts will only render a single x-axis for now.\n   */\n  x_axis?: XAxisConfig[]\n  /**\n   * Configure an array of y-axis settings.\n   */\n  y_axis?: YAxisConfig[]\n}\n"],"mappings":""}