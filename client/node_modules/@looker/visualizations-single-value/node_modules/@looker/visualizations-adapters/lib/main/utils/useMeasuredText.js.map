{"version":3,"file":"useMeasuredText.js","names":["useMeasuredText","text","theme","fontSize","fontFamily","useState","bottom","height","left","right","toJSON","noop","top","width","x","y","elementRect","setElementRect","useLayoutEffect","textWrapper","document","createElement","textNode","createTextNode","style","appendChild","body","componentIsMounted","req","requestAnimationFrame","getBoundingClientRect","removeChild","cancelAnimationFrame","contains"],"sources":["../../../src/utils/useMeasuredText.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport { useState, useLayoutEffect } from 'react'\nimport noop from 'lodash/noop'\n\nexport interface TextTheme {\n  fontSize: number | string\n  fontFamily: string\n}\n\n/*\n * get the physicial dimensions of a string of string content in a browser\n */\nexport const useMeasuredText = (text: string, theme: TextTheme) => {\n  const { fontSize, fontFamily } = theme\n\n  const [elementRect, setElementRect] = useState<DOMRect>({\n    bottom: 0,\n    height: 10,\n    left: 0,\n    right: 0,\n    toJSON: noop,\n    top: 0,\n    width: 10,\n    x: 0,\n    y: 0,\n  })\n\n  useLayoutEffect(() => {\n    const textWrapper = document.createElement('SPAN')\n    const textNode = document.createTextNode(text)\n    textWrapper.style.fontSize =\n      typeof fontSize === 'number' ? `${fontSize}px` : fontSize\n    textWrapper.style.fontFamily = fontFamily\n    textWrapper.appendChild(textNode)\n    document.body.appendChild(textWrapper)\n\n    // allow measurement to be cancelled when component unmounts\n    let componentIsMounted = true\n\n    const req = requestAnimationFrame(() => {\n      if (componentIsMounted) {\n        const elementRect = textWrapper.getBoundingClientRect()\n        setElementRect(elementRect)\n        document.body.removeChild(textWrapper)\n      }\n    })\n    return () => {\n      // prevent asyncronous methods from updating state\n      componentIsMounted = false\n      cancelAnimationFrame(req)\n      if (document.body.contains(textWrapper)) {\n        document.body.removeChild(textWrapper)\n      }\n    }\n  }, [text, fontFamily, fontSize])\n\n  return elementRect\n}\n"],"mappings":";;;;;;;;AAKA;AACA;;AAUO,IAAMA,eAAe,GAAG,SAAlBA,eAAe,CAAIC,IAAY,EAAEC,KAAgB,EAAK;EACjE,IAAQC,QAAQ,GAAiBD,KAAK,CAA9BC,QAAQ;IAAEC,UAAU,GAAKF,KAAK,CAApBE,UAAU;EAE5B,gBAAsC,IAAAC,eAAQ,EAAU;MACtDC,MAAM,EAAE,CAAC;MACTC,MAAM,EAAE,EAAE;MACVC,IAAI,EAAE,CAAC;MACPC,KAAK,EAAE,CAAC;MACRC,MAAM,EAAEC,gBAAI;MACZC,GAAG,EAAE,CAAC;MACNC,KAAK,EAAE,EAAE;MACTC,CAAC,EAAE,CAAC;MACJC,CAAC,EAAE;IACL,CAAC,CAAC;IAAA;IAVKC,WAAW;IAAEC,cAAc;EAYlC,IAAAC,sBAAe,EAAC,YAAM;IACpB,IAAMC,WAAW,GAAGC,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC;IAClD,IAAMC,QAAQ,GAAGF,QAAQ,CAACG,cAAc,CAACtB,IAAI,CAAC;IAC9CkB,WAAW,CAACK,KAAK,CAACrB,QAAQ,GACxB,OAAOA,QAAQ,KAAK,QAAQ,aAAMA,QAAQ,UAAOA,QAAQ;IAC3DgB,WAAW,CAACK,KAAK,CAACpB,UAAU,GAAGA,UAAU;IACzCe,WAAW,CAACM,WAAW,CAACH,QAAQ,CAAC;IACjCF,QAAQ,CAACM,IAAI,CAACD,WAAW,CAACN,WAAW,CAAC;;IAGtC,IAAIQ,kBAAkB,GAAG,IAAI;IAE7B,IAAMC,GAAG,GAAGC,qBAAqB,CAAC,YAAM;MACtC,IAAIF,kBAAkB,EAAE;QACtB,IAAMX,YAAW,GAAGG,WAAW,CAACW,qBAAqB,EAAE;QACvDb,cAAc,CAACD,YAAW,CAAC;QAC3BI,QAAQ,CAACM,IAAI,CAACK,WAAW,CAACZ,WAAW,CAAC;MACxC;IACF,CAAC,CAAC;IACF,OAAO,YAAM;MAEXQ,kBAAkB,GAAG,KAAK;MAC1BK,oBAAoB,CAACJ,GAAG,CAAC;MACzB,IAAIR,QAAQ,CAACM,IAAI,CAACO,QAAQ,CAACd,WAAW,CAAC,EAAE;QACvCC,QAAQ,CAACM,IAAI,CAACK,WAAW,CAACZ,WAAW,CAAC;MACxC;IACF,CAAC;EACH,CAAC,EAAE,CAAClB,IAAI,EAAEG,UAAU,EAAED,QAAQ,CAAC,CAAC;EAEhC,OAAOa,WAAW;AACpB,CAAC;AAAA"}