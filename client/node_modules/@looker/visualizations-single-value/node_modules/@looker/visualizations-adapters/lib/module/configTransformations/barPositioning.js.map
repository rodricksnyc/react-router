{"version":3,"file":"barPositioning.js","names":["GROUP_MODES","default","grouped","normal","overlay","percent","stacked","barPositioning","config","data","fields","positioning","stacking","restConfig","currentPositioning"],"sources":["../../../src/configTransformations/barPositioning.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type { CBar, CColumn } from '../adapters'\nimport type { ConfigHelper, RawApiConfigResponse } from '../types'\n\ntype AllKeys = RawApiConfigResponse['stacking'] | 'default'\n\nconst GROUP_MODES: Record<AllKeys, CBar['positioning']> = {\n  default: 'grouped',\n  grouped: 'grouped',\n  normal: 'stacked',\n  overlay: 'grouped',\n  percent: 'percent',\n  stacked: 'stacked',\n}\n\n/**\n * Convert 'stacking' prop to 'positioning' and set Bar chart default value\n */\nexport const barPositioning: ConfigHelper<CBar | CColumn> = ({\n  config,\n  data,\n  fields,\n}) => {\n  const { positioning, stacking, ...restConfig } = config\n\n  const currentPositioning = positioning || stacking || ''\n\n  return {\n    config: {\n      ...restConfig,\n      positioning:\n        GROUP_MODES[currentPositioning as AllKeys] || GROUP_MODES.default,\n    },\n    data,\n    fields,\n  }\n}\n"],"mappings":";;;;;;AAUA,MAAMA,WAAiD,GAAG;EACxDC,OAAO,EAAE,SAAS;EAClBC,OAAO,EAAE,SAAS;EAClBC,MAAM,EAAE,SAAS;EACjBC,OAAO,EAAE,SAAS;EAClBC,OAAO,EAAE,SAAS;EAClBC,OAAO,EAAE;AACX,CAAC;;AAKD,OAAO,MAAMC,cAA4C,GAAG,CAAC;EAC3DC,MAAM;EACNC,IAAI;EACJC;AACF,CAAC,KAAK;EACJ,MAAM;MAAEC,WAAW;MAAEC;IAAwB,CAAC,GAAGJ,MAAM;IAArBK,UAAU,4BAAKL,MAAM;EAEvD,MAAMM,kBAAkB,GAAGH,WAAW,IAAIC,QAAQ,IAAI,EAAE;EAExD,OAAO;IACLJ,MAAM,kCACDK,UAAU;MACbF,WAAW,EACTX,WAAW,CAACc,kBAAkB,CAAY,IAAId,WAAW,CAACC;IAAO,EACpE;IACDQ,IAAI;IACJC;EACF,CAAC;AACH,CAAC"}