{"version":3,"file":"dimensionSeriesColors.spec.js","names":["dimensionSeriesColors","mockLineConfig","mockFields","mockSdkDataResponse","tabularResponse","tabularData","describe","it","config","configResult","data","fields","series","expect","Object","values","length","toEqual","color"],"sources":["../../../src/configTransformations/dimensionSeriesColors.spec.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport { dimensionSeriesColors } from './dimensionSeriesColors'\nimport { mockLineConfig, mockFields, mockSdkDataResponse } from '../fixtures'\nimport { tabularResponse } from '../utils'\nimport type { CSeriesBasic } from '../types'\n\nconst tabularData = tabularResponse(mockSdkDataResponse)\n\ntype ObjectSeries = { [k: string]: CSeriesBasic }\ntype ArraySeries = CSeriesBasic[]\n\ndescribe('dimensionSeriesColors', () => {\n  describe('series as object', () => {\n    it('sets a unique color for up to 50 data points', () => {\n      const { config: configResult } = dimensionSeriesColors({\n        data: tabularData,\n        fields: mockFields,\n        config: { ...mockLineConfig, series: {} },\n      })\n\n      expect(Object.values(configResult.series as ObjectSeries).length).toEqual(\n        50\n      )\n      expect((configResult.series as ObjectSeries)['2019-12-22']).toEqual({\n        color: '#6c43e0',\n      })\n    })\n\n    it('preserves user series overrides', () => {\n      const { config: configResult } = dimensionSeriesColors({\n        data: tabularData,\n        fields: mockFields,\n        config: {\n          ...mockLineConfig,\n          series: { '2019-12-22': { color: '#00FF00' } },\n        },\n      })\n\n      expect((configResult.series as ObjectSeries)['2019-12-22']).toEqual({\n        color: '#00FF00',\n      })\n    })\n  })\n\n  describe('series as array', () => {\n    it('sets a unique color for up to 50 data points', () => {\n      const { config: configResult } = dimensionSeriesColors({\n        data: tabularData,\n        fields: mockFields,\n        config: { ...mockLineConfig, series: [] },\n      })\n\n      expect((configResult.series as ArraySeries).length).toEqual(50)\n      expect((configResult.series as ArraySeries)[0]).toEqual({\n        color: '#6c43e0',\n      })\n    })\n\n    it('preserves user series overrides', () => {\n      const { config: configResult } = dimensionSeriesColors({\n        data: tabularData,\n        fields: mockFields,\n        config: {\n          ...mockLineConfig,\n          series: [{ color: '#00FF00' }],\n        },\n      })\n\n      expect((configResult.series as ArraySeries)[0]).toEqual({\n        color: '#00FF00',\n      })\n    })\n  })\n})\n"],"mappings":";;;;AAKA,SAASA,qBAAqB,QAAQ,yBAAyB;AAC/D,SAASC,cAAc,EAAEC,UAAU,EAAEC,mBAAmB,QAAQ,aAAa;AAC7E,SAASC,eAAe,QAAQ,UAAU;AAG1C,MAAMC,WAAW,GAAGD,eAAe,CAACD,mBAAmB,CAAC;AAKxDG,QAAQ,CAAC,uBAAuB,EAAE,MAAM;EACtCA,QAAQ,CAAC,kBAAkB,EAAE,MAAM;IACjCC,EAAE,CAAC,8CAA8C,EAAE,MAAM;MACvD,MAAM;QAAEC,MAAM,EAAEC;MAAa,CAAC,GAAGT,qBAAqB,CAAC;QACrDU,IAAI,EAAEL,WAAW;QACjBM,MAAM,EAAET,UAAU;QAClBM,MAAM,kCAAOP,cAAc;UAAEW,MAAM,EAAE,CAAC;QAAC;MACzC,CAAC,CAAC;MAEFC,MAAM,CAACC,MAAM,CAACC,MAAM,CAACN,YAAY,CAACG,MAAM,CAAiB,CAACI,MAAM,CAAC,CAACC,OAAO,CACvE,EAAE,CACH;MACDJ,MAAM,CAAEJ,YAAY,CAACG,MAAM,CAAkB,YAAY,CAAC,CAAC,CAACK,OAAO,CAAC;QAClEC,KAAK,EAAE;MACT,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFX,EAAE,CAAC,iCAAiC,EAAE,MAAM;MAC1C,MAAM;QAAEC,MAAM,EAAEC;MAAa,CAAC,GAAGT,qBAAqB,CAAC;QACrDU,IAAI,EAAEL,WAAW;QACjBM,MAAM,EAAET,UAAU;QAClBM,MAAM,kCACDP,cAAc;UACjBW,MAAM,EAAE;YAAE,YAAY,EAAE;cAAEM,KAAK,EAAE;YAAU;UAAE;QAAC;MAElD,CAAC,CAAC;MAEFL,MAAM,CAAEJ,YAAY,CAACG,MAAM,CAAkB,YAAY,CAAC,CAAC,CAACK,OAAO,CAAC;QAClEC,KAAK,EAAE;MACT,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFZ,QAAQ,CAAC,iBAAiB,EAAE,MAAM;IAChCC,EAAE,CAAC,8CAA8C,EAAE,MAAM;MACvD,MAAM;QAAEC,MAAM,EAAEC;MAAa,CAAC,GAAGT,qBAAqB,CAAC;QACrDU,IAAI,EAAEL,WAAW;QACjBM,MAAM,EAAET,UAAU;QAClBM,MAAM,kCAAOP,cAAc;UAAEW,MAAM,EAAE;QAAE;MACzC,CAAC,CAAC;MAEFC,MAAM,CAAEJ,YAAY,CAACG,MAAM,CAAiBI,MAAM,CAAC,CAACC,OAAO,CAAC,EAAE,CAAC;MAC/DJ,MAAM,CAAEJ,YAAY,CAACG,MAAM,CAAiB,CAAC,CAAC,CAAC,CAACK,OAAO,CAAC;QACtDC,KAAK,EAAE;MACT,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFX,EAAE,CAAC,iCAAiC,EAAE,MAAM;MAC1C,MAAM;QAAEC,MAAM,EAAEC;MAAa,CAAC,GAAGT,qBAAqB,CAAC;QACrDU,IAAI,EAAEL,WAAW;QACjBM,MAAM,EAAET,UAAU;QAClBM,MAAM,kCACDP,cAAc;UACjBW,MAAM,EAAE,CAAC;YAAEM,KAAK,EAAE;UAAU,CAAC;QAAC;MAElC,CAAC,CAAC;MAEFL,MAAM,CAAEJ,YAAY,CAACG,MAAM,CAAiB,CAAC,CAAC,CAAC,CAACK,OAAO,CAAC;QACtDC,KAAK,EAAE;MACT,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC"}