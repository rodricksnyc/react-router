{"version":3,"file":"sanitizeSDKResponse.spec.js","names":["mockFields","mockSdkConfigResponse","mockSdkDataResponse","KEYS_TO_REMOVE","sanitizeSDKResponse","describe","test","transformedConfig","config","data","fields","forEach","key","expect","not","toHaveProperty"],"sources":["../../../src/configTransformations/sanitizeSDKResponse.spec.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport {\n  mockFields,\n  mockSdkConfigResponse,\n  mockSdkDataResponse,\n} from '../fixtures'\nimport { KEYS_TO_REMOVE, sanitizeSDKResponse } from './sanitizeSDKResponse'\n\ndescribe('sanitizeSDKResponse', () => {\n  test('removes appropriate properties from config object', () => {\n    const transformedConfig = sanitizeSDKResponse({\n      config: mockSdkConfigResponse,\n      data: mockSdkDataResponse,\n      fields: mockFields,\n    })\n\n    // ensure the final output has in fact been stripped of unsupported keys\n    KEYS_TO_REMOVE.forEach((key) =>\n      expect(transformedConfig).not.toHaveProperty(key)\n    )\n  })\n})\n"],"mappings":";;AAKA,SACEA,UAAU,EACVC,qBAAqB,EACrBC,mBAAmB,QACd,aAAa;AACpB,SAASC,cAAc,EAAEC,mBAAmB,QAAQ,uBAAuB;AAE3EC,QAAQ,CAAC,qBAAqB,EAAE,MAAM;EACpCC,IAAI,CAAC,mDAAmD,EAAE,MAAM;IAC9D,MAAMC,iBAAiB,GAAGH,mBAAmB,CAAC;MAC5CI,MAAM,EAAEP,qBAAqB;MAC7BQ,IAAI,EAAEP,mBAAmB;MACzBQ,MAAM,EAAEV;IACV,CAAC,CAAC;;IAGFG,cAAc,CAACQ,OAAO,CAAEC,GAAG,IACzBC,MAAM,CAACN,iBAAiB,CAAC,CAACO,GAAG,CAACC,cAAc,CAACH,GAAG,CAAC,CAClD;EACH,CAAC,CAAC;AACJ,CAAC,CAAC"}