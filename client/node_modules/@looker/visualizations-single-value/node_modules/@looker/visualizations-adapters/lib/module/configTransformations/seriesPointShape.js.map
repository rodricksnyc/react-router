{"version":3,"file":"seriesPointShape.js","names":["merge","pick","getMeasureNames","seriesPointShape","config","data","fields","series_point_styles","series","restConfig","measures","buildArraySeries","s","arraySeries","i","length","shape","buildNamedSeries","namedSeries","reduce","seriesConfig","field","currentFieldSettings","DEFAULT_SERIES_SHAPE","Array","isArray"],"sources":["../../../src/configTransformations/seriesPointShape.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport merge from 'lodash/merge'\nimport pick from 'lodash/pick'\nimport type { CArea, CLine, CLineSeries } from '../adapters'\nimport type { ConfigHelper } from '../types'\nimport { getMeasureNames } from '../utils'\n\n/**\n * Populate series point shapes from series_point_styles response.\n * Merges with named series settings, and sets all array elements to 'circle' unless already set.\n */\nexport const seriesPointShape: ConfigHelper<CLine | CArea> = ({\n  config,\n  data,\n  fields,\n}) => {\n  const { series_point_styles, series = {}, ...restConfig } = config\n  const measures = getMeasureNames(fields)\n\n  const buildArraySeries = (s: CLineSeries[] = []) => {\n    const arraySeries = [...s]\n    for (let i = 0; i < measures.length; i++) {\n      arraySeries[i] = merge({ shape: 'circle' }, arraySeries[i] || {})\n    }\n    return arraySeries\n  }\n\n  const buildNamedSeries = (s: { [k: string]: CLineSeries }) => {\n    const namedSeries = measures.reduce((seriesConfig, field) => {\n      const shape = series_point_styles?.[field]\n      const currentFieldSettings = pick(s, field)\n      const DEFAULT_SERIES_SHAPE = {\n        [field]: { shape: !shape || shape === 'automatic' ? 'circle' : shape },\n      }\n      return merge(seriesConfig, DEFAULT_SERIES_SHAPE, currentFieldSettings)\n    }, {} as { [key: string]: CLineSeries })\n    return namedSeries\n  }\n\n  return {\n    config: {\n      series: Array.isArray(series)\n        ? buildArraySeries(series)\n        : buildNamedSeries(series),\n      ...restConfig,\n    },\n    data,\n    fields,\n  }\n}\n"],"mappings":";;;;;;AAKA,OAAOA,KAAK,MAAM,cAAc;AAChC,OAAOC,IAAI,MAAM,aAAa;AAG9B,SAASC,eAAe,QAAQ,UAAU;;AAM1C,OAAO,MAAMC,gBAA6C,GAAG,CAAC;EAC5DC,MAAM;EACNC,IAAI;EACJC;AACF,CAAC,KAAK;EACJ,MAAM;MAAEC,mBAAmB;MAAEC,MAAM,GAAG,CAAC;IAAiB,CAAC,GAAGJ,MAAM;IAArBK,UAAU,4BAAKL,MAAM;EAClE,MAAMM,QAAQ,GAAGR,eAAe,CAACI,MAAM,CAAC;EAExC,MAAMK,gBAAgB,GAAG,CAACC,CAAgB,GAAG,EAAE,KAAK;IAClD,MAAMC,WAAW,GAAG,CAAC,GAAGD,CAAC,CAAC;IAC1B,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,QAAQ,CAACK,MAAM,EAAED,CAAC,EAAE,EAAE;MACxCD,WAAW,CAACC,CAAC,CAAC,GAAGd,KAAK,CAAC;QAAEgB,KAAK,EAAE;MAAS,CAAC,EAAEH,WAAW,CAACC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;IACnE;IACA,OAAOD,WAAW;EACpB,CAAC;EAED,MAAMI,gBAAgB,GAAIL,CAA+B,IAAK;IAC5D,MAAMM,WAAW,GAAGR,QAAQ,CAACS,MAAM,CAAC,CAACC,YAAY,EAAEC,KAAK,KAAK;MAC3D,MAAML,KAAK,GAAGT,mBAAmB,aAAnBA,mBAAmB,uBAAnBA,mBAAmB,CAAGc,KAAK,CAAC;MAC1C,MAAMC,oBAAoB,GAAGrB,IAAI,CAACW,CAAC,EAAES,KAAK,CAAC;MAC3C,MAAME,oBAAoB,GAAG;QAC3B,CAACF,KAAK,GAAG;UAAEL,KAAK,EAAE,CAACA,KAAK,IAAIA,KAAK,KAAK,WAAW,GAAG,QAAQ,GAAGA;QAAM;MACvE,CAAC;MACD,OAAOhB,KAAK,CAACoB,YAAY,EAAEG,oBAAoB,EAAED,oBAAoB,CAAC;IACxE,CAAC,EAAE,CAAC,CAAC,CAAmC;IACxC,OAAOJ,WAAW;EACpB,CAAC;EAED,OAAO;IACLd,MAAM;MACJI,MAAM,EAAEgB,KAAK,CAACC,OAAO,CAACjB,MAAM,CAAC,GACzBG,gBAAgB,CAACH,MAAM,CAAC,GACxBS,gBAAgB,CAACT,MAAM;IAAC,GACzBC,UAAU,CACd;IACDJ,IAAI;IACJC;EACF,CAAC;AACH,CAAC"}