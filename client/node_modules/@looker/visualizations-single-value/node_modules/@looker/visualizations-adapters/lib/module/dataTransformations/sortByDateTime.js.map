{"version":3,"file":"sortByDateTime.js","names":["sortBy","sortByDateTime","data","fields","config","dimension","dimensions","draftData","Array","from","isTimeframeDataset","length","is_timeframe","d","Date","name"],"sources":["../../../src/dataTransformations/sortByDateTime.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport type { ConfigHelper, CAll } from '../types'\nimport sortBy from 'lodash/sortBy'\n\n/**\n * Data transformation enforces chronological order on the dataset\n * when dealing with a timeframe-based dataset with a single dimension.\n */\n\nexport const sortByDateTime: ConfigHelper<CAll> = ({\n  data,\n  fields,\n  config,\n}) => {\n  const dimension = fields.dimensions[0]\n  const draftData = Array.from(data)\n  const isTimeframeDataset =\n    fields?.dimensions?.length === 1 && dimension.is_timeframe\n\n  return {\n    data: isTimeframeDataset\n      ? sortBy(draftData, [(d) => new Date(d[dimension.name])])\n      : draftData,\n    fields,\n    config,\n  }\n}\n"],"mappings":";;AAMA,OAAOA,MAAM,MAAM,eAAe;;AAOlC,OAAO,MAAMC,cAAkC,GAAG,CAAC;EACjDC,IAAI;EACJC,MAAM;EACNC;AACF,CAAC,KAAK;EAAA;EACJ,MAAMC,SAAS,GAAGF,MAAM,CAACG,UAAU,CAAC,CAAC,CAAC;EACtC,MAAMC,SAAS,GAAGC,KAAK,CAACC,IAAI,CAACP,IAAI,CAAC;EAClC,MAAMQ,kBAAkB,GACtB,CAAAP,MAAM,aAANA,MAAM,6CAANA,MAAM,CAAEG,UAAU,uDAAlB,mBAAoBK,MAAM,MAAK,CAAC,IAAIN,SAAS,CAACO,YAAY;EAE5D,OAAO;IACLV,IAAI,EAAEQ,kBAAkB,GACpBV,MAAM,CAACO,SAAS,EAAE,CAAEM,CAAC,IAAK,IAAIC,IAAI,CAACD,CAAC,CAACR,SAAS,CAACU,IAAI,CAAC,CAAC,CAAC,CAAC,GACvDR,SAAS;IACbJ,MAAM;IACNC;EACF,CAAC;AACH,CAAC"}