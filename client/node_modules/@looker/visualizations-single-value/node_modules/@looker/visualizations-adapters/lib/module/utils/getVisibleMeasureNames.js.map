{"version":3,"file":"getVisibleMeasureNames.js","names":["isArray","DEFAULT_EMPTY_FIELDS","getVisibleMeasureNames","fields","config","measures","visibleMeasures","filter","measure","index","series","visible","name","map"],"sources":["../../../src/utils/getVisibleMeasureNames.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport isArray from 'lodash/isArray'\nimport { DEFAULT_EMPTY_FIELDS } from '.'\nimport type { CCartesian, Fields } from '../types'\n\n/**\n * This function extracts measure names of visible measures from the fields object.\n *\n * @param fields is the Fields response as returned by the SDK\n * @returns an array of strings names\n */\n\nexport const getVisibleMeasureNames = (\n  fields: Fields = DEFAULT_EMPTY_FIELDS,\n  config: CCartesian\n): string[] => {\n  const { measures = [] } = fields\n\n  const visibleMeasures = measures.filter((measure, index) => {\n    /**\n     * Because config.series is optional, we need to check for its existence\n     * before including it in visibility logic.\n     */\n    if (config.series) {\n      return isArray(config.series)\n        ? config?.series?.[index]?.visible\n        : config?.series?.[measure.name]?.visible\n    }\n\n    /**\n     * If we get here, we don't have enough information to hide the given series,\n     * so just return true\n     */\n    return true\n  })\n\n  return visibleMeasures.map((measure) => measure.name)\n}\n"],"mappings":";;AAKA,OAAOA,OAAO,MAAM,gBAAgB;AACpC,SAASC,oBAAoB,QAAQ,GAAG;;AAUxC,OAAO,MAAMC,sBAAsB,GAAG,CACpCC,MAAc,GAAGF,oBAAoB,EACrCG,MAAkB,KACL;EACb,MAAM;IAAEC,QAAQ,GAAG;EAAG,CAAC,GAAGF,MAAM;EAEhC,MAAMG,eAAe,GAAGD,QAAQ,CAACE,MAAM,CAAC,CAACC,OAAO,EAAEC,KAAK,KAAK;IAK1D,IAAIL,MAAM,CAACM,MAAM,EAAE;MAAA;MACjB,OAAOV,OAAO,CAACI,MAAM,CAACM,MAAM,CAAC,GACzBN,MAAM,aAANA,MAAM,yCAANA,MAAM,CAAEM,MAAM,2EAAd,eAAiBD,KAAK,CAAC,yDAAvB,qBAAyBE,OAAO,GAChCP,MAAM,aAANA,MAAM,0CAANA,MAAM,CAAEM,MAAM,6EAAd,gBAAiBF,OAAO,CAACI,IAAI,CAAC,0DAA9B,sBAAgCD,OAAO;IAC7C;;IAMA,OAAO,IAAI;EACb,CAAC,CAAC;EAEF,OAAOL,eAAe,CAACO,GAAG,CAAEL,OAAO,IAAKA,OAAO,CAACI,IAAI,CAAC;AACvD,CAAC"}