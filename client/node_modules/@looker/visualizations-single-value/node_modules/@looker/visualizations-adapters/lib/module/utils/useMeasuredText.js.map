{"version":3,"file":"useMeasuredText.js","names":["useState","useLayoutEffect","noop","useMeasuredText","text","theme","fontSize","fontFamily","elementRect","setElementRect","bottom","height","left","right","toJSON","top","width","x","y","textWrapper","document","createElement","textNode","createTextNode","style","appendChild","body","componentIsMounted","req","requestAnimationFrame","getBoundingClientRect","removeChild","cancelAnimationFrame","contains"],"sources":["../../../src/utils/useMeasuredText.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 Google LLC\n * SPDX-License-Identifier: MIT\n */\n\nimport { useState, useLayoutEffect } from 'react'\nimport noop from 'lodash/noop'\n\nexport interface TextTheme {\n  fontSize: number | string\n  fontFamily: string\n}\n\n/*\n * get the physicial dimensions of a string of string content in a browser\n */\nexport const useMeasuredText = (text: string, theme: TextTheme) => {\n  const { fontSize, fontFamily } = theme\n\n  const [elementRect, setElementRect] = useState<DOMRect>({\n    bottom: 0,\n    height: 10,\n    left: 0,\n    right: 0,\n    toJSON: noop,\n    top: 0,\n    width: 10,\n    x: 0,\n    y: 0,\n  })\n\n  useLayoutEffect(() => {\n    const textWrapper = document.createElement('SPAN')\n    const textNode = document.createTextNode(text)\n    textWrapper.style.fontSize =\n      typeof fontSize === 'number' ? `${fontSize}px` : fontSize\n    textWrapper.style.fontFamily = fontFamily\n    textWrapper.appendChild(textNode)\n    document.body.appendChild(textWrapper)\n\n    // allow measurement to be cancelled when component unmounts\n    let componentIsMounted = true\n\n    const req = requestAnimationFrame(() => {\n      if (componentIsMounted) {\n        const elementRect = textWrapper.getBoundingClientRect()\n        setElementRect(elementRect)\n        document.body.removeChild(textWrapper)\n      }\n    })\n    return () => {\n      // prevent asyncronous methods from updating state\n      componentIsMounted = false\n      cancelAnimationFrame(req)\n      if (document.body.contains(textWrapper)) {\n        document.body.removeChild(textWrapper)\n      }\n    }\n  }, [text, fontFamily, fontSize])\n\n  return elementRect\n}\n"],"mappings":";;AAKA,SAASA,QAAQ,EAAEC,eAAe,QAAQ,OAAO;AACjD,OAAOC,IAAI,MAAM,aAAa;AAU9B,OAAO,MAAMC,eAAe,GAAG,CAACC,IAAY,EAAEC,KAAgB,KAAK;EACjE,MAAM;IAAEC,QAAQ;IAAEC;EAAW,CAAC,GAAGF,KAAK;EAEtC,MAAM,CAACG,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAU;IACtDU,MAAM,EAAE,CAAC;IACTC,MAAM,EAAE,EAAE;IACVC,IAAI,EAAE,CAAC;IACPC,KAAK,EAAE,CAAC;IACRC,MAAM,EAAEZ,IAAI;IACZa,GAAG,EAAE,CAAC;IACNC,KAAK,EAAE,EAAE;IACTC,CAAC,EAAE,CAAC;IACJC,CAAC,EAAE;EACL,CAAC,CAAC;EAEFjB,eAAe,CAAC,MAAM;IACpB,MAAMkB,WAAW,GAAGC,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC;IAClD,MAAMC,QAAQ,GAAGF,QAAQ,CAACG,cAAc,CAACnB,IAAI,CAAC;IAC9Ce,WAAW,CAACK,KAAK,CAAClB,QAAQ,GACxB,OAAOA,QAAQ,KAAK,QAAQ,GAAI,GAAEA,QAAS,IAAG,GAAGA,QAAQ;IAC3Da,WAAW,CAACK,KAAK,CAACjB,UAAU,GAAGA,UAAU;IACzCY,WAAW,CAACM,WAAW,CAACH,QAAQ,CAAC;IACjCF,QAAQ,CAACM,IAAI,CAACD,WAAW,CAACN,WAAW,CAAC;;IAGtC,IAAIQ,kBAAkB,GAAG,IAAI;IAE7B,MAAMC,GAAG,GAAGC,qBAAqB,CAAC,MAAM;MACtC,IAAIF,kBAAkB,EAAE;QACtB,MAAMnB,WAAW,GAAGW,WAAW,CAACW,qBAAqB,EAAE;QACvDrB,cAAc,CAACD,WAAW,CAAC;QAC3BY,QAAQ,CAACM,IAAI,CAACK,WAAW,CAACZ,WAAW,CAAC;MACxC;IACF,CAAC,CAAC;IACF,OAAO,MAAM;MAEXQ,kBAAkB,GAAG,KAAK;MAC1BK,oBAAoB,CAACJ,GAAG,CAAC;MACzB,IAAIR,QAAQ,CAACM,IAAI,CAACO,QAAQ,CAACd,WAAW,CAAC,EAAE;QACvCC,QAAQ,CAACM,IAAI,CAACK,WAAW,CAACZ,WAAW,CAAC;MACxC;IACF,CAAC;EACH,CAAC,EAAE,CAACf,IAAI,EAAEG,UAAU,EAAED,QAAQ,CAAC,CAAC;EAEhC,OAAOE,WAAW;AACpB,CAAC"}